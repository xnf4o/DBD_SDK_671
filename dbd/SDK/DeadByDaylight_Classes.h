#pragma once

/**
 * Name: dbd
 * Version: 6711
 */

#ifdef _MSC_VER
	#pragma pack(push, 0x01)
#endif

namespace CG
{
	// --------------------------------------------------
	// # Classes
	// --------------------------------------------------
	/**
	 * Class DeadByDaylight.InteractionDefinition
	 * Size -> 0x0400 (FullSize[0x0618] - InheritedSize[0x0218])
	 */
	class UInteractionDefinition : public USceneComponent
	{
	public:
		unsigned char                                              UnknownData_ASMZ[0x8];                                   // 0x0218(0x0008) Fix Super Size
		unsigned char                                              UnknownData_LZD4[0x38];                                  // 0x0220(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              InteractionID;                                           // 0x0258(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SnapTime;                                                // 0x0268(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ResetCameraDuringSnap;                                   // 0x026C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsInteractionCancelled;                                  // 0x026D(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       AllowStartInteractionFromHeldInput;                      // 0x026E(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       StopInteractionOnMontageComplete;                        // 0x026F(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       StopInteractionOnMontageBlendingOut;                     // 0x0270(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       StopInteractionOnTimerExpire;                            // 0x0271(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       StopInteractionOnHeightDelta;                            // 0x0272(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       StopEnterMontageOnExit;                                  // 0x0273(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       StopUpdateMontageOnExit;                                 // 0x0274(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IgnoreStrafeAnimFix;                                     // 0x0275(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EInteractionAnimation                                      InteractionAnimation;                                    // 0x0276(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       CamperCanInteract;                                       // 0x0277(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       SlasherCanInteract;                                      // 0x0278(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       AllowInputPersistence;                                   // 0x0279(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       snapPosition;                                            // 0x027A(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       snapRotation;                                            // 0x027B(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SnapStopDistance;                                        // 0x027C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       TestClearPathDuringSnap;                                 // 0x0280(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       CheckInteractableIsInPlayerView;                         // 0x0281(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HUO2[0x2];                                   // 0x0282(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CheckInteractableInViewSphereSweepRadius;                // 0x0284(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             CheckInteractableInViewOffset;                           // 0x0288(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CheckInteractableInViewOffsetDistanceToHitPoint;         // 0x0294(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsInterruptibleIfTestClearPathDuringSnapFails;           // 0x0298(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       TestPlayerOrientationOnSnap;                             // 0x0299(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ScaleEnterAnimationToTime;                               // 0x029A(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ScaleMainAnimationToTime;                                // 0x029B(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ScaleExitAnimationToTime;                                // 0x029C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESnapBackType                                              SnapBackType;                                            // 0x029D(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESnapBackPositionType                                      SnapBackPositionType;                                    // 0x029E(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UZKI[0x1];                                   // 0x029F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector2D                                           SnapBackPositionOffset;                                  // 0x02A0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       SnapToInitialRotationDuringSnapBack;                     // 0x02A8(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       UseStartSnapTimeForSnapExitTime;                         // 0x02A9(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       CanInteractWhileIncapacitated;                           // 0x02AA(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       CanInteractWhileCloaked;                                 // 0x02AB(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       CanInteractWhileAttacking;                               // 0x02AC(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       CanInteractWhileChainLinked;                             // 0x02AD(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       CanInteractWhileShocked;                                 // 0x02AE(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       CanInteractWhileUnhookingSelf;                           // 0x02AF(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       CanInteractWhileCarrying;                                // 0x02B0(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       AllowNavigation;                                         // 0x02B1(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       AllowNavigationInput;                                    // 0x02B2(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       AllowRotation;                                           // 0x02B3(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       UseCameraMontageMode;                                    // 0x02B4(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       OwnerBlocksAttack;                                       // 0x02B5(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsHighPriority;                                          // 0x02B6(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       AllowOverridingWhenNotForced;                            // 0x02B7(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IgnoreOverlapOnInteractable;                             // 0x02B8(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       UseAuthoritativeMovement;                                // 0x02B9(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       CanBeAuthoritativePushedDuringEnter;                     // 0x02BA(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       CanBeAuthoritativePushedDuringUpdate;                    // 0x02BB(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       CanBeAuthoritativePushedDuringExit;                      // 0x02BC(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       CanAuthoritativePush;                                    // 0x02BD(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       CancelOnHit;                                             // 0x02BE(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       CancelOnAttack;                                          // 0x02BF(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       HideItem;                                                // 0x02C0(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       AutoBindToParentInteractor;                              // 0x02C1(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       AutoBindToParentZone;                                    // 0x02C2(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B58D[0x1];                                   // 0x02C3(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CancelOnMoveInitialDelay;                                // 0x02C4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CancelOnMoveInput;                                       // 0x02C8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       CancelOnMoveInputOnlyWhenRunning;                        // 0x02CC(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KO3E[0x3];                                   // 0x02CD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<float>                                              ProgressBasedSkillChecks;                                // 0x02D0(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       CanCrouch;                                               // 0x02E0(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       AffectsStillness;                                        // 0x02E1(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ConsideredIdle;                                          // 0x02E2(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       BlockSelfInteract;                                       // 0x02E3(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InteractionTime;                                         // 0x02E4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EInputInteractionType                                      interactionInputType;                                    // 0x02E8(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       StopInteractionOnInputRelease;                           // 0x02E9(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       AllowHitMontageWhenInteracting;                          // 0x02EA(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ShowBasicInteractionIcon;                                // 0x02EB(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DRV2[0x4];                                   // 0x02EC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UInterruptionDefinition*>                     _interruptionDefinitions;                                // 0x02F0(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnInteractionEnteredDelegate;                            // 0x0300(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S17G[0x30];                                  // 0x0310(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnInteractionFinishedDelegate;                           // 0x0340(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnInteractionInterruptedStartDelegate;                   // 0x0350(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnInteractionInterruptedStartedDelegate;                 // 0x0360(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnInteractionInterruptedEndDelegate;                     // 0x0370(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnInteractionAnimNotify;                                 // 0x0380(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		bool                                                       DebugUnavailability;                                     // 0x0390(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EInputInteractionType                                      SecondaryActionInputType;                                // 0x0391(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z8Z1[0x1E];                                  // 0x0392(0x001E) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveFloat*                                         NavigationSpeedCurveEnter;                               // 0x03B0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCurveFloat*                                         NavigationSpeedCurve;                                    // 0x03B8(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCurveFloat*                                         NavigationSpeedCurveExit;                                // 0x03C0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _shouldCheckInteractedUpon;                              // 0x03C8(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		EInteractionOwnership                                      OwnershipUsability;                                      // 0x03C9(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_PF18[0x2];                                   // 0x03CA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ExitInteractionTime;                                     // 0x03CC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       ApplyModifiersToExitTime;                                // 0x03D0(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_QRWO[0x7];                                   // 0x03D1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                InteractionDescriptionText;                              // 0x03D8(0x0018) Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected
		bool                                                       InteractionCanBeToggled;                                 // 0x03F0(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       IgnoreSprintToCancelSetting;                             // 0x03F1(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       ForceWithSprintToCancelSetting;                          // 0x03F2(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_LRV0[0x1];                                   // 0x03F3(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      InteractionHeightDeltaMax;                               // 0x03F4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      MaximumVelocity;                                         // 0x03F8(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_P3VG[0x4];                                   // 0x03FC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAnimationMontageDescriptor                         EnterMontage;                                            // 0x0400(0x0020) Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected
		struct FAnimationMontageDescriptor                         UpdateMontage;                                           // 0x0420(0x0020) Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected
		struct FAnimationMontageDescriptor                         ExitMontage;                                             // 0x0440(0x0020) Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected
		TArray<class FName>                                        EnterMontageVariantCycle;                                // 0x0460(0x0010) Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected
		TArray<class FName>                                        UpdateMontageVariantCycle;                               // 0x0470(0x0010) Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected
		TArray<class FName>                                        ExitMontageVariantCycle;                                 // 0x0480(0x0010) Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected
		class FName                                                SnapSocketName;                                          // 0x0490(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _canBeAttachedToAnyZone;                                 // 0x049C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _isInterruptibleBySacrifice;                             // 0x049D(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       IgnoreStun;                                              // 0x049E(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_6BIA[0x1];                                   // 0x049F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGameplayTagContainer                               _tags;                                                   // 0x04A0(0x0020) Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		struct FGameplayTag                                        _objectStateTag;                                         // 0x04C0(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_IBKL[0x4];                                   // 0x04CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class FName, struct FSecondaryInteractionProperties>  _secondaryInteractions;                                  // 0x04D0(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		bool                                                       _useHoldPrompt;                                          // 0x0520(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _allowInteractionInNarrowSpaces;                         // 0x0521(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _allowIKSensorDuringInteraction;                         // 0x0522(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _overrideSlashableRelativeLocation;                      // 0x0523(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FVector                                             _slashableRelativeLocation;                              // 0x0524(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _startUpdateMontageDuringEnter;                          // 0x0530(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_RBH2[0x7];                                   // 0x0531(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UInteractor*                                         _interactor;                                             // 0x0538(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<class UInteractionDefinition*>                      _mutuallyExclusiveInteractionsClient;                    // 0x0540(0x0010) ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
		struct FActivationDefinition                               _activationDefinition;                                   // 0x0550(0x0028) Edit, NativeAccessSpecifierPrivate
		class UPrimitiveComponent*                                 _zone;                                                   // 0x0578(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		EInputInteractionType                                      _cancelInputType;                                        // 0x0580(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_VGDK[0x7];                                   // 0x0581(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGameplayTagContainer                               _preventingTags;                                         // 0x0588(0x0020) Edit, NativeAccessSpecifierPrivate
		struct FGameplayTagContainer                               _disablingTags;                                          // 0x05A8(0x0020) Edit, NativeAccessSpecifierPrivate
		TArray<class UPlayerInteractionHandler*>                   _evaluatingInteractionHandlers;                          // 0x05C8(0x0010) ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
		struct FSecondaryInteractionProperties                     DEPRECATED_SecondaryInteractionProperties;               // 0x05D8(0x0038) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_7BPW[0x8];                                   // 0x0610(0x0008) Fix size for supers

	public:
		void UpdateSlashableLocation(class ADBDPlayer* Player);
		bool ShouldStartUpdateMontageDuringEnter(class ADBDPlayer* Character);
		void SetSecondaryActionInputType(EInputInteractionType inputType);
		void ResetSlashableLocation(class ADBDPlayer* Player);
		void RemoveDisablingTags(const struct FGameplayTag& tagToRemove);
		void OnUpdateMontageStart(class ADBDPlayer* Player);
		void OnInterruptorUpdateStart(class UInterruptionDefinition* currentInterruption, class ADBDPlayer* interruptor, class ADBDPlayer* interruptee);
		void OnInteractionUpdateTick(class ADBDPlayer* Player, float DeltaTime);
		void OnInteractionUpdateStart(class ADBDPlayer* Player);
		void OnInteractionUpdateMontageReachedMiddle(class ADBDPlayer* Player);
		void OnInteractionUpdateEnd(class ADBDPlayer* Player);
		void OnInteractionInterruptStarted(class ADBDPlayer* Player, class UInterruptionDefinition* currentInterruption, class ADBDPlayer* interruptingPlayer);
		void OnInteractionInterruptStart(class ADBDPlayer* Player, class UInterruptionDefinition* currentInterruption, class ADBDPlayer* interruptingPlayer);
		void OnInteractionInterruptEnd(class ADBDPlayer* Player, class UInterruptionDefinition* currentInterruption, class ADBDPlayer* interruptingPlayer);
		void OnInteractionInit(class ADBDPlayer* Player);
		void OnInteractionFinished(class ADBDPlayer* Player, bool hasInteractionStarted);
		void OnInteractionExitTick(class ADBDPlayer* Player, float DeltaTime);
		void OnInteractionExitStart(class ADBDPlayer* Player);
		void OnInteractionExitEnd(class ADBDPlayer* Player);
		void OnInteractionEnterTick(class ADBDPlayer* Player, float DeltaTime);
		void OnInteractionEnterStart(class ADBDPlayer* Player, float actualSnapTime);
		void OnInteractionEnterEnd(class ADBDPlayer* Player);
		void OnInteractionCancelled(class ADBDPlayer* Player);
		void OnInteractionAnimNotifyEvent(const class FName& NotifyId, class ADBDPlayer* Player);
		bool IsSupportedCharacterType(class ADBDPlayer* Player);
		bool IsInterruptionPossible(class ADBDPlayer* interruptor, class ADBDPlayer* interruptee, class UInterruptionDefinition* interruption);
		bool IsInteractionUsingOffering(class ADBDPlayer* Player);
		bool IsInteractionPossibleClient(class ADBDPlayer* Player, EInputInteractionType interactionType);
		bool IsInteractionPossibleBP(class ADBDPlayer* Player, EInputInteractionType interactionType);
		bool IsInteractionPossible(class ADBDPlayer* Player, EInputInteractionType interactionType, bool performClientCheck, bool performHeightCheck);
		bool IsInteractionDone(class ADBDPlayer* Player, EInputInteractionType interactionType);
		bool IsInteractableInPlayerView(class ADBDPlayer* Player);
		bool IsInputPressed(class ADBDPlayer* Player);
		bool IsCharacterFacingInteractorDirection(class ADBDPlayer* Player);
		bool IsCancelable(class ADBDPlayer* Player);
		void InteractionInterruptedDelegate__DelegateSignature();
		void InteractionFinishedDelegate__DelegateSignature();
		void InteractionEnteredDelegate__DelegateSignature(class ADBDPlayer* Player);
		struct FAnimationMontageDescriptor GetUpdateMontage(class ADBDPlayer* Player);
		float GetUpdateAnimationPlayRate(class ADBDPlayer* Player);
		struct FMontagePlaybackDefinition GetUpdateAnimationPlayBackDefinition(class ADBDPlayer* Player, bool Follower);
		float GetSnapTimeAtStart(class ADBDPlayer* Player);
		float GetSnapTime(class ADBDPlayer* Player);
		class FName GetSnapSocketName(class ADBDPlayer* Player);
		struct FVector GetSnapPointPositionAtStart(class ADBDPlayer* Player);
		struct FVector GetSnapPointPosition(class ADBDPlayer* Player);
		float GetSnapDistanceAtStart(class ADBDPlayer* Player);
		float GetSnapDistance(class ADBDPlayer* Player);
		struct FVector GetSlashableRelativeLocation();
		EInputInteractionType GetSecondaryActionInputType(class UObject* WorldContextObject);
		struct FRotator GetRotationToSnapPointAtStart(class ADBDPlayer* Player);
		struct FRotator GetRotationToSnapPoint(class ADBDPlayer* Player);
		class ADBDPlayer* GetPlayerDependency(class ADBDPlayer* interactingPlayer);
		TArray<class UInterruptionDefinition*> GetInterruptionDefinitions();
		class UInteractor* GetInteractor();
		float GetInteractionTimeMultiplier(class ADBDPlayer* Character);
		float GetInteractionTime(class ADBDPlayer* Character);
		class FString GetInteractionText(class ADBDPlayer* Player);
		float GetInteractionExitTime(class ADBDPlayer* Character);
		class FText GetInteractionDescriptionText();
		class AInteractable* GetInteractable();
		struct FVector GetFocalPointPosition(class ADBDPlayer* Player);
		struct FAnimationMontageDescriptor GetExitMontage(class ADBDPlayer* Player);
		float GetExitAnimationPlayRate(class ADBDPlayer* Player);
		struct FMontagePlaybackDefinition GetExitAnimationPlayBackDefinition(class ADBDPlayer* Player, bool Follower);
		struct FAnimationMontageDescriptor GetEnterMontage(class ADBDPlayer* Player);
		struct FMontagePlaybackDefinition GetEnterAnimationPlayBackDefinition(class ADBDPlayer* Player, bool Follower);
		float GetChargePercent();
		bool GetAllowNavigation(class ADBDPlayer* Player);
		struct FVector GetActualSnapPointPositionAtStart(class ADBDPlayer* Player);
		struct FVector GetActualSnapPointPosition(class ADBDPlayer* Player);
		TArray<class AActor*> GetActorsToIgnoreOverlap();
		float GetActorHeightDelta(class ADBDPlayer* Player);
		float GetActionSpeedMultiplier(class ADBDPlayer* Character);
		bool DoesPlayerHaveClearPath(class ADBDPlayer* Player);
		void CompleteCharge(class ADBDPlayer* Character);
		EInteractionComparisonPriority ComparePriorityToInteraction(class UInteractionDefinition* Interaction);
		bool CanOverrideInteraction(class UInteractionDefinition* Interaction);
		float CalculateSnapTimeForConstantSpeed(class ADBDPlayer* Player, float Speed);
		float CalculateSnapTimeForConstantMaxNormalMovementSpeed(class ADBDPlayer* Player, float speedBoost);
		void Authority_OnInteractionAuthorized(class ADBDPlayer* Player);
		void AttachToZone(class UPrimitiveComponent* zone);
		void AttachToInteractor(class UInteractor* Interactor);
		void AddMutuallyExclusiveInteraction(class UInteractionDefinition* Interaction);
		void AddDisablingTags(const struct FGameplayTag& tagToAdd);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ChargeableInteractionDefinition
	 * Size -> 0x0128 (FullSize[0x0740] - InheritedSize[0x0618])
	 */
	class UChargeableInteractionDefinition : public UInteractionDefinition
	{
	public:
		unsigned char                                              UnknownData_XEJE[0x8];                                   // 0x0618(0x0008) Fix Super Size
		unsigned char                                              UnknownData_2FZO[0x10];                                  // 0x0620(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             SkillCheckResponseAestheticDelegate;                     // 0x0630(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             SkillCheckResponseAuthorityDelegate;                     // 0x0640(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		bool                                                       StopInteractionOnChargeComplete;                         // 0x0650(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       HasProgressivelyHarderSkillChecks;                       // 0x0651(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D7CM[0x2];                                   // 0x0652(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ProgressiveDifficultyModifier;                           // 0x0654(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EChargeableInteractionBarType                              ProgressBarType;                                         // 0x0658(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5MHT[0x7];                                   // 0x0659(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<float>                                              ProgressPips;                                            // 0x0660(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       HideProgressBar;                                         // 0x0670(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ShowItemIcon;                                            // 0x0671(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9WX2[0x6];                                   // 0x0672(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UChargeableComponent*                                _chargeableComponent;                                    // 0x0678(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _tutorialChargeableMultiplier;                           // 0x0680(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_AG6M[0x54];                                  // 0x0684(0x0054) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       ShowSpeedProficiencyForMultipleInteractors;              // 0x06D8(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_BFC1[0x7];                                   // 0x06D9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGameplayTagContainer                               _interactionSpecificActionSpeedTags;                     // 0x06E0(0x0020) Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate
		struct FGameplayTagContainer                               _interactionSpecificActionSpeedMultiplicativeTags;       // 0x0700(0x0020) Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate
		struct FGameplayTagContainer                               _interactionSpecificActionDurationAdditiveTags;          // 0x0720(0x0020) Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate

	public:
		bool ShouldShowSpeedProficiencyForMultipleInteractors();
		void SetTutorialChargeableMultiplier(float multiplierValue);
		void SetSpeedBase(float speedBase);
		void SetChargeableComponent(class UChargeableComponent* ChargeableComponent, bool isNullAllowed);
		void OnSkillCheckResponseAuthorityBP(class ADBDPlayer* Player, bool success, bool Bonus, bool hadInput, ESkillCheckCustomType Type);
		void OnSkillCheckResponseAuthority(bool success, bool Bonus, class ADBDPlayer* Player, bool TriggerLoudNoise, bool hadInput, ESkillCheckCustomType Type);
		void OnSkillCheckResponseAestheticBP(class ADBDPlayer* Player, bool success, bool Bonus, bool hadInput, ESkillCheckCustomType Type);
		void OnSkillCheckResponseAesthetic(bool success, bool Bonus, class ADBDPlayer* Player, bool TriggerLoudNoise, bool hadInput, ESkillCheckCustomType Type);
		void OnInteractionCompletionStateChanged(class ADBDPlayer* Player, bool complete);
		bool IsChargeComplete(class ADBDPlayer* currentlyInteractingPlayer);
		bool HasSkillCheckHappened(class ADBDPlayer* Character);
		float GetTunableValue(const class FName& TunableValueID, float defaultValue);
		float GetSuccessProbability();
		float GetSkillCheckProbability(class ADBDPlayer* interactingPlayer);
		float GetSkillCheckFailureTimePenalty();
		float GetSkillCheckFailurePercentPenalty(class ADBDPlayer* Player);
		float GetSkillCheckDifficulityModifier(class ADBDPlayer* Character);
		float GetSkillCheckCharge(class ADBDPlayer* Player, bool success, bool Bonus, ESkillCheckCustomType Type);
		int32_t GetPipsPassed();
		float GetPerkMultiplier(class ADBDPlayer* Character);
		float GetMultiplicativeLuckBonus(class ADBDPlayer* Character);
		float GetMaxCharge();
		float GetItemEfficiencyModifier(class ADBDPlayer* Character);
		float GetInteractionChargeSpeedMultiplier(class ADBDPlayer* Character);
		float GetGoodSkillCheckSuccessPercentReward(class ADBDPlayer* Player);
		float GetChargeSpeedModifier(class ADBDPlayer* Character);
		float GetChargeAmountForTime(float DeltaSeconds, class ADBDPlayer* Character);
		class UChargeableComponent* GetChargeableComponent();
		float GetBonusSkillCheckZoneSizeModifier(class ADBDPlayer* Character);
		float GetBonusSkillCheckSuccessPercentReward(class ADBDPlayer* Player);
		float GetAdditiveLuckBonus(class ADBDPlayer* Character);
		float GetAdditiveChargeTimeReductionAsMultiplier(class ADBDPlayer* Character);
		void Authority_ChargeWithItem(float DeltaSeconds, class ACollectable* Item, class ADBDPlayer* Character);
		void Authority_AddCharge(float DeltaSeconds, class ADBDPlayer* Character, bool isChargeFromItem);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.Interactable
	 * Size -> 0x00F8 (FullSize[0x0328] - InheritedSize[0x0230])
	 */
	class AInteractable : public AActor
	{
	public:
		unsigned char                                              UnknownData_77HR[0x60];                                  // 0x0230(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UPrimitiveComponent*                                 _singleZone;                                             // 0x0290(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _useSingleZone;                                          // 0x0298(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_2IZK[0x7];                                   // 0x0299(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UInteractor*>                                 _interactors;                                            // 0x02A0(0x0010) ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected
		class UInteractableTransformOptimizer*                     _transformOptimizer;                                     // 0x02B0(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_OJPJ[0x20];                                  // 0x02B8(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class UPrimitiveComponent*, struct FInteractionArray> _zoneToInteractions;                                     // 0x02D8(0x0050) Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate

	public:
		void SetSingleZone(class UPrimitiveComponent* zone);
		void SetInteractorsUsable(bool usable, class UInteractor* exception);
		void PreInterruptionEvent(class ADBDPlayer* interruptor, class ADBDPlayer* interruptee, class UInterruptionDefinition* interruption);
		void OnLevelReadyToPlay_Native();
		void OnLevelReadyToPlay();
		void OnInteractorLockChanged(bool locked, class ADBDPlayer* interactingPlayer);
		bool IsInterruptionPossible(class ADBDPlayer* interruptor, class ADBDPlayer* interruptee, class UInteractor* Interactor, class UInteractionDefinition* definition, class UInterruptionDefinition* interruption);
		bool IsInteractionDone(class ADBDPlayer* Player, class UInteractor* Interactor, class UInteractionDefinition* definition, EInputInteractionType interactionType);
		bool IsInteractingWith(class ADBDPlayer* Player);
		bool HasAnOngoingInteraction();
		class ADBDPlayer* GetPlayerOwner();
		TArray<class UInteractor*> GetInteractors();
		TArray<class ADBDPlayer*> GetInteractingPlayersRaw();
		struct FVector GetFocalPointPosition(class ADBDPlayer* Player, class UInteractionDefinition* definition);
		void AuthorityRequestCancelOngoingInteractions(bool onlyOnHitCancelableInteractions);
		TArray<class ADBDPlayer*> Authority_GetInteractingPlayers();
		void AttachEveryInteractionToZone(class UPrimitiveComponent* zone);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.OutlineUpdateStrategy
	 * Size -> 0x0008 (FullSize[0x00C0] - InheritedSize[0x00B8])
	 */
	class UOutlineUpdateStrategy : public UActorComponent
	{
	public:
		class UDBDOutlineComponent*                                _outlineComponent;                                       // 0x00B8(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.QuestEventEvaluatorBase
	 * Size -> 0x0088 (FullSize[0x00B8] - InheritedSize[0x0030])
	 */
	class UQuestEventEvaluatorBase : public UObject
	{
	public:
		unsigned char                                              UnknownData_CYCM[0x20];                                  // 0x0030(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ADBDPlayer*                                          _dbdPlayer;                                              // 0x0050(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_RJEB[0xA];                                   // 0x0058(0x000A) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EConditionNeedsType                                        _conditionNeedsType;                                     // 0x0062(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_W7W3[0x5];                                   // 0x0063(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UClass*>                                      _evaluatorConditionsClass;                               // 0x0068(0x0010) Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate
		TArray<class UEvaluatorCondition*>                         _evaluatorConditions;                                    // 0x0078(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_Q68W[0x30];                                  // 0x0088(0x0030) MISSED OFFSET (PADDING)

	public:
		void OnGameEvent(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.EvaluatorCondition
	 * Size -> 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
	 */
	class UEvaluatorCondition : public UObject
	{
	public:
		EConditionSubject                                          _conditionSubject;                                       // 0x0030(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_0LMR[0x17];                                  // 0x0031(0x0017) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.SpecialBehaviourInteractable
	 * Size -> 0x0040 (FullSize[0x0368] - InheritedSize[0x0328])
	 */
	class ASpecialBehaviourInteractable : public AInteractable
	{
	public:
		unsigned char                                              UnknownData_PJJ5[0x30];                                  // 0x0328(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TWeakObjectPtr<class ADBDPlayerState>                      _specialBehaviourOwner;                                  // 0x0358(0x0008) Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_8QWF[0x8];                                   // 0x0360(0x0008) MISSED OFFSET (PADDING)

	public:
		void OnRep_SpecialBehaviourOwner();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.SourceBasedOutlineUpdateStrategy
	 * Size -> 0x0078 (FullSize[0x0138] - InheritedSize[0x00C0])
	 */
	class USourceBasedOutlineUpdateStrategy : public UOutlineUpdateStrategy
	{
	public:
		struct FLinearColor                                        _defaultColorForSurvivor;                                // 0x00C0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FLinearColor                                        _defaultColorForSlasher;                                 // 0x00D0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_Y0VY[0x58];                                  // 0x00E0(0x0058) MISSED OFFSET (PADDING)

	public:
		void ResetReveal();
		void RemoveRevealSource(class UObject* Source);
		void ChangeDefaultColorForSurvivor(const struct FLinearColor& NewColor);
		void ChangeDefaultColorForSlasher(const struct FLinearColor& NewColor);
		void AddTimedReveal(class UObject* Source, const struct FLinearColor& HighlightColor, int32_t Priority, TArray<class ADBDPlayer*> affectedCharacters, float Duration);
		void AddTimedAndRangedReveal(class UObject* Source, class AActor* SourceActor, const struct FLinearColor& HighlightColor, int32_t Priority, TArray<class ADBDPlayer*> affectedCharacters, float Duration, float Range);
		void AddRevealWithOptions(class UObject* Source, const struct FLinearColor& HighlightColor, int32_t Priority, TArray<class ADBDPlayer*> affectedCharacters, const struct FRevealOptions& Options);
		void AddReveal(class UObject* Source, const struct FLinearColor& HighlightColor, int32_t Priority, TArray<class ADBDPlayer*> affectedCharacters);
		void AddRangedReveal(class UObject* Source, class AActor* SourceActor, const struct FLinearColor& HighlightColor, int32_t Priority, TArray<class ADBDPlayer*> affectedCharacters, float Range);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.SpecialBehaviourIterativeWeightAdjustmentStrategy
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class USpecialBehaviourIterativeWeightAdjustmentStrategy : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DefaultOutlineUpdateStrategy
	 * Size -> 0x0020 (FullSize[0x00E0] - InheritedSize[0x00C0])
	 */
	class UDefaultOutlineUpdateStrategy : public UOutlineUpdateStrategy
	{
	public:
		struct FLinearColor                                        _revealedColorToSurvivor;                                // 0x00C0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                        _revealedColorToKiller;                                  // 0x00D0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AbstractAnalyticsManager
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UAbstractAnalyticsManager : public UGameInstanceSubsystem
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ArmIKSensorComponent
	 * Size -> 0x0080 (FullSize[0x0138] - InheritedSize[0x00B8])
	 */
	class UArmIKSensorComponent : public UActorComponent
	{
	public:
		class USkeletalMeshComponent*                              _mesh;                                                   // 0x00B8(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TMap<EArm, struct FArmIKSensorDatum>                       _arms;                                                   // 0x00C0(0x0050) Edit, EditFixedSize, Protected, NativeAccessSpecifierProtected
		float                                                      _capsuleRadius;                                          // 0x0110(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _capsuleHalfHeight;                                      // 0x0114(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _traceLength;                                            // 0x0118(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_EPXO[0x4];                                   // 0x011C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCameraComponent*                                    _owningCamera;                                           // 0x0120(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_DMUW[0x10];                                  // 0x0128(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDAttack
	 * Size -> 0x02C8 (FullSize[0x0380] - InheritedSize[0x00B8])
	 */
	class UDBDAttack : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_G9BZ[0x18];                                  // 0x00B8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EAttackType                                                _attackType;                                             // 0x00D0(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _useMontage;                                             // 0x00D1(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		EDetectionZone                                             _damageZone;                                             // 0x00D2(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		EDetectionZone                                             _lockZone;                                               // 0x00D3(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		EDetectionZone                                             _obstructionZone;                                        // 0x00D4(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_26C5[0x3];                                   // 0x00D5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FStatProperty                                       _maxAccelerationMultiplier;                              // 0x00D8(0x0088) Edit, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _onlyApplyAccelerationMultiplierWhenWalking;             // 0x0160(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_E479[0x7];                                   // 0x0161(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDBDAttackTargetTracker                             _targetTracker;                                          // 0x0168(0x00B8) Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
		TMap<EAttackSubstate, class UClass*>                       _stateClasses;                                           // 0x0220(0x0050) Edit, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected
		TArray<class ACharacter*>                                  _localAlreadyHitTargets;                                 // 0x0270(0x0010) ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected
		TArray<class ADBDPlayer*>                                  _hitTargets;                                             // 0x0280(0x0010) ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected
		unsigned char                                              _targetsAwaitingServerValidation[0x50];                  // 0x0290(0x0050) UNKNOWN PROPERTY: SetProperty
		unsigned char                                              UnknownData_ZVIL[0x28];                                  // 0x02E0(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<EAttackSubstate, class UDBDAttackSubstate*>           _states;                                                 // 0x0308(0x0050) Transient, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_M2JT[0x1F];                                  // 0x0358(0x001F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EHitValidatorConfigName                                    _hitValidationConfigName;                                // 0x0377(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_ABKW[0x8];                                   // 0x0378(0x0008) MISSED OFFSET (PADDING)

	public:
		void Server_RequestStateChange(EAttackSubstate State);
		void Server_HitTarget(class ADBDPlayer* Target, float TargetLocationTimestamp, const struct FActionPredictionKey& PredictionKey);
		void Server_HitAttackableComponent(class UAttackableComponent* AttackableComponent);
		void Server_ClearTargets();
		void Multicast_SendPostHitTargetData(class ADBDPlayer* owningKiller, class ADBDPlayer* Target, const struct FPostAttackData& attackData);
		void Multicast_RequestStateChange(EAttackSubstate State);
		void Multicast_HitTarget(class ADBDPlayer* Target, bool hitCosmeticOnly);
		void Multicast_HitAttackableComponent(class UAttackableComponent* AttackableComponent);
		void Multicast_ClearTargets();
		void Local_OnMovementChanged(class ACharacter* Character, EMovementMode PrevMovementMode, unsigned char PreviousCustomMode);
		void Client_ReceiveHitResult(class ADBDPlayer* Target, bool IsValid, const struct FActionPredictionKey& PredictionKey);
		void Client_ReceiveAttackSubstateRequestResult(const struct FAttackSubstateRequestResult& Result);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDAttackSubstate
	 * Size -> 0x00E8 (FullSize[0x0118] - InheritedSize[0x0030])
	 */
	class UDBDAttackSubstate : public UObject
	{
	public:
		struct FStatProperty                                       _duration;                                               // 0x0030(0x0088) Edit, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCurveFloat*                                         _speedCurve;                                             // 0x00B8(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FName                                                _montage;                                                // 0x00C0(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_TWTC[0x4];                                   // 0x00CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveFloat*                                         _currentCurve;                                           // 0x00D0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_O176[0x40];                                  // 0x00D8(0x0040) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDAttackOpenSubstate
	 * Size -> 0x0000 (FullSize[0x0118] - InheritedSize[0x0118])
	 */
	class UDBDAttackOpenSubstate : public UDBDAttackSubstate
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDAttackHittingSubstate
	 * Size -> 0x0088 (FullSize[0x01A0] - InheritedSize[0x0118])
	 */
	class UDBDAttackHittingSubstate : public UDBDAttackSubstate
	{
	public:
		struct FStatProperty                                       _hittingPercentDamageBegin;                              // 0x0118(0x0088) Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDAttackSuccessSubstate
	 * Size -> 0x0000 (FullSize[0x0118] - InheritedSize[0x0118])
	 */
	class UDBDAttackSuccessSubstate : public UDBDAttackSubstate
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDAttackMissSubstate
	 * Size -> 0x0000 (FullSize[0x0118] - InheritedSize[0x0118])
	 */
	class UDBDAttackMissSubstate : public UDBDAttackSubstate
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDAttackObstructSubstate
	 * Size -> 0x0000 (FullSize[0x0118] - InheritedSize[0x0118])
	 */
	class UDBDAttackObstructSubstate : public UDBDAttackSubstate
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDAIController
	 * Size -> 0x02A8 (FullSize[0x05E8] - InheritedSize[0x0340])
	 */
	class ADBDAIController : public AAIController
	{
	public:
		float                                                      DefaultSightRange;                                       // 0x0340(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CloakedTargetSightRange;                                 // 0x0344(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<EAIDifficultyLevel, int32_t>                          AIDifficultyMaxPlayerRanks;                              // 0x0348(0x0050) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6TPP[0x10];                                  // 0x0398(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      RotateCameraOnStationaryWaitTime;                        // 0x03A8(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RotateCameraOnStationaryDegreePerSecond;                 // 0x03AC(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T08E[0x20];                                  // 0x03B0(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class APawn*                                               _aiPawn;                                                 // 0x03D0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class APawn*                                               _lastAiPawn;                                             // 0x03D8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TMap<class UObject*, float>                                _contextualPathSpeedFactors;                             // 0x03E0(0x0050) Transient, NativeAccessSpecifierPrivate
		class UObject*                                             _objOverridingDefaultNavigationFilter;                   // 0x0430(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UClass*                                              _originalDefaultNavigationFilter;                        // 0x0438(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_U2JO[0x18];                                  // 0x0440(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<EPawnInputPressTypes, class UObject*>                 _inputLocks;                                             // 0x0458(0x0050) Transient, NativeAccessSpecifierPrivate
		class UObject*                                             _movementLock;                                           // 0x04A8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_EX93[0x138];                                 // 0x04B0(0x0138) MISSED OFFSET (PADDING)

	public:
		void UseItemRequest(class UObject* requester);
		void StruggleRequest(class UObject* requester, float Input);
		bool SetCharacterMovement(ECharacterMovementTypes movementTypes, class UObject* requester);
		void Server_SetAIPlayerRank(int32_t PlayerRank);
		void SecondAttackRequest(class UObject* requester);
		void SecondaryActionRequest(class UObject* requester);
		void RunRequest(class UObject* requester);
		void InteractRequestRelease(class UObject* requester);
		void InteractRequest(class UObject* requester);
		void Gesture04Request(class UObject* requester);
		void Gesture03Request(class UObject* requester);
		void Gesture02Request(class UObject* requester);
		void Gesture01Request(class UObject* requester);
		void FastInteractRequest(class UObject* requester);
		void EndUseItemRequest(class UObject* requester);
		void EndSecondAttackRequest(class UObject* requester);
		void EndRunRequest(class UObject* requester);
		void EndInteractRequest(class UObject* requester);
		void EndFastInteractRequest(class UObject* requester);
		void EndDropItemRequest(class UObject* requester);
		void EndActionRequest(class UObject* requester);
		void DropItemRequest(class UObject* requester);
		void CancelMinigameRequest(class UObject* requester);
		void AttackRequest(class UObject* requester);
		void ActionRequest(class UObject* requester);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDAIUtilities
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UDBDAIUtilities : public UBlueprintFunctionLibrary
	{
	public:
		void STATIC_SetCanEverAffectNavigation(class UActorComponent* Component, bool affectNavigation);
		class UNavigationPath* STATIC_FindPathWithAgentRadiusToActorSynchronously(class UObject* WorldContextObject, const struct FVector& pathStart, class AActor* GoalActor, float AgentRadius, float tetherDistance, class AActor* pathfindingContext, class UClass* FilterClass);
		bool STATIC_DrawDebugAIPerception();
		bool STATIC_DrawDebugAINavigationFilter();
		bool STATIC_DrawDebugAINavigation();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.GameplayModifierContainer
	 * Size -> 0x0120 (FullSize[0x0218] - InheritedSize[0x00F8])
	 */
	class UGameplayModifierContainer : public UBaseModifierContainer
	{
	public:
		unsigned char                                              UnknownData_UFTO[0x90];                                  // 0x00F8(0x0090) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FModifierTickableConditionReplicatedData            _tickableConditionsData;                                 // 0x0188(0x0018) Net, Transient, RepNotify, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected
		TArray<class FName>                                        _tags;                                                   // 0x01A0(0x0010) ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected
		bool                                                       UseApplyFunction;                                        // 0x01B0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       BroadcastStatusView;                                     // 0x01B1(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_Y0IM[0x2];                                   // 0x01B2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                StatusViewID;                                            // 0x01B4(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _autoInitializeOnBeginPlay;                              // 0x01C0(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _canOptimizeTickActivation;                              // 0x01C1(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_RSGV[0x46];                                  // 0x01C2(0x0046) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTimerObject*                                        _activationTimer;                                        // 0x0208(0x0008) ExportObject, Net, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_WLRQ[0x8];                                   // 0x0210(0x0008) MISSED OFFSET (PADDING)

	public:
		void UpdateIsApplicable();
		void UnlistenToDispatcherGameEvent(const struct FGameplayTag& EventType);
		void UnlistenToAllDispatcherGameEvents();
		void SetUseApplyFunction(bool Use);
		void SetModifierValue(const struct FGameplayTag& Type, float GameplayModifierValue);
		void SetFlag(const struct FGameplayTag& flag, bool flagValue);
		void RemoveModifier(const struct FGameplayTag& Type);
		void RemoveAllModifiers();
		void RemoveAllFlags();
		void OnRep_TickableConditionsData();
		void OnRep_ModifierData();
		void OnRep_ActivationTimer();
		void OnLevelReadyToPlay();
		void OnInitialized_Internal();
		void OnInitialized();
		void OnGameEventDispatched(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
		void OnApplyEnd();
		void OnApplyBegin();
		void ListenToDispatcherGameEvent(const struct FGameplayTag& EventType);
		bool IsStatusViewActive();
		bool IsActivationTimerDone();
		bool IsActivationTimerActive();
		bool HasModifierOfType(const struct FGameplayTag& Type);
		bool HasFlag(const struct FGameplayTag& flag);
		float GetRemainingLifetime();
		float GetPercentageFill();
		class ADBDPlayer* GetOwningPlayer();
		class UGameplayModifierContainer* GetOriginatingEffect();
		float GetModifierValue(const struct FGameplayTag& Type);
		int32_t GetLevelToDisplay();
		EInventoryItemType GetInventoryItemType();
		int32_t GetIconFilePathIndex();
		float GetActivationTimerRemainingTime();
		float GetActivationTimerPercentRemaining();
		float GetActivationTimerElapsedTimePercent();
		float GetActivationTimerElapsedTime();
		float GetActivationTimerDuration();
		void FireActiveStatusViewEvent(const class FName& StatusViewID, const class FName& uniqueSourceID, const struct FStatusViewSource& StatusViewSource);
		void Authority_TriggerActivationTimer(float activationTime);
		void Authority_SetActivationTimerPaused(bool paused);
		void Authority_InstantiateGameplayModifierConditions();
		void Authority_ClearActivationTimer();
		void Apply(float DeltaTime);
		class UBaseModifierCondition* AddCondition(class UClass* conditionType);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.StatusEffect
	 * Size -> 0x0138 (FullSize[0x0350] - InheritedSize[0x0218])
	 */
	class UStatusEffect : public UGameplayModifierContainer
	{
	public:
		unsigned char                                              UnknownData_EDVY[0x48];                                  // 0x0218(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGameplayModifierData                               ModifierData;                                            // 0x0260(0x0030) Edit, Net, RepNotify, Protected, NativeAccessSpecifierProtected
		bool                                                       shouldDisplay;                                           // 0x0290(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_C9LA[0x3];                                   // 0x0291(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      customParam;                                             // 0x0294(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _removeOnRemainingLifetimeEnded;                         // 0x0298(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       BroadcastAsStatusEffectWhenApplicable;                   // 0x0299(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       BroadcastAsStatusEffectByActivationTimer;                // 0x029A(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       BroadcastAsStatusEffectWhenLifeRemains;                  // 0x029B(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       BroadcastAsStatusEffectByFunction;                       // 0x029C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       BroadcastAsStatusEffectAlways;                           // 0x029D(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       BroadcastOriginatorGameEventNotificationWhenFirstApplicable; // 0x029E(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       ShouldHideStatusEffectIconForOriginatingPlayer;          // 0x029F(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _forceActivationTimerDisplay;                            // 0x02A0(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_SG74[0x7];                                   // 0x02A1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FStatusEffectInitializationData                     _statusInitializationData;                               // 0x02A8(0x0028) Net, Transient, RepNotify, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_RMBX[0x38];                                  // 0x02D0(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              _nonStackingEffects[0x10];                               // 0x0308(0x0010) UNKNOWN PROPERTY: ArrayProperty
		unsigned char                                              UnknownData_UUYW[0x38];                                  // 0x0318(0x0038) MISSED OFFSET (PADDING)

	public:
		bool ShouldDisplayStatusEffectIcon();
		void SetStatusEffectIconPercentage(float value);
		void SetShouldDisplay(bool On);
		void OnShouldOriginatingPlayerChange();
		void OnShouldDisplayChanged(bool CurrentValue);
		void OnRep_StatusInitializationData();
		void OnRep_ShouldOriginatingPlayerChange();
		void OnRep_ShouldDisplay();
		void Multicast_SetRemainingLifetimeInitialized(bool remainingLifetimeInitialized);
		void Multicast_SetRemainingLifetime(float lifetime);
		bool IsOriginatorHooked();
		bool IsOriginatorAlive();
		bool IsKillerInOriginatorRange(float AdditiveRangeModifier);
		bool IsInOriginatorRange();
		void InitializeLifetime(float lifetime);
		EStatusEffectType GetStatusEffectType();
		float GetStatusEffectCooldownRate();
		bool GetShouldDisplay();
		class ADBDPlayer* GetOriginatingPlayer();
		float GetLifetimeDuration();
		float GetCustomParam();
		void FireActiveStatusEffectEvent(float Percentage, int32_t levelToDisplay);
		void BroadcastOriginatorGameEventNotification();
		void BroadcastGameEventNotification(const struct FGameplayNotificationData& notificationData, bool addToHistory);
		void Authority_SetRemainingLifetime(float lifetime);
		void Authority_RemoveSelf();
		void Authority_OnOriginatingPlayerEndPlay(class AActor* Actor, EEndPlayReason EndPlayReason);
		void Authority_EndSelf();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.Perk
	 * Size -> 0x01B0 (FullSize[0x03C8] - InheritedSize[0x0218])
	 */
	class UPerk : public UGameplayModifierContainer
	{
	public:
		unsigned char                                              UnknownData_5MYR[0x60];                                  // 0x0218(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGameplayModifierData                               PerkLevelData[0x3];                                      // 0x0278(0x0090) Edit, Net, EditFixedSize, RepNotify, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_6G4U[0x30];                                  // 0x0308(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              PerkIconStrategyClass;                                   // 0x0338(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FScriptMulticastDelegate                             OnTokenCountChangedBP;                                   // 0x0340(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_2G31[0x30];                                  // 0x0350(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       _isUsable;                                               // 0x0380(0x0001) Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _keepImposedStatusEffectsOnEndPlay;                      // 0x0381(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       BroadcastWhenApplicable;                                 // 0x0382(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       BroadcastOnTimer;                                        // 0x0383(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       BroadcastCooldownTimer;                                  // 0x0384(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       BroadcastInactiveCooldownTimer;                          // 0x0385(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       BroadcastAlways;                                         // 0x0386(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       SetInactiveDuringCooldown;                               // 0x0387(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UBasePerkIconStrategy*                               _perkIconStrategy;                                       // 0x0388(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FPerkInitializationData                             _perkInitializationData;                                 // 0x0390(0x0008) Net, Transient, RepNotify, NoDestructor, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_4MZD[0x4];                                   // 0x0398(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    _tokenCount;                                             // 0x039C(0x0004) BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    _maxTokenCount;                                          // 0x03A0(0x0004) Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		EPerkTokenSoundStrategy                                    _tokenSoundStrategy;                                     // 0x03A4(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_9XDV[0x3];                                   // 0x03A5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTimerObject*                                        _cooldownTimer;                                          // 0x03A8(0x0008) ExportObject, Net, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_EE2H[0x8];                                   // 0x03B0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTimerObject*                                        _hudIconTimer;                                           // 0x03B8(0x0008) ExportObject, Net, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UInteractionDefinition*                              _activatableInteraction;                                 // 0x03C0(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void SetIsUsable(bool value);
		void OnRep_TokenCount(int32_t oldCount);
		void OnRep_PerkInitializationData();
		void OnRep_IsUsable();
		void OnRep_CooldownTimer();
		bool IsHudIconTimerDone();
		bool IsCooldownTimerDone();
		int32_t GetTokenCount();
		int32_t GetPerkLevel();
		class UBasePerkIconStrategy* GetPerkIconStrategy();
		int32_t GetMaxTokenCount();
		bool GetIsUsable();
		float GetHudIconTimerElapsedTimePercent();
		struct FGameplayModifierData GetGameplayModifierData();
		class UTimerObject* GetCooldownTimer();
		void FireActivePerkEvent(float Percentage, int32_t chargeCount);
		void Authority_TriggerHudIconTimer(float Duration);
		void Authority_TriggerCooldownTimer(float coolddownTime);
		void Authority_SetTokenCount(int32_t value);
		void Authority_SetMaxTokenCount(int32_t value);
		void Authority_SetIsUsable(bool value);
		void Authority_IncrementToken();
		void Authority_DecrementToken();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.TotemBoundPerk
	 * Size -> 0x0058 (FullSize[0x0420] - InheritedSize[0x03C8])
	 */
	class UTotemBoundPerk : public UPerk
	{
	public:
		unsigned char                                              UnknownData_2PCK[0x18];                                  // 0x03C8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		ETotemState                                                TotemBoundState;                                         // 0x03E0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _doNotBindToTotemOnInit;                                 // 0x03E1(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_BLDO[0x6];                                   // 0x03E2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class ATotem*>                                      _boundTotems;                                            // 0x03E8(0x0010) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, RepNotify, Protected, NativeAccessSpecifierProtected
		TArray<class ATotem*>                                      _local_boundTotems;                                      // 0x03F8(0x0010) ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected
		TArray<class ATotem*>                                      _authorityPrevTotemActors;                               // 0x0408(0x0010) ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected
		int32_t                                                    _numTotemsToBind;                                        // 0x0418(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_FHBA[0x4];                                   // 0x041C(0x0004) MISSED OFFSET (PADDING)

	public:
		void OnRep_BoundTotems();
		TArray<class ATotem*> GetTotems();
		float GetSquaredDistanceToOwner(class AActor* Survivor);
		TArray<class ATotem*> GetBoundTotems();
		void Authority_UnbindFromTotem(class ATotem* aTotemActor);
		bool Authority_BindToDullTotems(bool allowAdditionalBoundTotems);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.GameplayModifierCondition
	 * Size -> 0x0000 (FullSize[0x00D0] - InheritedSize[0x00D0])
	 */
	class UGameplayModifierCondition : public UBaseModifierCondition
	{
	public:
		void SetOwningGameplayModifier(class UGameplayModifierContainer* OwningGameplayModifier);
		void OnOwningGameplayModifierSet();
		bool IsApplicable();
		class ADBDPlayer* GetOwningPlayer();
		class UGameplayModifierContainer* GetOwningGameplayModifier();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ItemModifier
	 * Size -> 0x0060 (FullSize[0x0278] - InheritedSize[0x0218])
	 */
	class UItemModifier : public UGameplayModifierContainer
	{
	public:
		struct FGameplayModifierData                               ModifierData;                                            // 0x0218(0x0030) Edit, Net, RepNotify, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7X8X[0x30];                                  // 0x0248(0x0030) MISSED OFFSET (PADDING)

	public:
		void HandleIncreaseMaxCharge();
		void HandleIncreaseItemCount();
		void HandleIncreaseCharge();
		float GetItemMaxEnergy();
		float GetItemEnergy();
		int32_t GetItemCount();
		class ACollectable* GetBaseItem();
		void AuthoritySetItemMaxEnergy(float energy);
		void AuthoritySetItemEnergy(float energy);
		void AuthoritySetItemCount(int32_t itemCount);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ItemAddon
	 * Size -> 0x0040 (FullSize[0x02B8] - InheritedSize[0x0278])
	 */
	class UItemAddon : public UItemModifier
	{
	public:
		class UClass*                                              BaseItemType;                                            // 0x0278(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       _needsSetup;                                             // 0x0280(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_XR9H[0x1F];                                  // 0x0281(0x001F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    _tokenCount;                                             // 0x02A0(0x0004) BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    _maxTokenCount;                                          // 0x02A4(0x0004) Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FItemAddonInitializationData                        _addonInitializationData;                                // 0x02A8(0x0002) Net, Transient, RepNotify, NoDestructor, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_PXGK[0xE];                                   // 0x02AA(0x000E) MISSED OFFSET (PADDING)

	public:
		void SetUpAddon();
		void OnRep_TokenCount(int32_t oldCount);
		void OnRep_AddonInitializationData();
		void OnPostItemAddonsCreation(class ADBDPlayer* Player, class ACollectable* Item);
		void Multicast_SetBaseItem(class ACollectable* baseItem);
		void Multicast_AddAddonToItem(class ACollectable* Item);
		bool IsSecondaryAction();
		bool IsReadyForSetUp();
		int32_t GetTokenCount();
		int32_t GetMaxTokenCount();
		void DebugPrintStats();
		void Authority_SetTokenCount(int32_t value);
		void Authority_SetMaxTokenCount(int32_t value);
		void Authority_OnCollectablePickedUp(class ADBDPlayer* Player);
		void Authority_OnCollectableDropped(class ADBDPlayer* Player);
		void Authority_IncrementToken();
		void Authority_DecrementToken();
		void Authority_ApplyMetaModifiers();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.Collectable
	 * Size -> 0x0188 (FullSize[0x04B0] - InheritedSize[0x0328])
	 */
	class ACollectable : public AInteractable
	{
	public:
		unsigned char                                              UnknownData_2EBO[0x30];                                  // 0x0328(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       DisplayUsePercent;                                       // 0x0358(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAtlantaItemProgressionBarEnum                             ProgressBar;                                             // 0x0359(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       OverrideItemIndex;                                       // 0x035A(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QUP3[0x1];                                   // 0x035B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    OverridenItemIndex;                                      // 0x035C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       StrafeOnUse;                                             // 0x0360(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       VisibleWhenEquipped;                                     // 0x0361(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       StopRunningOnUse;                                        // 0x0362(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemHandPosition                                          HandPosition;                                            // 0x0363(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       DisableArmOverrideDuringInteractions;                    // 0x0364(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       HasUseInteraction;                                       // 0x0365(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECollectableCategory                                       Category;                                                // 0x0366(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7SCL[0x1];                                   // 0x0367(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                ItemId;                                                  // 0x0368(0x000C) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       FromPlayerSpawn;                                         // 0x0374(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_53EJ[0x3];                                   // 0x0375(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UItemModifier*                                       BaseItemModifier;                                        // 0x0378(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UItemModifier*                                       ItemModifier1;                                           // 0x0380(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UItemModifier*                                       ItemModifier2;                                           // 0x0388(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ShouldRegisterToOnSurvivorAdded;                         // 0x0390(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0E44[0x67];                                  // 0x0391(0x0067) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       BeingCollected;                                          // 0x03F8(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       BeingDropped;                                            // 0x03F9(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _beingConsumedByEntity;                                  // 0x03FA(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_HP77[0x5];                                   // 0x03FB(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UInteractor*                                         _itemInteractor;                                         // 0x0400(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UDBDSkeletalMeshComponentBudgeted*                   _mesh;                                                   // 0x0408(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		EInputInteractionType                                      _displayedInputType;                                     // 0x0410(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _isKeyPromptForceDisabled;                               // 0x0411(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_U08O[0x6];                                   // 0x0412(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UGameplayTagContainerComponent*                      _objectState;                                            // 0x0418(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _isBoundToFirstCollector;                                // 0x0420(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_Y31I[0x1F];                                  // 0x0421(0x001F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USceneComponent*                                     _placementOrigin;                                        // 0x0440(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_4VG5[0x10];                                  // 0x0448(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ADBDPlayer*                                          _collector;                                              // 0x0458(0x0008) Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class ADBDPlayer*                                          _firstCollector;                                         // 0x0460(0x0008) Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		ECollectableState                                          _state;                                                  // 0x0468(0x0001) Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_FW83[0x7];                                   // 0x0469(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UItemAddon*>                                  _itemAddons;                                             // 0x0470(0x0010) ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
		TArray<class UItemModifier*>                               _itemModifiers;                                          // 0x0480(0x0010) ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
		int32_t                                                    _itemCount;                                              // 0x0490(0x0004) Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		EAttachToSocketNameEnum                                    _attachToSocketName;                                     // 0x0494(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		EInventoryType                                             _collectInInventoryType;                                 // 0x0495(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_Q4WY[0x2];                                   // 0x0496(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGameplayTag                                        _stateTagForCollector;                                   // 0x0498(0x000C) Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		ELoadoutItemType                                           _itemType;                                               // 0x04A4(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _discardWhenConsumed;                                    // 0x04A5(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _disableAttachmentReplication;                           // 0x04A6(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_GAJD[0x1];                                   // 0x04A7(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       _isInUse;                                                // 0x04A8(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _aimOnUse;                                               // 0x04A9(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_HBD8[0x6];                                   // 0x04AA(0x0006) MISSED OFFSET (PADDING)

	public:
		void SetVisibilityEvent(bool Visibility);
		void SetItemInteractor(class UInteractor* Interactor);
		void SetIsKeyPromptForceDisabled(bool IsKeyPromptForceDisabled);
		void SetDisplayedInputType(EInputInteractionType displayedInputType);
		void SetCount(int32_t Count);
		void Server_Discard();
		void OnUseReleased(class ADBDPlayer* collector);
		void OnUse();
		void OnRep_State();
		void OnRep_Collector(class ADBDPlayer* oldCollector);
		void OnPostItemAddonsCreation(class ADBDPlayer* Player);
		void OnDropped(class ADBDPlayer* droppingPlayer);
		void OnCustomizationChanged();
		void OnCollectorSetBPDelegate__DelegateSignature(class ADBDPlayer* Player);
		void OnCollectorSetBP__DelegateSignature(class ADBDPlayer* Player);
		void OnCollectorSet(class ADBDPlayer* collector);
		void OnCollectorEndPlay(class AActor* Actor, EEndPlayReason EndPlayReason);
		void OnAddonsRemoved(TArray<class UItemAddon*> addons);
		void OnAddonsAdded(TArray<class UItemAddon*> addons);
		void OnActivateDissolveItem();
		void Multicast_UseReleased(class ADBDPlayer* collector);
		void Multicast_Use();
		void Multicast_RemoveItemAddon(class UItemAddon* addon);
		void Multicast_RemoveAllAddons();
		void Multicast_Dropped(class ADBDPlayer* droppedBy, const struct FVector& Location, const struct FRotator& Rotation);
		void Multicast_Collected(class ADBDPlayer* collector);
		void Local_Dropped_Location(class ADBDPlayer* droppedBy, const struct FVector& Location, const struct FRotator& Rotation);
		bool IsStored();
		bool IsRechargeable();
		bool IsPickable();
		bool IsOnGround();
		bool IsLocallyControlled();
		bool IsKeyPromptForceDisabled();
		bool IsInSearchable();
		bool IsEquipped();
		bool IsCountDisplayForced();
		bool IsCollected();
		bool HasGameplayModifierFlag(const struct FGameplayTag& modifierFlag);
		float GetUsePercentLeft();
		float GetModifierSum(const struct FGameplayTag& modifierType, float defaultValue);
		float GetModifierMax(const struct FGameplayTag& modifierType, float defaultValue);
		class UInteractor* GetItemInteractor();
		unsigned char GetItemIconIndex();
		TArray<class UItemAddon*> GetItemAddons();
		class FString GetIconFilePath();
		EInputInteractionType GetDisplayedInputType();
		int32_t GetCount();
		class ADBDPlayer* GetCollector();
		void DebugPrintStats();
		bool CanUse(class ADBDPlayer* Player);
		bool CanBeDropped(class ADBDPlayer* dropper);
		bool CanBeCollected(class ADBDPlayer* collector);
		void CallOnCollectorSetBP(const class FScriptDelegate& Callback);
		void BP_OnSurvivorAdded(class ACamperPlayer* Survivor);
		void Authority_UseReleased();
		void Authority_Use();
		void Authority_RemoveItemAddon(class UItemAddon* addon);
		void Authority_OnConsumed(bool forceDiscard);
		void Authority_Discard();
		bool Authority_AddItemAddon(class UItemAddon* addon);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDGameState
	 * Size -> 0x05C0 (FullSize[0x0868] - InheritedSize[0x02A8])
	 */
	class ADBDGameState : public AGameState
	{
	public:
		unsigned char                                              UnknownData_NWTU[0x30];                                  // 0x02A8(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnEscapeDoorActivated;                                   // 0x02D8(0x0010) ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VYWD[0x90];                                  // 0x02E8(0x0090) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EIntroState                                                IntroState;                                              // 0x0378(0x0001) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WULZ[0x7];                                   // 0x0379(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnKillerIntroCompletePercentChanged;                     // 0x0380(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnLightingGenerated;                                     // 0x0390(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0C2P[0x30];                                  // 0x03A0(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USpecialEventGameplaySpawnerComponent*               _specialEventGameplaySpawnerComponent;                   // 0x03D0(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             AuthorityOnAllPlayerLoaded;                              // 0x03D8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N019[0x18];                                  // 0x03E8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnActivatedGeneratorCountChangedDynamic;                 // 0x0400(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnSlasherSet;                                            // 0x0410(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DJWF[0x18];                                  // 0x0420(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnObsessionChanged;                                      // 0x0438(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		int32_t                                                    CamperDeadCount;                                         // 0x0448(0x0004) Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CamperInMeatLockerCount;                                 // 0x044C(0x0004) Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CamperEscaped;                                           // 0x0450(0x0004) Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WaitingForEscape;                                        // 0x0454(0x0004) Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CamperCount;                                             // 0x0458(0x0004) Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SecondsLeftInLobby;                                      // 0x045C(0x0004) Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AN5H[0x30];                                  // 0x0460(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ASlasherPlayer*                                      Slasher;                                                 // 0x0490(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class URenderingFeaturesSequencer*                         _renderingSequencer;                                     // 0x0498(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_JUJA[0x30];                                  // 0x04A0(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    _camperHookedInBasementCount;                            // 0x04D0(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_MBF2[0x8];                                   // 0x04D4(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EServerUseNetAsyncLoading                                  _useNetAsyncLoading;                                     // 0x04DC(0x0001) Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _gameLevelLoadingStarted;                                // 0x04DD(0x0001) Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_VVOA[0x2];                                   // 0x04DE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FBuiltLevelData                                     _builtLevelData;                                         // 0x04E0(0x00B0) Net, Transient, RepNotify, NativeAccessSpecifierPrivate
		struct FOfferingData                                       _levelOfferings;                                         // 0x0590(0x0018) Net, Transient, NativeAccessSpecifierPrivate
		class AClipManager*                                        _clipManager;                                            // 0x05A8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FGuid                                               _sessionId;                                              // 0x05B0(0x0010) Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FGuid                                               _lobbyId;                                                // 0x05C0(0x0010) Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    _activatedGeneratorCount;                                // 0x05D0(0x0004) Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    _requiredActivatedGeneratorCount;                        // 0x05D4(0x0004) Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _escapeDoorActivated;                                    // 0x05D8(0x0001) Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _escapeDoorOpened;                                       // 0x05D9(0x0001) Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _isHatchOpen;                                            // 0x05DA(0x0001) Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _levelReadyToPlay;                                       // 0x05DB(0x0001) Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _playerDistributionReady;                                // 0x05DC(0x0001) Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _usingWeakenedMechanic;                                  // 0x05DD(0x0001) Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_ZSRI[0x2];                                   // 0x05DE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    _survivorLeft;                                           // 0x05E0(0x0004) Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_F2L6[0x4];                                   // 0x05E4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class AMeatHook*>                                   _meatHooks;                                              // 0x05E8(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		TArray<class ASearchable*>                                 _searchables;                                            // 0x05F8(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		TArray<class AGenerator*>                                  _generators;                                             // 0x0608(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		TArray<class AEscapeDoor*>                                 _escapeDoors;                                            // 0x0618(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		TArray<class AHatch*>                                      _hatches;                                                // 0x0628(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		TArray<class AReverseBearTrapRemover*>                     _reverseBearTrapRemovers;                                // 0x0638(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		TArray<class ABaseTrap*>                                   _baseTraps;                                              // 0x0648(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		TArray<class APallet*>                                     _pallets;                                                // 0x0658(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		TArray<class AWindow*>                                     _windows;                                                // 0x0668(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		TArray<class ALocker*>                                     _lockers;                                                // 0x0678(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		TArray<class ABreakableBase*>                              _breakableWalls;                                         // 0x0688(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		TArray<class ATotem*>                                      _totems;                                                 // 0x0698(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		struct FBoxSphereBounds                                    _mapBoxSphereBounds;                                     // 0x06A8(0x001C) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_R50G[0x18];                                  // 0x06C4(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    _camperEscapedThroughHatch;                              // 0x06DC(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class ACamperPlayer*                                       _obsessionTarget;                                        // 0x06E0(0x0008) Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _cachedObsessionEscaped;                                 // 0x06E8(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_44CI[0x7];                                   // 0x06E9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int8_t                                                     _numberOfSurvivorsKilled;                                // 0x06F0(0x0001) Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_86E4[0x7];                                   // 0x06F1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class AInteractable*>                               _traps;                                                  // 0x06F8(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		TArray<class UDBDDangerPredictionComponent*>               _dangerPredictionObjects;                                // 0x0708(0x0010) ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_AV3W[0x8];                                   // 0x0718(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGamePresetData                                     _gamePresetData;                                         // 0x0720(0x0090) Net, Transient, RepNotify, NativeAccessSpecifierPrivate
		bool                                                       _gameLevelLoaded;                                        // 0x07B0(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _gameLevelCreated;                                       // 0x07B1(0x0001) Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _gameLevelEnded;                                         // 0x07B2(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _gameTimedOut;                                           // 0x07B3(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		EEndGameReason                                             _gameEndedReason;                                        // 0x07B4(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _isLoadoutFrozen;                                        // 0x07B5(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_ZH6A[0x2];                                   // 0x07B6(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UEndGameStateComponent*                              _endGameState;                                           // 0x07B8(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UScourgeHookManagerComponent*                        _scourgeHookManager;                                     // 0x07C0(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UActorPairQueryEvaluatorComponent*                   _actorPairQueryEvaluatorComponent;                       // 0x07C8(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_F1TN[0x8];                                   // 0x07D0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCharacterCollection*                                _characterCollection;                                    // 0x07D8(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UCollectableCollection*                              _collectableCollection;                                  // 0x07E0(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UServerTimeProviderComponent*                        _serverTimeProvider;                                     // 0x07E8(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UInGameAssetPreloaderComponent*                      _inGameAssetPreloaderComponent;                          // 0x07F0(0x0008) Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UOnScreenDebugComponent*                             _onScreenDebugComponent;                                 // 0x07F8(0x0008) ExportObject, Net, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_SVJJ[0x28];                                  // 0x0800(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           _matchStartTime;                                         // 0x0828(0x0008) Net, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _isServerDedicated;                                      // 0x0830(0x0001) Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_VS09[0x3];                                   // 0x0831(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    _maxSurvivorCount;                                       // 0x0834(0x0004) Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FString                                              _serverBuildVersion;                                     // 0x0838(0x0010) Net, ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FString                                              _serverContentVersion;                                   // 0x0848(0x0010) Net, ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _introDuration;                                          // 0x0858(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _leaveSpectateRequested;                                 // 0x085C(0x0001) Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_00YI[0xB];                                   // 0x085D(0x000B) MISSED OFFSET (PADDING)

	public:
		void UpdateInGamePallets();
		void UnregisterFromIntroCompleteAndLevelReadyToPlay(class UObject* inObject);
		void SortOfferings();
		void SetPlayersReadyToStart(bool playersReadyToStart);
		void SetKillerIntroCompletedNormalized(float completedAmount);
		void SetGameLevelEnded(EEndGameReason endGameReason);
		void SetDisplayMapName(bool Display);
		void SetBuiltLevelData(const struct FBuiltLevelData& BuiltLevelData);
		void Server_UpdateGameRole();
		void ResetGameLevelStatus();
		void RemoveTrap(class AInteractable* toRemove);
		void RemoveDangerPredictionObject(class UDBDDangerPredictionComponent* toRemove);
		void OnSlasherSetMultiDelegate__DelegateSignature(class ASlasherPlayer* SlasherPlayer);
		void OnRep_UseNetAsyncLoading();
		void OnRep_SurvivorLeft(int32_t oldValue);
		void OnRep_SessionId();
		void OnRep_SecondsLeftInLobby(int32_t oldValue);
		void OnRep_RequiredActivatedGeneratorCount(int32_t oldRequiredActivatedGeneratorCount);
		void OnRep_OnLevelReadyToPlay(bool oldValue);
		void OnRep_OnGameLevelCreated();
		void OnRep_ObsessionTarget(class ACamperPlayer* previousObsessionTarget);
		void OnRep_LobbyId();
		void OnRep_HatchOpened(bool oldValue);
		void OnRep_GamePresetData();
		void OnRep_GameLevelLoadingStarted(bool oldValue);
		void OnRep_EscapeDoorActivated(bool oldValue);
		void OnRep_BuildLevelData();
		void OnRep_ActivatedGeneratorCount(int32_t oldValue);
		void OnPlayerGameStateChangedAddIfKilled(class ADBDPlayerState* PlayerState, EGameState GameState);
		void OnLevelReadyToPlayDelegate__DelegateSignature();
		void OnIntroCompleteDelegate__DelegateSignature();
		void Multicast_UpdateCharacterFromGamePreset(class ADBDPlayerState_Menu* playerState_Menu, const struct FGamePresetData& GamePresetData);
		void Multicast_SetServerLeftGame(bool hasServerLeftGame);
		void Multicast_SetLostServerConnection(bool hasLostServerConnection);
		void Multicast_SetGameLevelLoaded(bool gameLevelLoaded);
		void Multicast_SetGameLevelEnded(EEndGameReason endGameReason);
		void Multicast_SetGameEnded(bool hasServerLeftGame);
		void Multicast_SetBuiltLevelData(const struct FBuiltLevelData& BuiltLevelData);
		void Multicast_SendHVSPlusState(bool Enabled);
		void Multicast_SendEnsureToClients(const class FString& ensure);
		void Multicast_OnGameStarted();
		void Multicast_BroadcastOnLevelLoadingTimeOutClientEvent();
		bool IsPlayerDistributionReady();
		bool IsOnePlayerLeft();
		bool IsOfferingReceived();
		bool IsObsessionTargetAliveInLevel();
		bool IsObsessionTargetAlive();
		bool IsLightingGenerated();
		bool IsLevelSetupDone();
		bool IsLevelReadyToPlay();
		bool IsIntroCompleted();
		bool IsHatchVisible();
		bool IsEscapeRequirementCompleted();
		bool IsEscapeDoorOpen();
		bool IsEscapeDoorActivated();
		void IntroCompleted();
		TArray<class AInteractable*> GetTraps();
		TArray<class ATotem*> GetTotems();
		int32_t GetSurvivorLeft();
		class USpecialEventGameplaySpawnerComponent* GetSpecialEventGameplaySpawnerComponent();
		TArray<struct FSelectedOffering> GetSelectedOfferings();
		bool GetSelectedOffering(int32_t Index, struct FSelectedOffering* SelectedOffering);
		int32_t GetRequiredActivatedGeneratorCount();
		int32_t GetRemainingGeneratorsNeeded();
		class ADBDPlayerState* GetPlayerStateByMirrorsID(const class FString& ID);
		class ADBDPlayerState* GetPlayerStateByIDString(const class FString& ID);
		bool GetPlayersReadyToStart();
		void GetPlayerRoleCounts(int32_t* survivorCount, int32_t* killerCount, int32_t* spectatorCount);
		class ACamperPlayer* GetObsessionTarget();
		int32_t GetNumberOfOtherActiveSurvivors(class ADBDPlayer* exception);
		int32_t GetNumberOfActiveSurvivors();
		class FName GetMapThemeName();
		class ADBDPlayer* GetLocalPlayerPawn();
		class APawn* GetLocalPlayerBasePawn();
		void GetLevelThemeAudioSoundBankAssetPtr();
		struct FBuiltLevelData GetLevelData();
		float GetKillerIntroCompletedNormalized();
		class ASlasherPlayer* GetKiller();
		bool GetIsGameEnded();
		TArray<class AWindow*> GetInGameWindows();
		TArray<class ASearchable*> GetInGameSearchables();
		TArray<class AReverseBearTrapRemover*> GetInGameReverseBearTrapRemovers();
		TArray<class APallet*> GetInGamePallets();
		TArray<class AMeatHook*> GetInGameMeatHooks();
		TArray<class AHatch*> GetInGameHatches();
		TArray<class AGenerator*> GetInGameGenerators();
		TArray<class AEscapeDoor*> GetInGameEscapeDoors();
		TArray<class ABaseTrap*> GetInGameBaseTraps();
		bool GetGameLevelLoadingStarted();
		bool GetGameLevelLoaded();
		class UEndGameStateComponent* GetEndGameStateComponent();
		TArray<class UDBDDangerPredictionComponent*> GetDangerPredictionObjects(bool isObjectDynamic);
		class UCollectableCollection* GetCollectableCollection();
		class UCharacterCollection* GetCharacterCollection();
		TArray<class UDBDDangerPredictionComponent*> GetAllDangerPredictionObjects();
		void CallOnSlasherSet(const class FScriptDelegate& Callback);
		void CallOnLevelReadyToPlay(const class FScriptDelegate& Callback);
		void CallOnIntroComplete(const class FScriptDelegate& Callback);
		void BroadcastOnSetBuildLevelData();
		void Authority_SignalEscapeDoorActivated(bool newEscapeDoorActivated);
		void Authority_SetSurvivorLeft(int32_t survivorRemaining);
		void Authority_SetObsessionTarget(class ACamperPlayer* obsessionTarget);
		void Authority_SetLevelReadyToPlay();
		void Authority_SetHatchOpen(bool OPENED);
		void Authority_SetGameStarted();
		void Authority_SetGameSelectedOffering(TArray<struct FSelectedOffering> offerings);
		void Authority_SetGameLevelLoaded();
		void Authority_SetGameLevelEnded(EEndGameReason endGameReason);
		void Authority_SetGameLevelCreated();
		void Authority_SetEscapeDoorOpened(bool OPENED);
		void Authority_SetAllPlayerLoaded();
		void Authority_EvaluateObsessionTarget(class ADBDPlayer* potentialTarget);
		void Authority_EscapeThroughHatch();
		void Authority_EnableObsession();
		void Authority_DeactivateAI();
		void AddTrap(class AInteractable* toAdd);
		void AddDangerPredictionObject(class UDBDDangerPredictionComponent* toAdd);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AttackableComponent
	 * Size -> 0x0000 (FullSize[0x00B8] - InheritedSize[0x00B8])
	 */
	class UAttackableComponent : public UActorComponent
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PresentationItemProgressComponent
	 * Size -> 0x0000 (FullSize[0x00B8] - InheritedSize[0x00B8])
	 */
	class UPresentationItemProgressComponent : public UActorComponent
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ScreenIndicatorWorldMarkerComponent
	 * Size -> 0x0018 (FullSize[0x0230] - InheritedSize[0x0218])
	 */
	class UScreenIndicatorWorldMarkerComponent : public USceneComponent
	{
	public:
		unsigned char                                              UnknownData_NTR5[0x4];                                   // 0x0218(0x0004) Fix Super Size
		struct FFloatRange                                         VisibleDistanceRange;                                    // 0x021C(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5VVW[0x4];                                   // 0x022C(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDEmblem
	 * Size -> 0x0050 (FullSize[0x0108] - InheritedSize[0x00B8])
	 */
	class UDBDEmblem : public UActorComponent
	{
	public:
		float                                                      _points;                                                 // 0x00B8(0x0004) Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_64YW[0x4];                                   // 0x00BC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FProgressionPoints>                          _progressionPoints;                                      // 0x00C0(0x0010) Net, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected
		struct FDataTableRowHandle                                 _definition;                                             // 0x00D0(0x0018) Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_AIUT[0x20];                                  // 0x00E8(0x0020) MISSED OFFSET (PADDING)

	public:
		void Client_FinalizeReplication(float Points, TArray<struct FProgressionPoints> ProgressionPoints);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AbstractGameFlowHandler
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UAbstractGameFlowHandler : public UGameInstanceSubsystem
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ActionButton
	 * Size -> 0x0270 (FullSize[0x05A8] - InheritedSize[0x0338])
	 */
	class UActionButton : public UMobileBaseUserWidget
	{
	public:
		struct FSlateBrush                                         DefaultImage;                                            // 0x0338(0x0090) Edit, DisableEditOnTemplate, NativeAccessSpecifierPublic
		class UImage*                                              IconImage;                                               // 0x03C8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UImage*                                              ToggleSmokeImage;                                        // 0x03D0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UButton*                                             Button;                                                  // 0x03D8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DefaultOpacity;                                          // 0x03E0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ToggledOpacity;                                          // 0x03E4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DisabledOpacity;                                         // 0x03E8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KOBP[0x4];                                   // 0x03EC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSlateBrush                                         Normal;                                                  // 0x03F0(0x0090) Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate
		struct FSlateBrush                                         Toggled;                                                 // 0x0480(0x0090) Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate
		struct FSlateBrush                                         Disabled;                                                // 0x0510(0x0090) Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate
		EActionButtonState                                         _currentState;                                           // 0x05A0(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		EActionButtonState                                         _previousState;                                          // 0x05A1(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_6WTH[0x6];                                   // 0x05A2(0x0006) MISSED OFFSET (PADDING)

	public:
		void SetState(EActionButtonState State);
		void SetSlateBrush(const struct FSlateBrush& InBrush);
		void SetPreviousState();
		void SetIcon(const struct FSlateBrush& SlateBrush);
		void PlayBecameAvailableAnimation();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.BasePerkIconStrategy
	 * Size -> 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
	 */
	class UBasePerkIconStrategy : public UObject
	{
	public:
		unsigned char                                              UnknownData_HX7H[0x8];                                   // 0x0030(0x0008) MISSED OFFSET (PADDING)

	public:
		bool GetIsRechargeableActive(class UPerk* Perk);
		bool GetIsRechargeable(class UPerk* Perk);
		float GetDisplayPercent(class UPerk* Perk);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ActivationAndTimerIconStrategy
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UActivationAndTimerIconStrategy : public UBasePerkIconStrategy
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ActivationTimerElapsedCooldownElapsedIconStrategy
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UActivationTimerElapsedCooldownElapsedIconStrategy : public UBasePerkIconStrategy
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ActivationTimerElapsedIconStrategy
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UActivationTimerElapsedIconStrategy : public UBasePerkIconStrategy
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ActivationTimerIconStrategy
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UActivationTimerIconStrategy : public UBasePerkIconStrategy
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ActivationTimerRemainingCooldownElapsedIconStrategy
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UActivationTimerRemainingCooldownElapsedIconStrategy : public UBasePerkIconStrategy
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ActivationTimerRemainingPercentIconStrategy
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UActivationTimerRemainingPercentIconStrategy : public UBasePerkIconStrategy
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ActiveOnTimerOrApplicablePerkIconStrategy
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UActiveOnTimerOrApplicablePerkIconStrategy : public UBasePerkIconStrategy
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ActiveOnTimerPerkIconStrategy
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UActiveOnTimerPerkIconStrategy : public UBasePerkIconStrategy
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ActiveWhenApplicableAndActivationAndCooldownPerkIconStrategy
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UActiveWhenApplicableAndActivationAndCooldownPerkIconStrategy : public UBasePerkIconStrategy
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ActiveWhenApplicableAndNotCampingPerkIconStrategy
	 * Size -> 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
	 */
	class UActiveWhenApplicableAndNotCampingPerkIconStrategy : public UBasePerkIconStrategy
	{
	public:
		unsigned char                                              UnknownData_0Q3U[0x8];                                   // 0x0038(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ActiveWhenApplicablePerkIconStrategy
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UActiveWhenApplicablePerkIconStrategy : public UBasePerkIconStrategy
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ActiveWhenKOdAndCooldownTimerPerkIconStrategy
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UActiveWhenKOdAndCooldownTimerPerkIconStrategy : public UBasePerkIconStrategy
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ActorClipperComponent
	 * Size -> 0x0080 (FullSize[0x0138] - InheritedSize[0x00B8])
	 */
	class UActorClipperComponent : public UActorComponent
	{
	public:
		class USphereComponent*                                    Shape;                                                   // 0x00B8(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TMap<class AActor*, struct FClippedActor>                  _clippedActors;                                          // 0x00C0(0x0050) Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
		TWeakObjectPtr<class UPrimitiveCollection>                 _clippables;                                             // 0x0110(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_74N7[0x20];                                  // 0x0118(0x0020) MISSED OFFSET (PADDING)

	public:
		void SetPrimitiveCollection(class UPrimitiveCollection* clippables);
		void OnOwnerLocallyObservedChanged(bool locallyObserved);
		void OnCameraChanged(EDBDCameraSocketID socketId);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ActorComponentExt
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UActorComponentExt : public UBlueprintFunctionLibrary
	{
	public:
		bool STATIC_IsLocallyObserved(class UActorComponent* ActorComponent, bool recursiveSearch);
		bool STATIC_IsLocallyControlled(class UActorComponent* ActorComponent, bool recursiveSearch);
		bool STATIC_HasAuthority(class UActorComponent* ActorComponent);
		class AActor* STATIC_GetValidatedOwner(class UActorComponent* ActorComponent);
		class ACamperPlayer* STATIC_GetOwningSurvivorChecked(class UActorComponent* ActorComponent, bool recursiveSearch);
		class ACamperPlayer* STATIC_GetOwningSurvivor(class UActorComponent* ActorComponent, bool recursiveSearch);
		class ADBDPlayer* STATIC_GetOwningPlayerInHierarchy(class UActorComponent* ActorComponent);
		class ADBDPlayer* STATIC_GetOwningPlayerChecked(class UActorComponent* ActorComponent, bool recursiveSearch);
		class ADBDPlayer* STATIC_GetOwningPlayer(class UActorComponent* ActorComponent, bool recursiveSearch);
		class APawn* STATIC_GetOwningPawnChecked(class UActorComponent* ActorComponent, bool recursiveSearch);
		class APawn* STATIC_GetOwningPawn(class UActorComponent* ActorComponent, bool recursiveSearch);
		class ASlasherPlayer* STATIC_GetOwningKiller(class UActorComponent* ActorComponent, bool recursiveSearch);
		class ACharacter* STATIC_GetOwningCharacterChecked(class UActorComponent* ActorComponent, bool recursiveSearch);
		class ACharacter* STATIC_GetOwningCharacter(class UActorComponent* ActorComponent, bool recursiveSearch);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ActorDependency
	 * Size -> 0x0010 (FullSize[0x00C8] - InheritedSize[0x00B8])
	 */
	class UActorDependency : public UActorComponent
	{
	public:
		TArray<struct FDependency>                                 Dependencies;                                            // 0x00B8(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ActorDetectorComponent
	 * Size -> 0x0028 (FullSize[0x00E0] - InheritedSize[0x00B8])
	 */
	class UActorDetectorComponent : public UActorComponent
	{
	public:
		class FScriptMulticastDelegate                             OnActorDetected;                                         // 0x00B8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		TArray<class UClass*>                                      CollectedTypes;                                          // 0x00C8(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
		class UPrimitiveComponent*                                 _primitive;                                              // 0x00D8(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void SetDetectionPrimitive(class UPrimitiveComponent* Primitive);
		void OnOverlapEnter(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ActorKnowledgeCollection
	 * Size -> 0x0050 (FullSize[0x0108] - InheritedSize[0x00B8])
	 */
	class UActorKnowledgeCollection : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_9EBQ[0x18];                                  // 0x00B8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class AActor*>                                      _actors;                                                 // 0x00D0(0x0010) Net, ZeroConstructor, Transient, RepNotify, NativeAccessSpecifierPrivate
		TArray<class AActor*>                                      _previousActors;                                         // 0x00E0(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		bool                                                       _available;                                              // 0x00F0(0x0001) Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_MIEF[0x7];                                   // 0x00F1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ACharacter*                                          _possessor;                                              // 0x00F8(0x0008) Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		EKnowledgeSharingType                                      _sharing;                                                // 0x0100(0x0001) Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_QFYV[0x7];                                   // 0x0101(0x0007) MISSED OFFSET (PADDING)

	public:
		void OnRep_Actors();
		void Local_SetAvailable(bool value);
		bool IsAvailable(class ACharacter* Character);
		bool Contains(class AActor* Actor);
		void Authority_SetSharingType(EKnowledgeSharingType value);
		void Authority_SetPossessor(class ACharacter* possessor);
		void Authority_SetAvailable(bool value);
		void Authority_Remove(class AActor* Actor);
		void Authority_Empty();
		void Authority_Append(TArray<class AActor*> Actors);
		bool Authority_Add(class AActor* Actor);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ActorSpawner
	 * Size -> 0x00B8 (FullSize[0x02D0] - InheritedSize[0x0218])
	 */
	class UActorSpawner : public USceneComponent
	{
	public:
		unsigned char                                              UnknownData_Q020[0x8];                                   // 0x0218(0x0008) Fix Super Size
		unsigned char                                              UnknownData_I9Y5[0x8];                                   // 0x0220(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EGameplayElementType                                       Type;                                                    // 0x0228(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F4RS[0x7];                                   // 0x0229(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              Visualization[0x30];                                     // 0x0230(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		bool                                                       ActivatedByDefault;                                      // 0x0260(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N2C3[0x7];                                   // 0x0261(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FActorSpawnerProperties>                     ActivatedSceneElement;                                   // 0x0268(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FActorSpawnerProperties>                     DeactivatedSceneElement;                                 // 0x0278(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		float                                                      Weight;                                                  // 0x0288(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SpawnCountMax;                                           // 0x028C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SpawnPriorityTier;                                       // 0x0290(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7NUF[0x4];                                   // 0x0294(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnAsyncActorSpawned;                                     // 0x0298(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3DH9[0x8];                                   // 0x02A8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       WeightInfluenceable;                                     // 0x02B0(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       WeightInfluencer;                                        // 0x02B1(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_EI5C[0x2];                                   // 0x02B2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Cost;                                                    // 0x02B4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UClass*                                              _toSpawn;                                                // 0x02B8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_TVYJ[0x8];                                   // 0x02C0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TWeakObjectPtr<class AActor>                               _spawnedActorOnAuthority;                                // 0x02C8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		bool UseActivatedElement();
		bool IsEnabled();
		void EditorForceSpawnVisualization();
		void AuthoritySelect(bool Selected);
		class AActor* AuthorityGetSpawnedActor();
		void Authority_SpawnActorAsyncEvent();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ObjectRandomizer
	 * Size -> 0x0018 (FullSize[0x0230] - InheritedSize[0x0218])
	 */
	class UObjectRandomizer : public USceneComponent
	{
	public:
		TArray<class UActorSpawner*>                               Spawners;                                                // 0x0218(0x0010) Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		int32_t                                                    MinPopulation;                                           // 0x0228(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxPopulation;                                           // 0x022C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ActorSpawnerRandomizer
	 * Size -> 0x0020 (FullSize[0x0250] - InheritedSize[0x0230])
	 */
	class UActorSpawnerRandomizer : public UObjectRandomizer
	{
	public:
		TArray<struct FSpawnerElement>                             ActivatedSpawnerContentLists;                            // 0x0230(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected
		TArray<struct FSpawnerElement>                             DeactivatedSpawnerContentLists;                          // 0x0240(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ActorVariationSpawner
	 * Size -> 0x0058 (FullSize[0x0270] - InheritedSize[0x0218])
	 */
	class UActorVariationSpawner : public USceneComponent
	{
	public:
		unsigned char                                              Visualization[0x30];                                     // 0x0218(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		TArray<struct FActorVariationElements>                     Variations;                                              // 0x0248(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_78IM[0x8];                                   // 0x0258(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              _toSpawn;                                                // 0x0260(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_Z26E[0x8];                                   // 0x0268(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AIBotsManager
	 * Size -> 0x0040 (FullSize[0x0078] - InheritedSize[0x0038])
	 */
	class UAIBotsManager : public UGameInstanceSubsystem
	{
	public:
		unsigned char                                              UnknownData_BVBM[0x40];                                  // 0x0038(0x0040) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AICharacterBehaviourData
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UAICharacterBehaviourData : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AICharacterBehaviour
	 * Size -> 0x0028 (FullSize[0x0058] - InheritedSize[0x0030])
	 */
	class UAICharacterBehaviour : public UObject
	{
	public:
		unsigned char                                              UnknownData_FKPJ[0x28];                                  // 0x0030(0x0028) MISSED OFFSET (PADDING)

	public:
		void Update(float DeltaTime);
		void Stop();
		void Start();
		void SetEnable(bool enable);
		void Resume();
		void Pause();
		bool IsEnabled();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AICharacterBehaviourInteractWithActor
	 * Size -> 0x0038 (FullSize[0x0090] - InheritedSize[0x0058])
	 */
	class UAICharacterBehaviourInteractWithActor : public UAICharacterBehaviour
	{
	public:
		class ADBDPlayer*                                          _aiPlayer;                                               // 0x0058(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class ADBDAIPlayerController*                              _aiPlayerController;                                     // 0x0060(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAICharacterBehaviourInteractWithActorData*          _behaviourData;                                          // 0x0068(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_0WD2[0x20];                                  // 0x0070(0x0020) MISSED OFFSET (PADDING)

	public:
		void OnMovementFinished(const struct FAIRequestID& RequestID, EPathFollowingResult Result);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AICharacterBehaviourDropPallet
	 * Size -> 0x0008 (FullSize[0x0098] - InheritedSize[0x0090])
	 */
	class UAICharacterBehaviourDropPallet : public UAICharacterBehaviourInteractWithActor
	{
	public:
		class APallet*                                             _targetPallet;                                           // 0x0090(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AICharacterBehaviourInteractWithActorData
	 * Size -> 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
	 */
	class UAICharacterBehaviourInteractWithActorData : public UAICharacterBehaviourData
	{
	public:
		class AActor*                                              TargetActor;                                             // 0x0030(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MQVQ[0x10];                                  // 0x0038(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		ECharacterMovementTypes                                    characterMovementType;                                   // 0x0048(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       usePathfinding;                                          // 0x0049(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YZ2A[0x6];                                   // 0x004A(0x0006) MISSED OFFSET (PADDING)

	public:
		void WatchGameEventTypes(TArray<struct FGameplayTag> gameEventTypes);
		void WatchGameEventType(const struct FGameplayTag& gameEventType);
		void Init(class AActor* Actor, ECharacterMovementTypes characterMovementType, bool usePathfinding);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AICharacterBehaviourInteractWithHook
	 * Size -> 0x0008 (FullSize[0x0098] - InheritedSize[0x0090])
	 */
	class UAICharacterBehaviourInteractWithHook : public UAICharacterBehaviourInteractWithActor
	{
	public:
		class AMeatHook*                                           _targetHook;                                             // 0x0090(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AICharacterEscapeCarriedData
	 * Size -> 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
	 */
	class UAICharacterEscapeCarriedData : public UAICharacterBehaviourData
	{
	public:
		bool                                                       _preventWiggleSuccess;                                   // 0x0030(0x0001) Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_QABQ[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (PADDING)

	public:
		void Init(bool preventWiggleSuccess);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AICharacterEscapeCarried
	 * Size -> 0x0010 (FullSize[0x0068] - InheritedSize[0x0058])
	 */
	class UAICharacterEscapeCarried : public UAICharacterBehaviour
	{
	public:
		class ACamperPlayer*                                       _camperPlayer;                                           // 0x0058(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UAICharacterEscapeCarriedData*                       _behaviourData;                                          // 0x0060(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CharacterEvasionBehaviourData
	 * Size -> 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
	 */
	class UCharacterEvasionBehaviourData : public UAICharacterBehaviourData
	{
	public:
		class AActor*                                              _hunter;                                                 // 0x0030(0x0008) Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<class AActor*>                                      _escapePoints;                                           // 0x0038(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPrivate
		float                                                      _minEscapeDist;                                          // 0x0048(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_AB99[0x4];                                   // 0x004C(0x0004) MISSED OFFSET (PADDING)

	public:
		void Init(class AActor* Hunter, TArray<class AActor*> escapePoints, float minEscapeDist);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AICharacterEvasionBehaviour
	 * Size -> 0x0028 (FullSize[0x0080] - InheritedSize[0x0058])
	 */
	class UAICharacterEvasionBehaviour : public UAICharacterBehaviour
	{
	public:
		class ADBDPlayer*                                          _prey;                                                   // 0x0058(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class ADBDAIPlayerController*                              _preyAIController;                                       // 0x0060(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class AActor*                                              _currentEscapePoint;                                     // 0x0068(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UCharacterEvasionBehaviourData*                      _characterEvasionData;                                   // 0x0070(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_70UZ[0x8];                                   // 0x0078(0x0008) MISSED OFFSET (PADDING)

	public:
		void EscapeDestinationReached(const struct FAIRequestID& RequestID, EPathFollowingResult Result);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AICharacterHideInLockerBehaviourData
	 * Size -> 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
	 */
	class UAICharacterHideInLockerBehaviourData : public UAICharacterBehaviourData
	{
	public:
		class ALocker*                                             TargetLocker;                                            // 0x0030(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECharacterMovementTypes                                    characterMovementType;                                   // 0x0038(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VZJ1[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (PADDING)

	public:
		void Init(class ALocker* Locker, ECharacterMovementTypes characterMovementType);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AICharacterHideInLockerBehaviour
	 * Size -> 0x0038 (FullSize[0x0090] - InheritedSize[0x0058])
	 */
	class UAICharacterHideInLockerBehaviour : public UAICharacterBehaviour
	{
	public:
		class ADBDPlayer*                                          _aiPlayer;                                               // 0x0058(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class ADBDAIPlayerController*                              _aiPlayerController;                                     // 0x0060(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_JN1S[0x18];                                  // 0x0068(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAICharacterHideInLockerBehaviourData*               _characterHideInLockerData;                              // 0x0080(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_YZUH[0x8];                                   // 0x0088(0x0008) MISSED OFFSET (PADDING)

	public:
		void OnMovementFinished(const struct FAIRequestID& RequestID, EPathFollowingResult Result);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AICharacterRepairGeneratorBehaviourData
	 * Size -> 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
	 */
	class UAICharacterRepairGeneratorBehaviourData : public UAICharacterBehaviourData
	{
	public:
		class AGenerator*                                          _generator;                                              // 0x0030(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		ECharacterMovementTypes                                    _characterMovementType;                                  // 0x0038(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_20GY[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (PADDING)

	public:
		void Init(class AGenerator* Generator, ECharacterMovementTypes characterMovementType);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AICharacterRepairGeneratorBehaviour
	 * Size -> 0x0040 (FullSize[0x0098] - InheritedSize[0x0058])
	 */
	class UAICharacterRepairGeneratorBehaviour : public UAICharacterBehaviour
	{
	public:
		unsigned char                                              UnknownData_9D0Y[0x10];                                  // 0x0058(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ADBDPlayer*                                          _aiPlayer;                                               // 0x0068(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class ADBDAIPlayerController*                              _aiPlayerController;                                     // 0x0070(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UInteractor*                                         _targetInteractor;                                       // 0x0078(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UAICharacterRepairGeneratorBehaviourData*            _characterRepairGeneratorData;                           // 0x0080(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_4MP8[0x10];                                  // 0x0088(0x0010) MISSED OFFSET (PADDING)

	public:
		void OnMovementFinished(const struct FAIRequestID& RequestID, EPathFollowingResult Result);
		void OnGeneratorRepairedEventHandler(bool isAutoCompleted);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AIHealAllyBehaviourData
	 * Size -> 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
	 */
	class UAIHealAllyBehaviourData : public UAICharacterBehaviourData
	{
	public:
		class ACamperPlayer*                                       _targetAlly;                                             // 0x0030(0x0008) Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void Init(class ACamperPlayer* allyToHealTarget);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AIHealAllyBehaviour
	 * Size -> 0x0028 (FullSize[0x0080] - InheritedSize[0x0058])
	 */
	class UAIHealAllyBehaviour : public UAICharacterBehaviour
	{
	public:
		class UAIHealAllyBehaviourData*                            _behaviourData;                                          // 0x0058(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class ADBDAIPlayerController*                              _aiController;                                           // 0x0060(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class ADBDPlayer*                                          _aiPlayer;                                               // 0x0068(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_VBWK[0x10];                                  // 0x0070(0x0010) MISSED OFFSET (PADDING)

	public:
		void TargetPositionReached(const struct FAIRequestID& RequestID, EPathFollowingResult Result);
		void Init(class ADBDPlayer* Character, class UAICharacterBehaviourData* behaviourData);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AimableInterface
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UAimableInterface : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AimAssistComponent
	 * Size -> 0x0030 (FullSize[0x00E8] - InheritedSize[0x00B8])
	 */
	class UAimAssistComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_QCP1[0x30];                                  // 0x00B8(0x0030) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AIMoveToInteractData
	 * Size -> 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
	 */
	class UAIMoveToInteractData : public UAICharacterBehaviourData
	{
	public:
		class AActor*                                              _interactActor;                                          // 0x0030(0x0008) Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class AActor*                                              _targetPositionActor;                                    // 0x0038(0x0008) Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		ECharacterMovementTypes                                    _characterMovementTypes;                                 // 0x0040(0x0001) Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_J5FK[0x7];                                   // 0x0041(0x0007) MISSED OFFSET (PADDING)

	public:
		void Init(class AActor* interactActor, ECharacterMovementTypes characterMovementTypes, class AActor* targetPositionActor);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AIMoveToInteract
	 * Size -> 0x0018 (FullSize[0x0070] - InheritedSize[0x0058])
	 */
	class UAIMoveToInteract : public UAICharacterBehaviour
	{
	public:
		class UAIMoveToInteractData*                               _aiMoveToInteractData;                                   // 0x0058(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class ADBDAIPlayerController*                              _aiController;                                           // 0x0060(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_MLJB[0x8];                                   // 0x0068(0x0008) MISSED OFFSET (PADDING)

	public:
		void InteractionPointReached(const struct FAIRequestID& RequestID, EPathFollowingResult Result);
		void Init(class ADBDPlayer* Character, class UAICharacterBehaviourData* behaviourData);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AIMoveToPositionData
	 * Size -> 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
	 */
	class UAIMoveToPositionData : public UAICharacterBehaviourData
	{
	public:
		class AActor*                                              _positionActor;                                          // 0x0030(0x0008) Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		ECharacterMovementTypes                                    _movementType;                                           // 0x0038(0x0001) Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _usePathfinding;                                         // 0x0039(0x0001) Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_CYLR[0x6];                                   // 0x003A(0x0006) MISSED OFFSET (PADDING)

	public:
		void Init(class AActor* positionActor, ECharacterMovementTypes movementType, bool usePathfinding);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AIMoveToPosition
	 * Size -> 0x0018 (FullSize[0x0070] - InheritedSize[0x0058])
	 */
	class UAIMoveToPosition : public UAICharacterBehaviour
	{
	public:
		class UAIMoveToPositionData*                               _aiBehaviourData;                                        // 0x0058(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class ADBDAIPlayerController*                              _aiController;                                           // 0x0060(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_SH7M[0x8];                                   // 0x0068(0x0008) MISSED OFFSET (PADDING)

	public:
		void TargetPositionReached(const struct FAIRequestID& RequestID, EPathFollowingResult Result);
		void Init(class ADBDPlayer* Character, class UAICharacterBehaviourData* behaviourData);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AIPointOfInterestTargetInterface
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UAIPointOfInterestTargetInterface : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AISenseConfig_PointOfInterest
	 * Size -> 0x0010 (FullSize[0x0060] - InheritedSize[0x0050])
	 */
	class UAISenseConfig_PointOfInterest : public UAISenseConfig
	{
	public:
		class UClass*                                              Implementation;                                          // 0x0050(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoClear, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinGeneratorRepairSoundRange;                            // 0x0058(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxGeneratorRepairSoundRange;                            // 0x005C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AISense_PointOfInterest
	 * Size -> 0x0010 (FullSize[0x00A0] - InheritedSize[0x0090])
	 */
	class UAISense_PointOfInterest : public UAISense
	{
	public:
		TArray<class AActor*>                                      _sources;                                                // 0x0090(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AISenseConfig_Trail
	 * Size -> 0x0018 (FullSize[0x0068] - InheritedSize[0x0050])
	 */
	class UAISenseConfig_Trail : public UAISenseConfig
	{
	public:
		class UClass*                                              Implementation;                                          // 0x0050(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoClear, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxRange;                                                // 0x0058(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PeripheralVisionAngleDegrees;                            // 0x005C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FAISenseAffiliationFilter                           DetectionByAffiliation;                                  // 0x0060(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2H7D[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AISenseEvent_Trail
	 * Size -> 0x0030 (FullSize[0x0060] - InheritedSize[0x0030])
	 */
	class UAISenseEvent_Trail : public UAISenseEvent
	{
	public:
		struct FAITrailEvent                                       Event;                                                   // 0x0030(0x0030) Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AISense_Trail
	 * Size -> 0x0060 (FullSize[0x00F0] - InheritedSize[0x0090])
	 */
	class UAISense_Trail : public UAISense
	{
	public:
		TArray<struct FAITrailEvent>                               Events;                                                  // 0x0090(0x0010) ZeroConstructor, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_BGG4[0x50];                                  // 0x00A0(0x0050) MISSED OFFSET (PADDING)

	public:
		void STATIC_ReportTrailEvent(class UObject* worldContextObj, const struct FVector& Location, class AActor* Instigator, const struct FGameplayTag& IgnoreOnPerkTag, float lifetime);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AISlasherChaseAndAttackBehaviourData
	 * Size -> 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
	 */
	class UAISlasherChaseAndAttackBehaviourData : public UAICharacterBehaviourData
	{
	public:
		class ACamperPlayer*                                       _targetSurvivor;                                         // 0x0030(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _sqrtAttackRangeDistance;                                // 0x0038(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _sqrtMaxTargetPositionDiff;                              // 0x003C(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void Init(class ACamperPlayer* targetSurvivor, float attackRangeDistance, float locationDistance);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AISlasherChaseAndAttackBehaviour
	 * Size -> 0x0028 (FullSize[0x0080] - InheritedSize[0x0058])
	 */
	class UAISlasherChaseAndAttackBehaviour : public UAICharacterBehaviour
	{
	public:
		class UAISlasherChaseAndAttackBehaviourData*               _behaviourData;                                          // 0x0058(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class ASlasherPlayer*                                      _slasherPlayer;                                          // 0x0060(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class ADBDAIPlayerController*                              _slasherAIPlayerController;                              // 0x0068(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_ZDMD[0x10];                                  // 0x0070(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AISlasherMoveToGrabSurvivorBehaviourData
	 * Size -> 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
	 */
	class UAISlasherMoveToGrabSurvivorBehaviourData : public UAICharacterBehaviourData
	{
	public:
		class ACamperPlayer*                                       _targetSurvivor;                                         // 0x0030(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void Init(class ACamperPlayer* targetSurvivor);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AISlasherMoveToGrabSurvivorBehaviour
	 * Size -> 0x0028 (FullSize[0x0080] - InheritedSize[0x0058])
	 */
	class UAISlasherMoveToGrabSurvivorBehaviour : public UAICharacterBehaviour
	{
	public:
		class UAISlasherMoveToGrabSurvivorBehaviourData*           _behaviourData;                                          // 0x0058(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class ASlasherPlayer*                                      _slasherPlayer;                                          // 0x0060(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class ADBDAIPlayerController*                              _slasherAIPlayerController;                              // 0x0068(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_CL8R[0x10];                                  // 0x0070(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ScreenBase
	 * Size -> 0x00F0 (FullSize[0x0120] - InheritedSize[0x0030])
	 */
	class UScreenBase : public UObject
	{
	public:
		bool                                                       isAnimationDone;                                         // 0x0030(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N6O4[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UGFxObject*                                          ScreenObject;                                            // 0x0038(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UScreenController*                                   _screenController;                                       // 0x0040(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_CXR3[0xD8];                                  // 0x0048(0x00D8) MISSED OFFSET (PADDING)

	public:
		void SetFadesOut(bool fadesOut);
		void OnTextInputMouseClicked(bool IsPassword);
		void OnStart();
		void OnNavKey(const class FString& navKey);
		void OnHideVirtualKeyboardRequested();
		void OnEscape();
		void OnBack();
		void OnAnyKey(float Code);
		void OnAnimationUpdate(int32_t isAnimationDone);
		void BroadcastOnHighlightedElementClickedEvent(const class FName& onBoardingID);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AlertsScreen
	 * Size -> 0x0018 (FullSize[0x0138] - InheritedSize[0x0120])
	 */
	class UAlertsScreen : public UScreenBase
	{
	public:
		unsigned char                                              UnknownData_GMEP[0x18];                                  // 0x0120(0x0018) MISSED OFFSET (PADDING)

	public:
		void RewardAlertSequenceCompleted();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AlwaysVisiblePerkIconStrategy
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UAlwaysVisiblePerkIconStrategy : public UBasePerkIconStrategy
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.Gate
	 * Size -> 0x0018 (FullSize[0x0248] - InheritedSize[0x0230])
	 */
	class AGate : public AActor
	{
	public:
		TArray<float>                                              InteractionInputs;                                       // 0x0230(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		float                                                      InteractionOutput;                                       // 0x0240(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AH2C[0x4];                                   // 0x0244(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AndGate
	 * Size -> 0x0000 (FullSize[0x0248] - InheritedSize[0x0248])
	 */
	class AAndGate : public AGate
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AnimationFollowerActor
	 * Size -> 0x0068 (FullSize[0x0298] - InheritedSize[0x0230])
	 */
	class AAnimationFollowerActor : public AActor
	{
	public:
		class UDBDSkeletalMeshComponentBudgeted*                   _skeletalMeshComponent;                                  // 0x0230(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAnimationMontageSlave*                              _montageFollower;                                        // 0x0238(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UMontagePlayer*                                      _montagePlayer;                                          // 0x0240(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_HV7D[0x50];                                  // 0x0248(0x0050) MISSED OFFSET (PADDING)

	public:
		void OnMontageStopped(const struct FAnimationMontageDescriptor& ID);
		void OnMontageStarted(const struct FAnimationMontageDescriptor& ID, float Rate);
		void OnMontageEnd(const struct FAnimationMontageDescriptor& Montage, bool interrupted);
		void NativeOnMontageStopped(const struct FAnimationMontageDescriptor& ID);
		void NativeOnMontageStarted(const struct FAnimationMontageDescriptor& ID, float Rate);
		void NativeOnMontageEnded(const struct FAnimationMontageDescriptor& Montage, bool interrupted);
		void Cosmetic_OnMontageStopped();
		void Cosmetic_OnMontageStarted();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AnimationMontageSlave
	 * Size -> 0x0008 (FullSize[0x00C0] - InheritedSize[0x00B8])
	 */
	class UAnimationMontageSlave : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_5VQB[0x8];                                   // 0x00B8(0x0008) MISSED OFFSET (PADDING)

	public:
		void SetLeader(class UMontagePlayer* Leader);
		void OnMontageStopped(const struct FAnimationMontageDescriptor& ID);
		void OnMontageStarted(const struct FAnimationMontageDescriptor& ID, float Rate);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AnimNotifyState_HideCustomizationAttachments
	 * Size -> 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
	 */
	class UAnimNotifyState_HideCustomizationAttachments : public UAnimNotifyState
	{
	public:
		ECustomizationCategory                                     Category;                                                // 0x0038(0x0001) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QK88[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AnimTagProvider
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UAnimTagProvider : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ApplicableActivationTimerElapsedIconStrategy
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UApplicableActivationTimerElapsedIconStrategy : public UBasePerkIconStrategy
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ApplicableActivationTimerRemainingCooldownElapsedIconStrategy
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UApplicableActivationTimerRemainingCooldownElapsedIconStrategy : public UBasePerkIconStrategy
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ApplicableActivationTimerRemainingIconStrategy
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UApplicableActivationTimerRemainingIconStrategy : public UBasePerkIconStrategy
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ApplicableAndStealthRatioIconStrategy
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UApplicableAndStealthRatioIconStrategy : public UBasePerkIconStrategy
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.BasePopupScreen
	 * Size -> 0x0000 (FullSize[0x0120] - InheritedSize[0x0120])
	 */
	class UBasePopupScreen : public UScreenBase
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.GenericPopupScreen
	 * Size -> 0x0020 (FullSize[0x0140] - InheritedSize[0x0120])
	 */
	class UGenericPopupScreen : public UBasePopupScreen
	{
	public:
		class UUMGGenericPopup*                                    _popup;                                                  // 0x0120(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_L746[0x18];                                  // 0x0128(0x0018) MISSED OFFSET (PADDING)

	public:
		void OnChoiceSelected(int32_t selectedButtonType);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ArchivePassPurchasePopupScreen
	 * Size -> 0x0000 (FullSize[0x0140] - InheritedSize[0x0140])
	 */
	class UArchivePassPurchasePopupScreen : public UGenericPopupScreen
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ArchivesHelper
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UArchivesHelper : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ArchivesManager
	 * Size -> 0x0038 (FullSize[0x0070] - InheritedSize[0x0038])
	 */
	class UArchivesManager : public UGameInstanceSubsystem
	{
	public:
		unsigned char                                              UnknownData_N0S2[0x20];                                  // 0x0038(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UArchiveStoriesContainer*                            _storiesContainer;                                       // 0x0058(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UArchiveVignettesContainer*                          _vignettesContainer;                                     // 0x0060(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class URewardTrackContainer*                               _rewardTrackContainer;                                   // 0x0068(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ArchivesSpecialBehavioursHelper
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UArchivesSpecialBehavioursHelper : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ArchiveStoriesContainer
	 * Size -> 0x0408 (FullSize[0x0438] - InheritedSize[0x0030])
	 */
	class UArchiveStoriesContainer : public UObject
	{
	public:
		unsigned char                                              UnknownData_SSTX[0x2B8];                                 // 0x0030(0x02B8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class URewardTrackContainer*                               _rewardTrackContainer;                                   // 0x02E8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_93Y2[0xC8];                                  // 0x02F0(0x00C8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UWalletHandler*                                      _wallet;                                                 // 0x03B8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UArchiveVignettesContainer*                          _vignettesContainer;                                     // 0x03C0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_6Q3R[0x70];                                  // 0x03C8(0x0070) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ArchiveTierPurchasePopupScreen
	 * Size -> 0x0018 (FullSize[0x0158] - InheritedSize[0x0140])
	 */
	class UArchiveTierPurchasePopupScreen : public UGenericPopupScreen
	{
	public:
		unsigned char                                              UnknownData_FTP4[0x18];                                  // 0x0140(0x0018) MISSED OFFSET (PADDING)

	public:
		void OnConfirmPurchase(int32_t tiersToPurchaseNumber);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ArchiveVignettesContainer
	 * Size -> 0x00D8 (FullSize[0x0108] - InheritedSize[0x0030])
	 */
	class UArchiveVignettesContainer : public UObject
	{
	public:
		unsigned char                                              UnknownData_K0US[0xD8];                                  // 0x0030(0x00D8) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ArchiveWidgetScreen
	 * Size -> 0x0030 (FullSize[0x0150] - InheritedSize[0x0120])
	 */
	class UArchiveWidgetScreen : public UScreenBase
	{
	public:
		unsigned char                                              UnknownData_OOS4[0x30];                                  // 0x0120(0x0030) MISSED OFFSET (PADDING)

	public:
		void OnRewardsButtonClick();
		void OnQuestsButtonClick();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AspectRatioComponentUtilities
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UAspectRatioComponentUtilities : public UBlueprintFunctionLibrary
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AssetLibrary
	 * Size -> 0x0080 (FullSize[0x00B0] - InheritedSize[0x0030])
	 */
	class UAssetLibrary : public UObject
	{
	public:
		unsigned char                                              UnknownData_VK0X[0x8];                                   // 0x0030(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UObjectLibrary*                                      _objectLibrary;                                          // 0x0038(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_G1FV[0x64];                                  // 0x0040(0x0064) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SecondsDelayBetweenBatch;                                // 0x00A4(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_09VL[0x8];                                   // 0x00A8(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AssetLibraryManager
	 * Size -> 0x00D0 (FullSize[0x0100] - InheritedSize[0x0030])
	 */
	class UAssetLibraryManager : public UObject
	{
	public:
		unsigned char                                              UnknownData_ABQR[0x10];                                  // 0x0030(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UObject*                                             _worldContextObject;                                     // 0x0040(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TMap<int32_t, class UCharacterItemsAssetLibrary*>          _characterItemsAssetLibrary;                             // 0x0048(0x0050) Transient, NativeAccessSpecifierPrivate
		class UIniAssetLibrary*                                    _globalAssetLibrary;                                     // 0x0098(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UMenuAssetLibrary*                                   _menuAssetLibrary;                                       // 0x00A0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UGameAssetLibrary*                                   _gameAssetLibrary;                                       // 0x00A8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UTutorialAssetLibrary*                               _tutorialAssetLibrary;                                   // 0x00B0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_6OMA[0x8];                                   // 0x00B8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class Ushopmanager*                                        _shopManager;                                            // 0x00C0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_YEH7[0x10];                                  // 0x00C8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FAssetLibraryLoader>                         _loadingList;                                            // 0x00D8(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		int32_t                                                    CharacterItemsAssetLoadCountPerChunk;                    // 0x00E8(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    BlindPackAssetLoadCountPerChunk;                         // 0x00EC(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    MenuAssetLoadCountPerChunk;                              // 0x00F0(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    GlobalAssetLoadCountPerChunk;                            // 0x00F4(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    GameAssetLoadCountPerChunk;                              // 0x00F8(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_4GUU[0x4];                                   // 0x00FC(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AssetUtilities
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UAssetUtilities : public UBlueprintFunctionLibrary
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AtlantaCustomGameUtilities
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UAtlantaCustomGameUtilities : public UBlueprintFunctionLibrary
	{
	public:
		bool STATIC_IsInCustomGameLobby(class UDBDGameInstance* GameInstance);
		bool STATIC_IsCustomGameEnabled();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.BaseTooltipWidget
	 * Size -> 0x0038 (FullSize[0x0370] - InheritedSize[0x0338])
	 */
	class UBaseTooltipWidget : public UMobileBaseUserWidget
	{
	public:
		class UTextBlock*                                          TitleLabel;                                              // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        TooltipContainer;                                        // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGHtmlRichText*                                    DescriptionLabel;                                        // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UButton*                                             CloseButton;                                             // 0x0350(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_YIPD[0x10];                                  // 0x0358(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       TooltipOpeningSound;                                     // 0x0368(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void OnQuitButtonClicked();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AtlantaCustomizationTooltipWidget
	 * Size -> 0x0018 (FullSize[0x0388] - InheritedSize[0x0370])
	 */
	class UAtlantaCustomizationTooltipWidget : public UBaseTooltipWidget
	{
	public:
		class UImage*                                              SmokeImage;                                              // 0x0370(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGCustomizationTooltipHeaderWidget*                Header;                                                  // 0x0378(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGCustomizationTooltipContentWidget*               Content;                                                 // 0x0380(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AtlantaDeepLinkSubsystem
	 * Size -> 0x0028 (FullSize[0x0060] - InheritedSize[0x0038])
	 */
	class UAtlantaDeepLinkSubsystem : public UGameInstanceSubsystem
	{
	public:
		unsigned char                                              UnknownData_RBOY[0x28];                                  // 0x0038(0x0028) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DisplayStand
	 * Size -> 0x0180 (FullSize[0x03B0] - InheritedSize[0x0230])
	 */
	class ADisplayStand : public AActor
	{
	public:
		unsigned char                                              UnknownData_GV9W[0x18];                                  // 0x0230(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              _currentActorDisplayed;                                  // 0x0248(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_4Q22[0x8];                                   // 0x0250(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              _currentActorDisplayedClass;                             // 0x0258(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UClass*                                              _nextActorToDisplayClass;                                // 0x0260(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_40RU[0x28];                                  // 0x0268(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class UClass*, struct FTransform>                     _offsetByClass;                                          // 0x0290(0x0050) Edit, DisableEditOnTemplate, NativeAccessSpecifierPrivate
		TMap<class UClass*, bool>                                  _enableRotationByClass;                                  // 0x02E0(0x0050) Edit, DisableEditOnTemplate, NativeAccessSpecifierPrivate
		unsigned char                                              _defaultCharmClassDisplayable[0x30];                     // 0x0330(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              UnknownData_OJBO[0x39];                                  // 0x0360(0x0039) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       _useOffsetMenuAnimations;                                // 0x0399(0x0001) Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _displayDummyCharacter;                                  // 0x039A(0x0001) Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_NNRZ[0x1];                                   // 0x039B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FCharacterDropdown                                  _characterDropdown;                                      // 0x039C(0x0008) Edit, NoDestructor, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_YDKR[0xC];                                   // 0x03A4(0x000C) MISSED OFFSET (PADDING)

	public:
		void OnCurrentActorDestroyed(class AActor* DestroyedActor);
		void BlockRotation(bool shouldBlockRotation);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AtlantaDisplayStand
	 * Size -> 0x0010 (FullSize[0x03C0] - InheritedSize[0x03B0])
	 */
	class AAtlantaDisplayStand : public ADisplayStand
	{
	public:
		class USceneComponent*                                     SurvivorPositionMarker;                                  // 0x03B0(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USceneComponent*                                     KillerPositionMarker;                                    // 0x03B8(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AtlantaEventsTemplateDataAsset
	 * Size -> 0x0050 (FullSize[0x0088] - InheritedSize[0x0038])
	 */
	class UAtlantaEventsTemplateDataAsset : public UPrimaryDataAsset
	{
	public:
		TMap<EEventsType, class UClass*>                           Data;                                                    // 0x0038(0x0050) Edit, Protected, UObjectWrapper, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AtlantaFriendsListScreenUMG
	 * Size -> 0x0080 (FullSize[0x01A0] - InheritedSize[0x0120])
	 */
	class UAtlantaFriendsListScreenUMG : public UScreenBase
	{
	public:
		unsigned char                                              UnknownData_Q3MQ[0x78];                                  // 0x0120(0x0078) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UUMGAtlantaFriendListScreen*                         _atlantaFriendListScreen;                                // 0x0198(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void HandleResearchButtonClicked(const class FText& searchInput);
		void HandleClosedButtonClicked();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AtlantaHudDirectionalStick
	 * Size -> 0x0048 (FullSize[0x0380] - InheritedSize[0x0338])
	 */
	class UAtlantaHudDirectionalStick : public UMobileBaseUserWidget
	{
	public:
		class UCanvasPanel*                                        JoystickAnimationPanel;                                  // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        ContainerToRotate;                                       // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        ArrowsContainer;                                         // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              JoystickLockImage;                                       // 0x0350(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              JoystickOn;                                              // 0x0358(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        AutoRunContainer;                                        // 0x0360(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _isMovementLockAnimationActive;                          // 0x0368(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_3XHZ[0x17];                                  // 0x0369(0x0017) MISSED OFFSET (PADDING)

	public:
		void SetMovementLockAnimationStatus(bool value);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AtlantaHudLookBackJoystick
	 * Size -> 0x0008 (FullSize[0x0340] - InheritedSize[0x0338])
	 */
	class UAtlantaHudLookBackJoystick : public UMobileBaseUserWidget
	{
	public:
		class UGridPanel*                                          TutorialAnimContainer;                                   // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AtlantaHudPowerAttackJoystick
	 * Size -> 0x0050 (FullSize[0x0388] - InheritedSize[0x0338])
	 */
	class UAtlantaHudPowerAttackJoystick : public UMobileBaseUserWidget
	{
	public:
		unsigned char                                              UnknownData_B84M[0x8];                                   // 0x0338(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCanvasPanel*                                        AnimationContainer;                                      // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FName                                                _availableAnimationName;                                 // 0x0348(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FName                                                _fadeOutAnimationName;                                   // 0x0354(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FName                                                _tutoStartAnimationName;                                 // 0x0360(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FName                                                _tutoLoopAnimationName;                                  // 0x036C(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              Icon;                                                    // 0x0378(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_V5B6[0x8];                                   // 0x0380(0x0008) MISSED OFFSET (PADDING)

	public:
		void OnFinishedTutorialAnimationIn();
		void OnFinishedAvailableAnimation();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.LobbyLevel
	 * Size -> 0x0088 (FullSize[0x02C0] - InheritedSize[0x0238])
	 */
	class ALobbyLevel : public ALevelScriptActor
	{
	public:
		unsigned char                                              UnknownData_P5M5[0x48];                                  // 0x0238(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class ADisplayStand*>                               _registeredDisplayStands;                                // 0x0280(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		EWorldFlowEvent                                            LobbyLoadedEvent;                                        // 0x0290(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_6R21[0x2F];                                  // 0x0291(0x002F) MISSED OFFSET (PADDING)

	public:
		void OnShopSubLevelLoaded();
		void OnLobbySubLevelLoaded();
		void OnAdditionalSubLevelsLoaded();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AtlantaLobbyLevel
	 * Size -> 0x0040 (FullSize[0x0300] - InheritedSize[0x02C0])
	 */
	class AAtlantaLobbyLevel : public ALobbyLevel
	{
	public:
		unsigned char                                              UnknownData_K0P5[0x10];                                  // 0x02C0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FLightingChannels                                   ForefrontLightingChannel;                                // 0x02D0(0x0001) Edit, NoDestructor, NativeAccessSpecifierPrivate
		struct FLightingChannels                                   BackgroundLightingChannel;                               // 0x02D1(0x0001) Edit, NoDestructor, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_2TX9[0x6];                                   // 0x02D2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AAtlantaOfflineLobbyCamera*                          _offlineLobbyCamera;                                     // 0x02D8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class AActor*                                              _roleSelectionLobbyCameraPosition;                       // 0x02E0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class AActor*                                              _characterSelectionLobbyCameraPosition;                  // 0x02E8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class AActor*                                              _loadoutSelectionLobbyCameraPosition;                    // 0x02F0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_1C3A[0x8];                                   // 0x02F8(0x0008) MISSED OFFSET (PADDING)

	public:
		void OnFrontPawnSpawned(class AActor* forefrontPawn);
		void OnBackPawnSpawned(class AActor* backgroundPawn);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AtlantaNavigationScreen
	 * Size -> 0x0008 (FullSize[0x0128] - InheritedSize[0x0120])
	 */
	class UAtlantaNavigationScreen : public UScreenBase
	{
	public:
		class UUMGAtlantaNavigationScreen*                         _umgScreen;                                              // 0x0120(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AtlantaObjectiveWidget
	 * Size -> 0x0068 (FullSize[0x03A0] - InheritedSize[0x0338])
	 */
	class UAtlantaObjectiveWidget : public UMobileBaseUserWidget
	{
	public:
		class UTextBlock*                                          ObjectiveLabel;                                          // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1OLX[0x54];                                  // 0x0340(0x0054) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      _totalFadeOutTime;                                       // 0x0394(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    _polynomialOrder;                                        // 0x0398(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_NDDI[0x4];                                   // 0x039C(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AtlantaOfflineLobbyCamera
	 * Size -> 0x0010 (FullSize[0x07D0] - InheritedSize[0x07C0])
	 */
	class AAtlantaOfflineLobbyCamera : public ACameraActor
	{
	public:
		float                                                      ZCameraPositionOffsetMultiplier;                         // 0x07C0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1HSL[0x4];                                   // 0x07C4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      _kDefaultAspectRatio;                                    // 0x07C8(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_VO5Z[0x4];                                   // 0x07CC(0x0004) MISSED OFFSET (PADDING)

	public:
		void SetCameraRotation(const struct FRotator& rotationVector);
		void SetCameraPosition(const struct FVector& positionVector);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AtlantaPartyFlowHandler
	 * Size -> 0x0248 (FullSize[0x0278] - InheritedSize[0x0030])
	 */
	class UAtlantaPartyFlowHandler : public UObject
	{
	public:
		unsigned char                                              UnknownData_QSXE[0x248];                                 // 0x0030(0x0248) MISSED OFFSET (PADDING)

	public:
		void DisplayPartyFlowHandlerInfo();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AtlantaPartyFlowUtilities
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UAtlantaPartyFlowUtilities : public UObject
	{
	public:
		bool STATIC_IsCurrentPlayerInParty();
		bool STATIC_IsCurrentPlayerAloneInParty();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AtlantaInstalledContent
	 * Size -> 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
	 */
	class UAtlantaInstalledContent : public UObject
	{
	public:
		unsigned char                                              UnknownData_N2ME[0x20];                                  // 0x0030(0x0020) MISSED OFFSET (PADDING)

	public:
		bool Mount(int32_t PakOrder, const class FString& MountPoint);
		float GetInstalledContentSize();
		float GetFreeDiskSpace();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AtlantaPendingContent
	 * Size -> 0x0040 (FullSize[0x0090] - InheritedSize[0x0050])
	 */
	class UAtlantaPendingContent : public UAtlantaInstalledContent
	{
	public:
		unsigned char                                              UnknownData_0LRQ[0x40];                                  // 0x0050(0x0040) MISSED OFFSET (PADDING)

	public:
		void StartInstall(const class FScriptDelegate& OnSucceeded, const class FScriptDelegate& OnFailed);
		float GetTotalDownloadedSize();
		float GetRequiredDiskSpace();
		bool GetIsDownloading();
		float GetInstallProgress();
		class FText GetDownloadStatusText();
		float GetDownloadSpeed();
		float GetDownloadSize();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AtlantaPatchingLibrary
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UAtlantaPatchingLibrary : public UBlueprintFunctionLibrary
	{
	public:
		void STATIC_RequestContent(const class FString& RemoteManifestURL, const class FString& CloudURL, const class FString& InstallDirectory, const class FScriptDelegate& OnSucceeded, const class FScriptDelegate& OnFailed, class UAtlantaPendingContent* MobilePendingContent);
		void STATIC_PrintPakLocations();
		bool STATIC_HasActiveWiFiConnection();
		TArray<class FString> STATIC_GetSupportedPlatformNames();
		class UAtlantaInstalledContent* STATIC_GetInstalledContent(const class FString& InstallDirectory, const class FString& ManifestFilename);
		class FString STATIC_GetActiveDeviceProfileName();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AtlantaPromptWidget
	 * Size -> 0x0068 (FullSize[0x03A0] - InheritedSize[0x0338])
	 */
	class UAtlantaPromptWidget : public UMobileBaseUserWidget
	{
	public:
		class UTextBlock*                                          PromptLabel;                                             // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V1PO[0x10];                                  // 0x0340(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<EPromptType, class FString>                           AudioCues;                                               // 0x0350(0x0050) Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AtlantaRitualsManager
	 * Size -> 0x0098 (FullSize[0x00C8] - InheritedSize[0x0030])
	 */
	class UAtlantaRitualsManager : public UObject
	{
	public:
		TWeakObjectPtr<class UDBDGameInstance>                     _gameInstance;                                           // 0x0030(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_VS7A[0x90];                                  // 0x0038(0x0090) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AtlantaRitualsScreen
	 * Size -> 0x0068 (FullSize[0x0188] - InheritedSize[0x0120])
	 */
	class UAtlantaRitualsScreen : public UScreenBase
	{
	public:
		class UUMGAtlantaRitualsScreen*                            _umgScreen;                                              // 0x0120(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_7JHJ[0x60];                                  // 0x0128(0x0060) MISSED OFFSET (PADDING)

	public:
		void OnRefreshRitual();
		void OnExitRequested();
		void OnClaimRewards(int32_t ritualId);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AtlantaRoleSelectionScreen
	 * Size -> 0x0008 (FullSize[0x0128] - InheritedSize[0x0120])
	 */
	class UAtlantaRoleSelectionScreen : public UScreenBase
	{
	public:
		class UUMGRoleSelectionScreen*                             _umgScreen;                                              // 0x0120(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AtlantaSaveGame
	 * Size -> 0x0030 (FullSize[0x0060] - InheritedSize[0x0030])
	 */
	class UAtlantaSaveGame : public USaveGame
	{
	public:
		class FString                                              SaveSlotName;                                            // 0x0030(0x0010) Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   UserIndex;                                               // 0x0040(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                LastGenericLoadingImageId;                               // 0x0044(0x000C) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                LastSpecificLoadingImageId;                              // 0x0050(0x000C) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsLastSpecificImage;                                     // 0x005C(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JO8I[0x3];                                   // 0x005D(0x0003) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AtlantaSkillCheckWidget
	 * Size -> 0x0090 (FullSize[0x03C8] - InheritedSize[0x0338])
	 */
	class UAtlantaSkillCheckWidget : public UMobileBaseUserWidget
	{
	public:
		class UCanvasPanel*                                        SkillCheckArea;                                          // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UImage*                                              HitArea;                                                 // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UImage*                                              Hit;                                                     // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UImage*                                              OrangeSmoke;                                             // 0x0350(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UImage*                                              BonusArea;                                               // 0x0358(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UImage*                                              StartMarker;                                             // 0x0360(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UImage*                                              EndMarker;                                               // 0x0368(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCanvasPanel*                                        HitAreaContainer;                                        // 0x0370(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCanvasPanel*                                        BonusAreaContainer;                                      // 0x0378(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCanvasPanel*                                        HitAreaStartMarkerContainer;                             // 0x0380(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCanvasPanel*                                        HitAreaEndMarkerContainer;                               // 0x0388(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCanvasPanel*                                        MarkerContainer;                                         // 0x0390(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        HexColor;                                                // 0x0398(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        DefaultColor;                                            // 0x03A8(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       _isPlayAnimation;                                        // 0x03B8(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_IME9[0x3];                                   // 0x03B9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PathCoveredAngle;                                        // 0x03BC(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_2UXJ[0x8];                                   // 0x03C0(0x0008) MISSED OFFSET (PADDING)

	public:
		void SetHexed(bool IsHexed);
		void SetActive(bool Active);
		void OnIsActiveChanged(bool IsActive);
		bool IsActive();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AtlantaTooltipManager
	 * Size -> 0x0038 (FullSize[0x0068] - InheritedSize[0x0030])
	 */
	class UAtlantaTooltipManager : public UObject
	{
	public:
		class UBaseTooltipWidget*                                  _activeTooltip;                                          // 0x0030(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UUMGCloseTooltipWidget*                              _closeTooltipWidget;                                     // 0x0038(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_3XDQ[0x28];                                  // 0x0040(0x0028) MISSED OFFSET (PADDING)

	public:
		void TryCloseActiveTooltipWithWidget();
		bool TryCloseActiveTooltip();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AtlantaTooltipUtilities
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UAtlantaTooltipUtilities : public UObject
	{
	public:
		bool STATIC_TryCloseActiveTooltip();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.TutorialLevel
	 * Size -> 0x0040 (FullSize[0x0278] - InheritedSize[0x0238])
	 */
	class ATutorialLevel : public ALevelScriptActor
	{
	public:
		bool                                                       _tutorialStarted;                                        // 0x0238(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_PU6O[0x3F];                                  // 0x0239(0x003F) MISSED OFFSET (PADDING)

	public:
		void StartTutorial();
		void SetHandledTutorialStep(ETutorialStep tutorialStep);
		void RemoveObjective(const class FName& ObjectiveId);
		void OnTutorialStepUpdated(ETutorialStep tutorialStep);
		void OnNotificationDismissed(const class FName& notificationId);
		void HandleTutorialStepReached();
		void HandleNotificationDismissed(const class FName& notificationId);
		void DisplayNotification(const class FName& notificationId, float Time);
		void DisplayBlockingNotification(const class FName& notificationId);
		void CompleteObjective(const class FName& ObjectiveId);
		void AddObjective(const class FName& ObjectiveId);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AtlantaTutorialLevel
	 * Size -> 0x00B0 (FullSize[0x0328] - InheritedSize[0x0278])
	 */
	class AAtlantaTutorialLevel : public ATutorialLevel
	{
	public:
		unsigned char                                              UnknownData_AW2N[0xB0];                                  // 0x0278(0x00B0) MISSED OFFSET (PADDING)

	public:
		void StartCameraFadeIn();
		void SetTutorialElements();
		void SetTutorialElement(const class FString& elementKey, class AActor* elementToSet);
		void SetLocallyControlledPlayer(class ADBDPlayer* locallyControllerPlayer);
		void SetAIEscapePoints(TArray<class AActor*> escapePoints);
		void OnTutorialStarted();
		void OnTriggerBeginOverlapActor(const class FString& triggerID, class AActor* overlappingActor);
		bool IsActorInLineOfSight(class ADBDAIPlayerController* aiPlayerController, class APlayerController* PlayerController);
		void HandleCanStartTutorialChanged(bool canStartTutorial);
		class AActor* GetTutorialElement(const class FString& elementKey);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AtlantaTutorialObjectiveManager
	 * Size -> 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
	 */
	class UAtlantaTutorialObjectiveManager : public UObject
	{
	public:
		TArray<class UAtlantaObjectiveWidget*>                     _objectivesList;                                         // 0x0030(0x0010) ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
		class UVerticalBox*                                        _objectivesContainer;                                    // 0x0040(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_K1UQ[0x8];                                   // 0x0048(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AtlantaTutorialPlayerHudController
	 * Size -> 0x0048 (FullSize[0x0078] - InheritedSize[0x0030])
	 */
	class UAtlantaTutorialPlayerHudController : public UObject
	{
	public:
		unsigned char                                              UnknownData_DS4I[0x48];                                  // 0x0030(0x0048) MISSED OFFSET (PADDING)

	public:
		void ShowHudComponent(EHudComponent hudComponentToShow);
		void SetVirtualJoystickInputEnabled(bool enable);
		void HideHudComponent(EHudComponent hudComponentToHide);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.StateMachine
	 * Size -> 0x0078 (FullSize[0x0130] - InheritedSize[0x00B8])
	 */
	class UStateMachine : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_LHJN[0x9];                                   // 0x00B8(0x0009) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       _enableJoinInProgress;                                   // 0x00C1(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_YVAY[0x56];                                  // 0x00C2(0x0056) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<uint16_t>                                           _netStateIDStackInitial;                                 // 0x0118(0x0010) Net, ZeroConstructor, Transient, RepNotify, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_PMGV[0x8];                                   // 0x0128(0x0008) MISSED OFFSET (PADDING)

	public:
		void Server_SetStateStack(TArray<uint16_t> netStateIDStack);
		void NetIDStackChanged();
		void Multicast_SetStateStack(TArray<uint16_t> netStateIDStack);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AtlantaTutorialStateMachine
	 * Size -> 0x0000 (FullSize[0x0130] - InheritedSize[0x0130])
	 */
	class UAtlantaTutorialStateMachine : public UStateMachine
	{
	public:
		void OnBlockingNotificationDismissed(const class FName& blockingNotificationID);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AtlantaUtilities
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UAtlantaUtilities : public UBlueprintFunctionLibrary
	{
	public:
		bool STATIC_ShouldUseQuickRoleSwitch();
		bool STATIC_ShouldUseOfflineMatchHistory();
		bool STATIC_ShouldUseAtlantaUI();
		bool STATIC_ShouldUseAtlantaStreamVideo();
		bool STATIC_ShouldUseAtlantaRituals();
		bool STATIC_ShouldUseAtlantaRank();
		bool STATIC_ShouldUseAtlantaQualitySettings();
		bool STATIC_ShouldUseAtlantaPurchasableOperations();
		bool STATIC_ShouldUseAtlantaOutlines();
		bool STATIC_ShouldUseAtlantaMatchmaking();
		bool STATIC_ShouldUseAtlantaLighting();
		bool STATIC_ShouldUseAtlantaKrakenContentVersion();
		bool STATIC_ShouldUseAtlantaItemAvailability();
		bool STATIC_ShouldUseAtlantaHudEditor();
		bool STATIC_ShouldUseAtlantaHudAttackJoystick();
		bool STATIC_ShouldUseAtlantaGameplayValues();
		bool STATIC_ShouldUseAtlantaFriendList();
		bool STATIC_ShouldUseAtlantaFreeTickets();
		bool STATIC_ShouldUseAtlantaFixedMaps();
		bool STATIC_ShouldUseAtlantaFearMarket();
		bool STATIC_ShouldUseAtlantaEntity();
		bool STATIC_ShouldUseAtlantaDreamworldFX();
		bool STATIC_ShouldUseAtlantaDailyRewards();
		bool STATIC_ShouldUseAtlantaCustomizedHudSettings();
		bool STATIC_ShouldUseAtlantaCurrencies();
		bool STATIC_ShouldUseAtlantaContent();
		bool STATIC_ShouldUseAtlantaCharacterProgression();
		bool STATIC_ShouldUseAtlantaCDNPatching();
		bool STATIC_ShouldUseAtlantaCDNBucketChangelist();
		bool STATIC_ShouldUseAtlantaCatalog();
		bool STATIC_ShouldUseAtlantaBundleFilterRules();
		bool STATIC_ShouldUseAtlantaBloodweb();
		bool STATIC_ShouldUseAtlantaBackendBloodMarketData();
		bool STATIC_ShouldSupportMultipleActiveActivatablePerks();
		bool STATIC_SetImageSlateBrush(class UImage* Image, const struct FSlateBrush& Brush, bool bMatchSize);
		void STATIC_SetImageBrushFromSpritePath(class UImage* Image, const class FString& Path);
		void STATIC_SetImageBrushFromPath(class UImage* Image, const class FString& Path, bool bMatchSize);
		void STATIC_SetImageBrush(class UImage* Image, class UTexture2D* Asset, bool bMatchSize);
		void STATIC_SetButtonStyle(class UButton* Button, const struct FSlateBrush& Brush);
		class FString STATIC_SecondsToStringWithoutDecimals(int32_t Seconds);
		struct FSlateBrush STATIC_MakeBrushFromTexture(class UTexture2D* Texture);
		struct FSlateBrush STATIC_MakeBrushFromSprite(class UPaperSprite* Sprite);
		class UTexture2D* STATIC_LoadTextureByAsset(const class FString& Path);
		bool STATIC_IsTutorialEditorDebuggingEnabled();
		bool STATIC_IsPlayerInteractingWithActor(class ADBDPlayer* Player, class AActor* Actor);
		bool STATIC_IsInAtlantaTutorialLevel();
		class FString STATIC_GetStoreVersion();
		class UPaperSprite* STATIC_GetSpriteFromPath(const class FString& fullDbPathToImage, const class FString& constantDbPathToImageFolder, const class FString& constantPathToSpriteFolder);
		class UPaperSprite* STATIC_GetSpriteFromFullPath(const class FString& fullSpritePath);
		class FText STATIC_GetPlayerRoleTextUppercase(EPlayerRole PlayerRole);
		class FText STATIC_GetPlayerRoleText(EPlayerRole PlayerRole);
		struct FColor STATIC_GetPaintColorByRarity(EItemRarity Rarity);
		class FText STATIC_GetOfferingCategoryText(EOfferingCategory OfferingCategory);
		class UPaperSprite* STATIC_GetMapSpriteFromPath(const class FString& mapSpritePath);
		class FText STATIC_GetItemRarityText(EItemRarity Rarity);
		class FText STATIC_GetItemAvailabilityText(EItemAvailability Availability);
		class UTexture2D* STATIC_GetIconImageByPath(const class FString& IconPath);
		class FText STATIC_GetEmblemQualityText(EEmblemQuality EmblemQuality);
		struct FColor STATIC_GetEmblemColorByQuality(EEmblemQuality EmblemQuality);
		class FText STATIC_GetDifficultyLevelText(EAIDifficultyLevel difficultyLevel);
		class UInteractionDefinition* STATIC_GetCurrentOrAvailableInteractionOfType(class ADBDPlayer* Player, EInputInteractionType interactionInputType);
		class UInteractionDefinition* STATIC_GetCurrentInteractionOfType(class ADBDPlayer* Player, EInputInteractionType interactionInputType);
		class UInteractionDefinition* STATIC_GetCurrentInteraction(class ADBDPlayer* Player);
		class FString STATIC_GetCurrencyUITexturePath(ECurrencyType CurrencyType);
		struct FSlateColor STATIC_GetCurrencyColor(ECurrencyType CurrencyType);
		float STATIC_GetControlsTunableByRole(EPlayerRole PlayerRole, const class FName& tunableValueName);
		float STATIC_GetControlsTunable(const class FName& tunableValueName);
		struct FColor STATIC_GetBackgroundColorByRarity(EItemRarity Rarity);
		class UInteractionDefinition* STATIC_GetAvailableInteractionOfType(class ADBDPlayer* Player, EInputInteractionType interactionInputType);
		class FText STATIC_GetAlantaInteractionDescriptionText(class UInteractionDefinition* Interaction);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AtlCookedMaps
	 * Size -> 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
	 */
	class UAtlCookedMaps : public UPrimaryDataAsset
	{
	public:
		TArray<struct FAtlCookedMapDescription>                    Descriptions;                                            // 0x0038(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AttackTypeEventComponent
	 * Size -> 0x0018 (FullSize[0x00D0] - InheritedSize[0x00B8])
	 */
	class UAttackTypeEventComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_92YB[0x18];                                  // 0x00B8(0x0018) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AudioFXComponent
	 * Size -> 0x0060 (FullSize[0x0118] - InheritedSize[0x00B8])
	 */
	class UAudioFXComponent : public UActorComponent
	{
	public:
		class UPrimitiveComponent*                                 _audioAmbientDetector;                                   // 0x00B8(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_YXP7[0x58];                                  // 0x00C0(0x0058) MISSED OFFSET (PADDING)

	public:
		void SetAudioAmbientDetector(class UPrimitiveComponent* audioAmbientDetector);
		void OnLocallyObservedChanged(bool locallyObserved);
		void OnDeafenCompleted();
		void Multicast_Deafen(float Duration);
		void Authority_Deafen(float Duration);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AudioMultipleEmitterActor
	 * Size -> 0x0018 (FullSize[0x0248] - InheritedSize[0x0230])
	 */
	class AAudioMultipleEmitterActor : public AActor
	{
	public:
		class UAudioMultipleEmitterComponent*                      AudioMultiEmitter;                                       // 0x0230(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class AActor*>                                      EmitterActors;                                           // 0x0238(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AudioMultipleEmitterComponent
	 * Size -> 0x0018 (FullSize[0x0490] - InheritedSize[0x0478])
	 */
	class UAudioMultipleEmitterComponent : public UAkComponent
	{
	public:
		TArray<class UActorComponent*>                             EmitterActorsComponents;                                 // 0x0478(0x0010) Edit, ExportObject, ZeroConstructor, EditConst, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KMMS[0x8];                                   // 0x0488(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AuthoritativeMovementComponent
	 * Size -> 0x0060 (FullSize[0x0118] - InheritedSize[0x00B8])
	 */
	class UAuthoritativeMovementComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_W57B[0x10];                                  // 0x00B8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class ACharacter*>                                  _charactersToPush;                                       // 0x00C8(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		TArray<class ACharacter*>                                  _stopIgnoreCharacterOnEndOverlap;                        // 0x00D8(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_GYXD[0x8];                                   // 0x00E8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCapsuleComponent*                                   _pawnDetector;                                           // 0x00F0(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<class ACharacter*>                                  _authoritativeIgnoreOverlapCharacters;                   // 0x00F8(0x0010) Net, ZeroConstructor, Transient, RepNotify, NativeAccessSpecifierPrivate
		TArray<class ACharacter*>                                  _previousAuthoritativeIgnoreOverlapCharacters;           // 0x0108(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate

	public:
		void SetPawnDetector(class UCapsuleComponent* pawnDetector);
		void OnRep_AuthoritativeIgnoreOverlapCharacters();
		void OnPawnDetectorOverlapExit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex);
		void OnPawnDetectorOverlapEnter(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AutomaticLeanComponent
	 * Size -> 0x02B8 (FullSize[0x0370] - InheritedSize[0x00B8])
	 */
	class UAutomaticLeanComponent : public UActorComponent
	{
	public:
		class FScriptMulticastDelegate                             OnLeanStateChanged;                                      // 0x00B8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnPotentialLeanStateChanged;                             // 0x00C8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnCanInitiateLeanChanged;                                // 0x00D8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		struct FSocketOrBoneCache                                  _cameraIdleLocation;                                     // 0x00E8(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPrivate
		struct FSocketOrBoneCache                                  _cameraLeftLeanLocation;                                 // 0x0148(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPrivate
		struct FSocketOrBoneCache                                  _cameraRightLeanLocation;                                // 0x01A8(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPrivate
		struct FSocketOrBoneCache                                  _cameraCrouchLocation;                                   // 0x0208(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPrivate
		struct FSocketOrBoneCache                                  _cameraCrouchLeftLeanLocation;                           // 0x0268(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPrivate
		struct FSocketOrBoneCache                                  _cameraCrouchRightLeanLocation;                          // 0x02C8(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPrivate
		float                                                      _middleSphereTraceLength;                                // 0x0328(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _sideSphereTraceLength;                                  // 0x032C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _sphereTraceRadius;                                      // 0x0330(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _standingTraceHeightOffset;                              // 0x0334(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _crouchingTraceHeightOffset;                             // 0x0338(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _sideTraceOffset;                                        // 0x033C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _maxCameraDistance;                                      // 0x0340(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _maxCameraAngle;                                         // 0x0344(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _debugMode;                                              // 0x0348(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		ELeanState                                                 _leanState;                                              // 0x0349(0x0001) Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_R3QU[0x26];                                  // 0x034A(0x0026) MISSED OFFSET (PADDING)

	public:
		void Server_SetLeanState(ELeanState leanState);
		void OnRep_LeanState();
		void OnPotentialLeanStateChanged__DelegateSignature(ELeanState leanState);
		void OnLeanStateChanged__DelegateSignature(ELeanState leanState);
		void OnCanInitiateLeanChanged__DelegateSignature(bool canInitiate);
		void Local_Unlean();
		void Local_Lean();
		bool IsLeaning();
		ELeanState GetPotentialLeanState();
		ELeanState GetLeanState();
		float GetAvailableDistanceInFrontOfCamera();
		bool CanInitiateLean();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AutoQualityAdjuster
	 * Size -> 0x0028 (FullSize[0x0258] - InheritedSize[0x0230])
	 */
	class AAutoQualityAdjuster : public AActor
	{
	public:
		float                                                      TargetResolutionScale;                                   // 0x0230(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      MinimumMS;                                               // 0x0234(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      MaximumMS;                                               // 0x0238(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      ScaleIncreaseRate;                                       // 0x023C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      ScaleDecreaseRate;                                       // 0x0240(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      MinimumAllowableScale;                                   // 0x0244(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_DM0F[0x10];                                  // 0x0248(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.BaseBloodwebContentAdapter
	 * Size -> 0x0030 (FullSize[0x0060] - InheritedSize[0x0030])
	 */
	class UBaseBloodwebContentAdapter : public UObject
	{
	public:
		class UBloodwebTunables*                                   _bloodwebTunables;                                       // 0x0030(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UBloodwebEntity*                                     _entity;                                                 // 0x0038(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              _bloodwebDefinition[0x10];                               // 0x0040(0x0010) UNKNOWN PROPERTY: InterfaceProperty
		unsigned char                                              UnknownData_RDZJ[0x10];                                  // 0x0050(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.BackendBloodwebContentAdapter
	 * Size -> 0x00A8 (FullSize[0x0108] - InheritedSize[0x0060])
	 */
	class UBackendBloodwebContentAdapter : public UBaseBloodwebContentAdapter
	{
	public:
		unsigned char                                              UnknownData_Z453[0xA0];                                  // 0x0060(0x00A0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBloodwebGenerator*                                  _bloodwebBuilder;                                        // 0x0100(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.BackendCinematicContainer
	 * Size -> 0x00C0 (FullSize[0x00F0] - InheritedSize[0x0030])
	 */
	class UBackendCinematicContainer : public UObject
	{
	public:
		unsigned char                                              UnknownData_7K01[0xC0];                                  // 0x0030(0x00C0) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.BackendLoadoutManager
	 * Size -> 0x00A0 (FullSize[0x00D8] - InheritedSize[0x0038])
	 */
	class UBackendLoadoutManager : public UGameInstanceSubsystem
	{
	public:
		unsigned char                                              UnknownData_CIH2[0xA0];                                  // 0x0038(0x00A0) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.BannerDataProcessor
	 * Size -> 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
	 */
	class UBannerDataProcessor : public UObject
	{
	public:
		unsigned char                                              UnknownData_GQG3[0x50];                                  // 0x0030(0x0050) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.BaseCameraTargetingStrategy
	 * Size -> 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
	 */
	class UBaseCameraTargetingStrategy : public UObject
	{
	public:
		unsigned char                                              UnknownData_R698[0x8];                                   // 0x0030(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      _maxFreeAngle;                                           // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      _maxInputRotation;                                       // 0x003C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      _interpolationSpeed;                                     // 0x0040(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      _interpolationSpeedOutsideFreeMoveZone;                  // 0x0044(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class AActor*                                              _target;                                                 // 0x0048(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.BaseEscapeThroughHatch
	 * Size -> 0x0008 (FullSize[0x0620] - InheritedSize[0x0618])
	 */
	class UBaseEscapeThroughHatch : public UInteractionDefinition
	{
	public:
		unsigned char                                              UnknownData_SYS2[0x8];                                   // 0x0618(0x0008) Fix Super Size

	public:
		class AHatch* GetHatch();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.BaseHitValidationConfigurator
	 * Size -> 0x0008 (FullSize[0x00C0] - InheritedSize[0x00B8])
	 */
	class UBaseHitValidationConfigurator : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_FMC5[0x8];                                   // 0x00B8(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.BaseIndicatorWidget
	 * Size -> 0x0048 (FullSize[0x0380] - InheritedSize[0x0338])
	 */
	class UBaseIndicatorWidget : public UMobileBaseUserWidget
	{
	public:
		class UCanvasPanel*                                        _safeZonePanel;                                          // 0x0338(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanelSlot*                                    _canvasPanelSlot;                                        // 0x0340(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      RadiusMultiplier;                                        // 0x0348(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_NLZO[0x4];                                   // 0x034C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCanvasPanel*                                        IndicatorPanel;                                          // 0x0350(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        Indicator;                                               // 0x0358(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              ArrowImage;                                              // 0x0360(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_77E1[0x18];                                  // 0x0368(0x0018) MISSED OFFSET (PADDING)

	public:
		void OnOutAnimationFinished();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.KillerProjectile
	 * Size -> 0x0080 (FullSize[0x0338] - InheritedSize[0x02B8])
	 */
	class AKillerProjectile : public APhysicsBasedProjectile
	{
	public:
		unsigned char                                              UnknownData_YMNM[0x48];                                  // 0x02B8(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGameplayTag                                        _killerProjectileAttemptGameEventTag;                    // 0x0300(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_PWVX[0x4];                                   // 0x030C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UHitValidatorConfigurator*                           _hitValidatorConfigurator;                               // 0x0310(0x0008) Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UHitValidatorComponent*                              _hitValidatorComponent;                                  // 0x0318(0x0008) Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		EHitValidatorConfigName                                    _hitValidationConfigName;                                // 0x0320(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_QN3R[0x17];                                  // 0x0321(0x0017) MISSED OFFSET (PADDING)

	public:
		void SetActiveSlashable(bool Active);
		class UPrimitiveComponent* GetPlayerPrimitiveComponent();
		class ASlasherPlayer* GetLaunchingKiller();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.BaseLinkedVomitProjectile
	 * Size -> 0x0070 (FullSize[0x03A8] - InheritedSize[0x0338])
	 */
	class ABaseLinkedVomitProjectile : public AKillerProjectile
	{
	public:
		bool                                                       _useSplashDamage;                                        // 0x0338(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _passThroughSurvivors;                                   // 0x0339(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_ON5V[0x6];                                   // 0x033A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UPoolableProjectileComponent*                        _poolableProjectile;                                     // 0x0340(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FScriptMulticastDelegate                             OnDeactivateOrLaunch;                                    // 0x0348(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected
		class UParticleSystemComponent*                            _vomitTrail;                                             // 0x0358(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class USplineMeshComponent*                                _splineMesh;                                             // 0x0360(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class USphereComponent*                                    _splashDamageSphere;                                     // 0x0368(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UAkComponent*                                        _akAudioVomitProjectile;                                 // 0x0370(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UParticleSystem*                                     _vomitSplashCamper;                                      // 0x0378(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UParticleSystem*                                     _vomitSplash;                                            // 0x0380(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UAkAudioEvent*                                       _akAudioEventAudioEventVomitSplash;                      // 0x0388(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FVector2D                                           _minDecalSize;                                           // 0x0390(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FVector2D                                           _maxDecalSize;                                           // 0x0398(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _isSuperVomit;                                           // 0x03A0(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_JUHQ[0x7];                                   // 0x03A1(0x0007) MISSED OFFSET (PADDING)

	public:
		void OnLinkedVomitProjectileDeactivate__DelegateSignature();
		void OnAffectSurvivor(class ACamperPlayer* CamperPlayer);
		void OnAffectInteractable(class AInteractable* Interactable, class USceneComponent* HitComponent);
		void NativeExplode(const struct FImpactInfo& ImpactInfo);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.BaseLockerItem
	 * Size -> 0x0018 (FullSize[0x0248] - InheritedSize[0x0230])
	 */
	class ABaseLockerItem : public AActor
	{
	public:
		class ALocker*                                             _owningLocker;                                           // 0x0230(0x0008) Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_BZDJ[0x4];                                   // 0x0238(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             _adjustedRelativePosition;                               // 0x023C(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void OnRep_OwningLocker();
		void AdjustPositionOnLocker();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.BaseSky
	 * Size -> 0x0168 (FullSize[0x0398] - InheritedSize[0x0230])
	 */
	class ABaseSky : public AActor
	{
	public:
		unsigned char                                              UnknownData_13YM[0x8];                                   // 0x0230(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       AdjustCullDistance;                                      // 0x0238(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_B3D5[0x3];                                   // 0x0239(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      IBLContributionMultiplier;                               // 0x023C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                        ProbesTintColor;                                         // 0x0240(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      ProbesSaturationValue;                                   // 0x0250(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_FT2D[0x4];                                   // 0x0254(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FBHVRPerDetailModeFloat                             ASMDepthBias;                                            // 0x0258(0x00A0) Edit, AdvancedDisplay, Protected, NativeAccessSpecifierProtected
		struct FBHVRPerDetailModeFloat                             ASMDepthAttenuation;                                     // 0x02F8(0x00A0) Edit, AdvancedDisplay, Protected, NativeAccessSpecifierProtected

	public:
		void ToggleDreamworldLighting(bool toggleOn);
		void SetProbesTint(const struct FLinearColor& InColor, float inSaturation);
		void SetCullDistance(float NewCullDistance);
		void OnFadeEnd(class AActor* Other);
		void OnFadeBegin(class AActor* Other);
		void OnAlphaChanged(float newAlpha, class AActor* Other);
		class UPostProcessComponent* GetPostprocessComponent();
		void CopyComponentsSettingsFromSource(class UStaticMeshComponent* moonMesh, class UDirectionalLightComponent* shadowLight, class UDirectionalLightComponent* godRayLight, class USkyLightComponent* SkyLight, class UExponentialHeightFogComponent* HeightFog, class UPostProcessComponent* postProcess, class UClass* sourceBaseSkyClass);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.BaseTrap
	 * Size -> 0x0008 (FullSize[0x04B8] - InheritedSize[0x04B0])
	 */
	class ABaseTrap : public ACollectable
	{
	public:
		bool                                                       _isTrapSet;                                              // 0x04B0(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_H515[0x7];                                   // 0x04B1(0x0007) MISSED OFFSET (PADDING)

	public:
		void SetIsTrapSet(bool value);
		bool IsTrapSet();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.BearTrapOutlineUpdateStrategy
	 * Size -> 0x0038 (FullSize[0x00F8] - InheritedSize[0x00C0])
	 */
	class UBearTrapOutlineUpdateStrategy : public UOutlineUpdateStrategy
	{
	public:
		struct FLinearColor                                        UnrevealedColor;                                         // 0x00C0(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FLinearColor                                        RevealedColorToSurvivor;                                 // 0x00D0(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UCurveLinearColor*                                   KillerOutlineFadeCurve;                                  // 0x00E0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_SZYN[0x8];                                   // 0x00E8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMapActorComponent*                                  _owningBearTrapMapActorComponent;                        // 0x00F0(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void SetOwningBearTrapMapActorComponent(class UMapActorComponent* MapActorComponent);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.BlessedVignetteController
	 * Size -> 0x0010 (FullSize[0x00C8] - InheritedSize[0x00B8])
	 */
	class UBlessedVignetteController : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_TW9U[0x10];                                  // 0x00B8(0x0010) MISSED OFFSET (PADDING)

	public:
		void OnDeactivateBlessedVignette();
		void OnActivateBlessedVignette();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.BlindableBaseComponent
	 * Size -> 0x0188 (FullSize[0x0240] - InheritedSize[0x00B8])
	 */
	class UBlindableBaseComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_GSSM[0x90];                                  // 0x00B8(0x0090) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       _isBlinded;                                              // 0x0148(0x0001) Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_IHPN[0x7];                                   // 0x0149(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTagStateBool                                       _isBeingBlinded;                                         // 0x0150(0x0030) Net, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UChargeableComponent*                                _chargeableComponent;                                    // 0x0180(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              _blindingEffectors[0x50];                                // 0x0188(0x0050) UNKNOWN PROPERTY: MapProperty
		unsigned char                                              UnknownData_8C19[0x68];                                  // 0x01D8(0x0068) MISSED OFFSET (PADDING)

	public:
		void SetChargeable(class UChargeableComponent* value);
		void OnRep_IsBlinded();
		void OnChargeableCompletionPercentChanged(class UChargeableComponent* ChargeableComponent, float TotalPercentComplete);
		bool IsBlinded();
		void Authority_RemoveBlindingEffector();
		void Authority_Blinded(EBlindType blindType, float BlindnessDuration, class AActor* effectorActor);
		void Authority_AddBlindingEffector();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.BlindableComponent
	 * Size -> 0x0008 (FullSize[0x0248] - InheritedSize[0x0240])
	 */
	class UBlindableComponent : public UBlindableBaseComponent
	{
	public:
		unsigned char                                              UnknownData_2SWI[0x8];                                   // 0x0240(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.BlindingEffectorInterface
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UBlindingEffectorInterface : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.BlindingFXComponent
	 * Size -> 0x0050 (FullSize[0x0108] - InheritedSize[0x00B8])
	 */
	class UBlindingFXComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_LK8M[0x10];                                  // 0x00B8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                _blindnessIntensityParameter;                            // 0x00C8(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_970U[0x4];                                   // 0x00D4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveFloat*                                         _blindnessMaterialCurve;                                 // 0x00D8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UCurveFloat*                                         _blindnessCurve;                                         // 0x00E0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UPostProcessComponent*                               _postProcess;                                            // 0x00E8(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UMaterialInstanceDynamic*                            _postProcessMaterial;                                    // 0x00F0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_RLCN[0x10];                                  // 0x00F8(0x0010) MISSED OFFSET (PADDING)

	public:
		void SetPostProcessMaterial(class UMaterialInstanceDynamic* value);
		void SetPostProcess(class UPostProcessComponent* value);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.BlockElement
	 * Size -> 0x0068 (FullSize[0x0098] - InheritedSize[0x0030])
	 */
	class UBlockElement : public UObject
	{
	public:
		TWeakObjectPtr<class UObject>                              _source;                                                 // 0x0030(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              _affectedPlayers[0x50];                                  // 0x0038(0x0050) UNKNOWN PROPERTY: SetProperty
		unsigned char                                              UnknownData_0TO3[0x10];                                  // 0x0088(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.BlockableComponent
	 * Size -> 0x0088 (FullSize[0x0140] - InheritedSize[0x00B8])
	 */
	class UBlockableComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_L7BB[0x18];                                  // 0x00B8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FBlockableReplicatedDatum                           _replicatedDatum;                                        // 0x00D0(0x0020) Net, Transient, RepNotify, NativeAccessSpecifierPrivate
		unsigned char                                              _blockElements[0x50];                                    // 0x00F0(0x0050) UNKNOWN PROPERTY: SetProperty

	public:
		void OnRep_ReplicatedDatum();
		void Authority_RemoveBlock(class UObject* Source);
		void Authority_AddTimedBlock(class UObject* Source, float Duration);
		void Authority_AddBlock(class UObject* Source);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.BloodDecalEffectIntensity
	 * Size -> 0x0018 (FullSize[0x0050] - InheritedSize[0x0038])
	 */
	class UBloodDecalEffectIntensity : public UDataAsset
	{
	public:
		struct FColor                                              IntensifyBloodColor;                                     // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FColor                                              IntensifyBloodColor2;                                    // 0x003C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FColor                                              IntensifyBloodColorEmissive;                             // 0x0040(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      IntensifyBloodColorEmissiveMinimumIntensity;             // 0x0044(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      IntensifyBloodColorEmissiveMaximumIntensity;             // 0x0048(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W01K[0x4];                                   // 0x004C(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.BloodDecalEffect
	 * Size -> 0x00E0 (FullSize[0x0118] - InheritedSize[0x0038])
	 */
	class UBloodDecalEffect : public UDataAsset
	{
	public:
		class UCurveFloat*                                         AnimationTimelineCurve;                                  // 0x0038(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         DestroyTimelineCurve;                                    // 0x0040(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UTexture2D*>                                  Textures;                                                // 0x0048(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class UTexture2D*>                                  Normals;                                                 // 0x0058(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       EnableVisualEffects;                                     // 0x0068(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V45E[0x7];                                   // 0x0069(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBloodDecalEffectIntensity*                          BloodDecalEffectIntensity;                               // 0x0070(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ColorInterpolationSpeed;                                 // 0x0078(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UFWO[0x4];                                   // 0x007C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMaterialInterface*                                  DefalultDecalMaterial;                                   // 0x0080(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O2DL[0x90];                                  // 0x0088(0x0090) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.Bloodlust
	 * Size -> 0x0138 (FullSize[0x0488] - InheritedSize[0x0350])
	 */
	class UBloodlust : public UStatusEffect
	{
	public:
		class UCurveFloat*                                         BloodlustCurve;                                          // 0x0350(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_E67X[0x20];                                  // 0x0358(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      _bloodlustTime;                                          // 0x0378(0x0004) Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_ZMIR[0x2C];                                  // 0x037C(0x002C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FGameplayTag>                                _bloodlustResettingGameEvents;                           // 0x03A8(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_4UTF[0xD0];                                  // 0x03B8(0x00D0) MISSED OFFSET (PADDING)

	public:
		void OnRep_BloodlustTime(float oldBloodlustTime);
		void OnChaseStartedEvent(class ADBDPlayer* chasedPlayer);
		void OnAllChaseEndedEvent();
		float GetBloodlustTime();
		void DBD_SetBloodlust(int32_t Amount, bool enableDecay);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.BloodTrailSettings
	 * Size -> 0x0168 (FullSize[0x01A0] - InheritedSize[0x0038])
	 */
	class UBloodTrailSettings : public UDataAsset
	{
	public:
		float                                                      _initialDelay;                                           // 0x0038(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    _numBloodDropsPerBloodPool;                              // 0x003C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      _bloodDropsInterval;                                     // 0x0040(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       _randomlyRotateBloodDrops;                               // 0x0044(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PGBP[0x3];                                   // 0x0045(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      _bloodDropsRandomScatter;                                // 0x0048(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETraceTypeQuery                                            _bloodTraceChannel;                                      // 0x004C(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1NJY[0x3];                                   // 0x004D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBloodDecalEffect*                                   _bloodDecalEffect;                                       // 0x0050(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FBHVRPerDetailModeInt                               _decalPoolSize;                                          // 0x0058(0x00A0) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		float                                                      _recycleThresholdPercentage;                             // 0x00F8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      _recycleDistancePercentage;                              // 0x00FC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FBHVRPerDetailModeInt                               _maxOverlapping;                                         // 0x0100(0x00A0) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.BloodTrailComponent
	 * Size -> 0x0188 (FullSize[0x0240] - InheritedSize[0x00B8])
	 */
	class UBloodTrailComponent : public UActorComponent
	{
	public:
		class UBloodTrailSettings*                                 _bloodTrailSettings;                                     // 0x00B8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_X1G7[0x80];                                  // 0x00C0(0x0080) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class UDBDDecalComponent*, struct FBloodDecal>        _bloodDecals;                                            // 0x0140(0x0050) Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected
		class UBloodDecalEffect*                                   _bloodDecalEffect;                                       // 0x0190(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_WLW8[0x90];                                  // 0x0198(0x0090) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UDecalSpawner*                                       _decalSpawner;                                           // 0x0228(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_52HN[0x10];                                  // 0x0230(0x0010) MISSED OFFSET (PADDING)

	public:
		void ConditionalStartBleeding();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.BloodwebTunables
	 * Size -> 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
	 */
	class UBloodwebTunables : public UObject
	{
	public:
		unsigned char                                              UnknownData_YSMZ[0x8];                                   // 0x0030(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.BloodwebBackendTunables
	 * Size -> 0x0070 (FullSize[0x00A8] - InheritedSize[0x0038])
	 */
	class UBloodwebBackendTunables : public UBloodwebTunables
	{
	public:
		unsigned char                                              UnknownData_900C[0x70];                                  // 0x0038(0x0070) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.BloodwebClientTunables
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UBloodwebClientTunables : public UBloodwebTunables
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.BloodwebDistribution
	 * Size -> 0x02F8 (FullSize[0x0328] - InheritedSize[0x0030])
	 */
	class UBloodwebDistribution : public UObject
	{
	public:
		unsigned char                                              UnknownData_FMTA[0x10];                                  // 0x0030(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UDBDDesignTunables*                                  _designTunables;                                         // 0x0040(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UBloodwebTunables*                                   _bloodwebTunables;                                       // 0x0048(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_UYHB[0x2D8];                                 // 0x0050(0x02D8) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.BloodwebEntity
	 * Size -> 0x0048 (FullSize[0x0078] - InheritedSize[0x0030])
	 */
	class UBloodwebEntity : public UObject
	{
	public:
		unsigned char                                              UnknownData_3TVF[0x8];                                   // 0x0030(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UDBDGameInstance*                                    _gameInstance;                                           // 0x0038(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UBloodwebTunables*                                   _bloodwebTunables;                                       // 0x0040(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              _bloodwebDefinition[0x10];                               // 0x0048(0x0010) UNKNOWN PROPERTY: InterfaceProperty
		unsigned char                                              UnknownData_TIK6[0x20];                                  // 0x0058(0x0020) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.BloodwebGenerator
	 * Size -> 0x00D0 (FullSize[0x0100] - InheritedSize[0x0030])
	 */
	class UBloodwebGenerator : public UObject
	{
	public:
		unsigned char                                              UnknownData_OAAK[0xC];                                   // 0x0030(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRandomStream                                       _randomizationStream;                                    // 0x003C(0x0008) ZeroConstructor, NoDestructor, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_H682[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FString>                                      _selectedNodes;                                          // 0x0048(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		TArray<class FName>                                        _selectedContent;                                        // 0x0058(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_AVQA[0x48];                                  // 0x0068(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              _bloodwebDefinition[0x10];                               // 0x00B0(0x0010) UNKNOWN PROPERTY: InterfaceProperty
		class UDBDDesignTunables*                                  _designTunables;                                         // 0x00C0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UBloodwebTunables*                                   _bloodwebTunables;                                       // 0x00C8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _alternativePathOccurenceFactor;                         // 0x00D0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_P9I6[0x4];                                   // 0x00D4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBloodwebDistribution*                               _dataDistribution;                                       // 0x00D8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UBloodwebSettings*                                   _bloodwebSettings;                                       // 0x00E0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_CMEQ[0x18];                                  // 0x00E8(0x0018) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.BloodwebHandler
	 * Size -> 0x0068 (FullSize[0x0098] - InheritedSize[0x0030])
	 */
	class UBloodwebHandler : public UObject
	{
	public:
		unsigned char                                              UnknownData_3TEM[0x68];                                  // 0x0030(0x0068) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.BloodwebManager
	 * Size -> 0x01B8 (FullSize[0x01E8] - InheritedSize[0x0030])
	 */
	class UBloodwebManager : public UObject
	{
	public:
		unsigned char                                              UnknownData_GLVA[0x48];                                  // 0x0030(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              _bloodwebBuilderClass;                                   // 0x0078(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UDBDGameInstance*                                    _gameInstance;                                           // 0x0080(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UDBDDesignTunables*                                  _designTunables;                                         // 0x0088(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UBaseBloodwebContentAdapter*                         _bloodWebContentAdapter;                                 // 0x0090(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UBloodwebHandler*                                    _bloodwebHandler;                                        // 0x0098(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UBloodwebPathfinder*                                 _bloodwebPathfinder;                                     // 0x00A0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_2RZD[0x140];                                 // 0x00A8(0x0140) MISSED OFFSET (PADDING)

	public:
		void Init(class UDBDGameInstance* GameInstance, class UDBDDesignTunables* Tunables);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.BloodwebPathfinder
	 * Size -> 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
	 */
	class UBloodwebPathfinder : public UObject
	{
	public:
		unsigned char                                              UnknownData_S9GF[0x20];                                  // 0x0030(0x0020) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.BloodwebSettings
	 * Size -> 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
	 */
	class UBloodwebSettings : public UDataAsset
	{
	public:
		TArray<class FName>                                        _duplicableItems;                                        // 0x0038(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.BlueprintDebugUtilities
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UBlueprintDebugUtilities : public UBlueprintFunctionLibrary
	{
	public:
		void STATIC_EnsureOnConditionWithMessage(bool Condition, const class FString& ensureMessage);
		void STATIC_EnsureFalseWithMessage(const class FString& ensureMessage);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.BlueprintPlatformUtilities
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UBlueprintPlatformUtilities : public UBlueprintFunctionLibrary
	{
	public:
		int32_t STATIC_ToInteger(const struct FDBDPerPlatformInt& PerPlatformInt, class UObject* objectInWorld);
		float STATIC_ToFloat(const struct FDBDPerPlatformFloat& PerPlatformFloat, class UObject* objectInWorld);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.BonusPointEventsManager
	 * Size -> 0x00B8 (FullSize[0x00E8] - InheritedSize[0x0030])
	 */
	class UBonusPointEventsManager : public UObject
	{
	public:
		unsigned char                                              UnknownData_CQ40[0xB8];                                  // 0x0030(0x00B8) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.Tile
	 * Size -> 0x0118 (FullSize[0x0348] - InheritedSize[0x0230])
	 */
	class ATile : public AActor
	{
	public:
		bool                                                       RerunConstructionScript;                                 // 0x0230(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ABHN[0x3];                                   // 0x0231(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MinimumSpacing;                                          // 0x0234(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaximumSpacing;                                          // 0x0238(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       DiagonalSpacing;                                         // 0x023C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       TypeSpacing;                                             // 0x023D(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8WWD[0x2];                                   // 0x023E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MaximumCount;                                            // 0x0240(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           Dimension;                                               // 0x0244(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2DK2[0x4];                                   // 0x024C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<EscapeStrategyType>                                 AvailableEscapeTypes;                                    // 0x0250(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		ETileType                                                  Type;                                                    // 0x0260(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EDensity                                                   Density;                                                 // 0x0261(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPathType                                                  Path;                                                    // 0x0262(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1P5L[0x1];                                   // 0x0263(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Number;                                                  // 0x0264(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       PlaceHolder;                                             // 0x0268(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FQLV[0x3];                                   // 0x0269(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    SpawnPriorityTier;                                       // 0x026C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Weight;                                                  // 0x0270(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           Coord;                                                   // 0x0274(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EQuadrantSpawnType                                         QuadrantSpawnType;                                       // 0x027C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBasementType                                              BasementType;                                            // 0x027D(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6H5Z[0x2];                                   // 0x027E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UTileSpawnPoint*>                             SpawnPointsCache;                                        // 0x0280(0x0010) ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic
		TArray<class UObjectRandomizer*>                           ObjectRandomizersCache;                                  // 0x0290(0x0010) ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic
		TArray<class UActorSpawner*>                               ActorSpawnersCache;                                      // 0x02A0(0x0010) ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic
		TArray<class UActorVariationSpawner*>                      ActorVariationSpawnersCache;                             // 0x02B0(0x0010) ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9U7H[0x7C];                                  // 0x02C0(0x007C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRandomStream                                       SharedTileRandomizer;                                    // 0x033C(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       _initialized;                                            // 0x0344(0x0001) Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_2SAT[0x3];                                   // 0x0345(0x0003) MISSED OFFSET (PADDING)

	public:
		void OnSetSpawnObject(class UTileSpawnPoint* TileSpawnPoint, class AActor* spawnedObject);
		void OnRep_Initialized(bool oldValue);
		void OnAllTileSpawned();
		void InitOnSpawned();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.BorderTile
	 * Size -> 0x0020 (FullSize[0x0368] - InheritedSize[0x0348])
	 */
	class ABorderTile : public ATile
	{
	public:
		TArray<struct FBorderElements>                             Borders;                                                 // 0x0348(0x0010) Edit, BlueprintVisible, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		class UMapData*                                            _map;                                                    // 0x0358(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_PHH5[0x8];                                   // 0x0360(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.BreakableBase
	 * Size -> 0x0028 (FullSize[0x0350] - InheritedSize[0x0328])
	 */
	class ABreakableBase : public AInteractable
	{
	public:
		class UBoxComponent*                                       _breakableCollision;                                     // 0x0328(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		EBreakableState                                            _state;                                                  // 0x0330(0x0001) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_87XP[0x7];                                   // 0x0331(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkComponent*                                        _akAudioBreakable;                                       // 0x0338(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAkAudioEvent*                                       _akAudioBreakEvent;                                      // 0x0340(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USceneComponent*                                     _rootComponent;                                          // 0x0348(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void PlayAudioBreakable();
		bool IsUnbroken();
		void ExplodeVfxSfx(const struct FVector& ImpulseDir);
		void Explode(class ADBDPlayer* Player);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.BreakableWallOutlineUpdateStrategy
	 * Size -> 0x0000 (FullSize[0x0138] - InheritedSize[0x0138])
	 */
	class UBreakableWallOutlineUpdateStrategy : public USourceBasedOutlineUpdateStrategy
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.BubbleIndicator
	 * Size -> 0x0008 (FullSize[0x0238] - InheritedSize[0x0230])
	 */
	class ABubbleIndicator : public AActor
	{
	public:
		float                                                      _lifetime;                                               // 0x0230(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _displayToLocallyObserved;                               // 0x0234(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _isInRange;                                              // 0x0235(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _isPreSpawned;                                           // 0x0236(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_EYO0[0x1];                                   // 0x0237(0x0001) MISSED OFFSET (PADDING)

	public:
		void SetSilhouette(class UStaticMesh* StaticMesh);
		void DeactivateBubble();
		void ActivateBubbleFX(float Duration);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.BubbleIndicatorNotifier
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UBubbleIndicatorNotifier : public UBlueprintFunctionLibrary
	{
	public:
		void STATIC_SpawnBubbleIndicator(class UObject* WorldContextObject, class UClass* bubbleIndicatorBP, const struct FTransform& Transform, bool TriggerLoudNoise, bool spawnOnKillerSideOnly, float lifetime, class UStaticMesh* silhouetteStaticMesh, float audibleRange);
		class ABubbleIndicator* STATIC_PreSpawnBubbleIndicator(class UObject* WorldContextObject, class UClass* bubbleIndicatorBP, class UStaticMesh* silhouetteStaticMesh);
		void STATIC_ActivateBubbleIndicator(class UObject* WorldContextObject, class ABubbleIndicator* BubbleIndicator, const struct FTransform& Transform, bool TriggerLoudNoise, float lifetime, float audibleRange);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CameraAttachmentComponent
	 * Size -> 0x00B0 (FullSize[0x0168] - InheritedSize[0x00B8])
	 */
	class UCameraAttachmentComponent : public UActorComponent
	{
	public:
		class USceneComponent*                                     _anchor;                                                 // 0x00B8(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_X6G6[0x10];                                  // 0x00C0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FCameraAttachment                                   _defaultCameraAttachment;                                // 0x00D0(0x0018) Transient, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate
		struct FCameraAttachment                                   _currentCameraAttachment;                                // 0x00E8(0x0018) Transient, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_WKUE[0x68];                                  // 0x0100(0x0068) MISSED OFFSET (PADDING)

	public:
		void Reset();
		bool IsAttached();
		void Detach();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CameraFadeComponent
	 * Size -> 0x0038 (FullSize[0x00F0] - InheritedSize[0x00B8])
	 */
	class UCameraFadeComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_5TBT[0x38];                                  // 0x00B8(0x0038) MISSED OFFSET (PADDING)

	public:
		void OnFadedOut();
		void OnFadedIn();
		ECameraFadeState GetCameraFadeState();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CameraHandlerComponent
	 * Size -> 0x00F0 (FullSize[0x01A8] - InheritedSize[0x00B8])
	 */
	class UCameraHandlerComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_S8RZ[0x20];                                  // 0x00B8(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<EDBDCameraSocketID, class AActor*>                    _cameraMap;                                              // 0x00D8(0x0050) Transient, NativeAccessSpecifierPrivate
		EDBDCameraSocketID                                         _delayedSocketID;                                        // 0x0128(0x0001) Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		EDBDCameraSocketID                                         _currentSocketID;                                        // 0x0129(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_VHE5[0x47];                                  // 0x012A(0x0047) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       _manualZoomAllowPerkModifiers;                           // 0x0171(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_302I[0x6];                                   // 0x0172(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveFloat*                                         _manualZoomCurveFloat;                                   // 0x0178(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FName                                                _cameraAttachmentSocket;                                 // 0x0180(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_IU7M[0x4];                                   // 0x018C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USceneComponent*                                     _cameraAttachmentComponent;                              // 0x0190(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_MEUA[0x8];                                   // 0x0198(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       _isFOVSystemActive;                                      // 0x01A0(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_3VTO[0x7];                                   // 0x01A1(0x0007) MISSED OFFSET (PADDING)

	public:
		void SetSocketID(EDBDCameraSocketID Mode);
		void SetAttachmentComponent(class USceneComponent* attachmentComponent);
		void PlayVFXOnCurrentCamera(class UParticleSystemComponent* Component);
		EDBDCameraSocketID GetSocketID();
		float GetDesiredFOV();
		class AActor* GetCurrentCamera();
		void AddCameraToSocket(EDBDCameraSocketID Mode, class AActor* Camera);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CameraOffsetController
	 * Size -> 0x0048 (FullSize[0x0100] - InheritedSize[0x00B8])
	 */
	class UCameraOffsetController : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_JDJW[0x48];                                  // 0x00B8(0x0048) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CamperBloodTrailComponent
	 * Size -> 0x0030 (FullSize[0x0270] - InheritedSize[0x0240])
	 */
	class UCamperBloodTrailComponent : public UBloodTrailComponent
	{
	public:
		class UPerkManager*                                        _camperPerkManager;                                      // 0x0240(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_6HIP[0x28];                                  // 0x0248(0x0028) MISSED OFFSET (PADDING)

	public:
		void OnDamageStateChanged(ECamperDamageState oldDamageState, ECamperDamageState CurrentDamageState);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CharacterDreamworldComponent
	 * Size -> 0x0050 (FullSize[0x0108] - InheritedSize[0x00B8])
	 */
	class UCharacterDreamworldComponent : public UActorComponent
	{
	public:
		class FScriptMulticastDelegate                             DreamStateChanged;                                       // 0x00B8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class UClass*                                              _mobileDreamworldPostProcessClass;                       // 0x00C8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       _isInDreamworld;                                         // 0x00D0(0x0001) Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_TAGM[0x7];                                   // 0x00D1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class APostProcessUpdate*                                  _mobileDreamworldPostProcess;                            // 0x00D8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_9X14[0x28];                                  // 0x00E0(0x0028) MISSED OFFSET (PADDING)

	public:
		bool ShouldShowVignette();
		void OnRep_IsInDreamworld(bool Previous);
		bool IsInDreamworld();
		class ADBDPlayer* STATIC_GetLocallyObservedOrLocalCharacter(class UObject* WorldContextObject);
		void FireWakeUpScoreEvent(class ADBDPlayer* Instigator);
		void Authority_SetIsInDreamworld(bool NewValue, bool isScripted);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CamperDreamworldComponent
	 * Size -> 0x00E8 (FullSize[0x01F0] - InheritedSize[0x0108])
	 */
	class UCamperDreamworldComponent : public UCharacterDreamworldComponent
	{
	public:
		class FScriptMulticastDelegate                             OnCamperTriggeredDreamTrap;                              // 0x0108(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		struct FSurvivorSleepiness                                 _survivorSleepiness;                                     // 0x0118(0x0008) BlueprintVisible, BlueprintReadOnly, Net, Transient, NoDestructor, NativeAccessSpecifierPrivate
		float                                                      _sleepinessProtectionRemainingDuration;                  // 0x0120(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _sleepGainPerSecond;                                     // 0x0124(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_XYSW[0x4];                                   // 0x0128(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    _wakeUpByOtherCount;                                     // 0x012C(0x0004) Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _showKiller;                                             // 0x0130(0x0001) Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_RTJ7[0x7];                                   // 0x0131(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FFastTimer                                          _killerGlimpseDurationTimer;                             // 0x0138(0x0030) Transient, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_W7I7[0x10];                                  // 0x0168(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FFastTimer                                          _killerGlimpseCooldownTimer;                             // 0x0178(0x0030) Transient, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_O2IN[0x10];                                  // 0x01A8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      _glimpseMinDistance;                                     // 0x01B8(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _glimpseMaxDistance;                                     // 0x01BC(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _killerGlimpseCooldown;                                  // 0x01C0(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _killerGlimpseDuration;                                  // 0x01C4(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    _wakeUpBySkillCheckCount;                                // 0x01C8(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    _fellAsleepCount;                                        // 0x01CC(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _forcedAsleep;                                           // 0x01D0(0x0001) Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_RXWH[0x7];                                   // 0x01D1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AWakerObject*                                        _linkedWaker;                                            // 0x01D8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _useScriptedKillerVisibility;                            // 0x01E0(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_A8OR[0x7];                                   // 0x01E1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       _showKillerInstantly;                                    // 0x01E8(0x0001) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_0R4W[0x7];                                   // 0x01E9(0x0007) MISSED OFFSET (PADDING)

	public:
		bool ShouldLookSleepyToLocalPlayer();
		void SetScriptedKillerVisibility(bool useScriptedKillerVisibility);
		void OnRep_ShowKiller();
		void Local_SetShowKiller(bool showKiller, bool instantly);
		void InitializeTunableValues(class ASlasherPlayer* killer);
		void HandleShowKillerChanged(bool showKiller, bool instantly);
		int32_t GetWakeUpByOtherCount();
		bool CanWakeUpBySkillCheck();
		bool CanWakeUp();
		void BroadcastCamperTriggeredDreamTrap(class AActor* dreamObject);
		void Authority_WakeUpByWakerObject();
		void Authority_WakeUpByOther(class ADBDPlayer* Instigator);
		void Authority_WakeUpByHook();
		void Authority_SpawnDreamworldStatusEffect();
		void Authority_PutAsleep();
		void Authority_OnAttacked();
		void Authority_HandleSkillCheckFailure(bool wakeUpEveryoneInteracting, class ADBDPlayer* Instigator);
		int32_t Authority_GetWakeUpBySkillCheckCount();
		int32_t Authority_GetFellAsleepCount();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CamperEndGameComponent
	 * Size -> 0x0060 (FullSize[0x0118] - InheritedSize[0x00B8])
	 */
	class UCamperEndGameComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_KBA8[0x48];                                  // 0x00B8(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              _endGameEntityClass;                                     // 0x0100(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_P9HE[0x4];                                   // 0x0108(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      _delayBeforeSacrifice;                                   // 0x010C(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _readyToBeSacrificed;                                    // 0x0110(0x0001) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_SCGO[0x7];                                   // 0x0111(0x0007) MISSED OFFSET (PADDING)

	public:
		void OnEndGameSacrificeEnd();
		void OnDelayBeforeSacrificeEnd();
		bool GetSacrificedByEndGame();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CamperExposerInstance
	 * Size -> 0x0030 (FullSize[0x0260] - InheritedSize[0x0230])
	 */
	class ACamperExposerInstance : public AActor
	{
	public:
		bool                                                       IsInterior;                                              // 0x0230(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5PPD[0x7];                                   // 0x0231(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              _audioAgravationLevelRtpc;                               // 0x0238(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_2U0W[0x18];                                  // 0x0248(0x0018) MISSED OFFSET (PADDING)

	public:
		void StartSpawnSequence(bool withRandomDelay);
		void StartExitSequence(bool withRandomDelay);
		void SetIsInteriorBP(bool interior);
		void ExitSequenceComplete();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CamperHealthComponent
	 * Size -> 0x0230 (FullSize[0x02E8] - InheritedSize[0x00B8])
	 */
	class UCamperHealthComponent : public UActorComponent
	{
	public:
		class FScriptMulticastDelegate                             OnHealedDelegate;                                        // 0x00B8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnInjuredBleedoutStarted;                                // 0x00C8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnInjuredBleedoutEnded;                                  // 0x00D8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnInjuredBleedoutKO;                                     // 0x00E8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WPVJ[0x30];                                  // 0x00F8(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnDamageStateChanged;                                    // 0x0128(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnDamageStateChangedCosmetic;                            // 0x0138(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZVV3[0x18];                                  // 0x0148(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDBDTunableRowHandle                                _bleedoutBaseDuration;                                   // 0x0160(0x0028) Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FTagStateBool                                       _inInjuredBleedOut;                                      // 0x0188(0x0030) Net, Transient, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FDBDTimer                                           _bleedOutTimer;                                          // 0x01B8(0x0028) Net, Transient, NativeAccessSpecifierPrivate
		bool                                                       _canBleedout;                                            // 0x01E0(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_Z2UF[0x7];                                   // 0x01E1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UClass*>                                      _pauseInjuredBleedoutTimerInteractions;                  // 0x01E8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate
		int32_t                                                    _currentHealthStateCount;                                // 0x01F8(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_TIKP[0x4];                                   // 0x01FC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    _numHealthyHeals;                                        // 0x0200(0x0004) Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_AJ4Z[0x4];                                   // 0x0204(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDBDTimer                                           _dyingTimer;                                             // 0x0208(0x0028) Net, Transient, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_4O9V[0x8];                                   // 0x0230(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UChargeableComponent*                                _healFromDyingChargeable;                                // 0x0238(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UChargeableComponent*                                _healFromInjuredChargeable;                              // 0x0240(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UChargeableComponent*                                _mendChargeable;                                         // 0x0248(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class ADBDPlayer*                                          _injuredBleedoutInstigator;                              // 0x0250(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_QHTH[0x90];                                  // 0x0258(0x0090) MISSED OFFSET (PADDING)

	public:
		void SetCanBleedout(bool canBleedout);
		void OnRep_InInjuredBleedOut();
		void OnImmobilizedStateChanged(ECamperImmobilizeState oldImmobilizeState, ECamperImmobilizeState newImmobilizeState);
		void OnDamageStateChangedCosmetic__DelegateSignature();
		void Multicast_SetHealthType(EHealthType healthType);
		void Multicast_SetHealthStateFromDamageState(ECamperDamageState damageState, bool FireScoreEvent);
		void Multicast_SetDamageState(ECamperDamageState damageState, bool FireScoreEvent, bool sacrificed);
		void Multicast_SetCurrentHealthStateCount(int32_t newHealth, bool FireScoreEvent);
		void Multicast_OnSurvivorGainedHealthStateByOthersEvents(bool healedFromKO, class ADBDPlayer* healedSurvivor, TArray<class ADBDPlayer*> Healers, TArray<bool> healedSurvivorFarEnoughAway);
		void Multicast_OnInjuredBleedoutKO(class ADBDPlayer* injuredBleedoutInstigator);
		void Multicast_OnHealed(const struct FCamperHealResult& healResult);
		bool IsKO();
		bool IsInjuredBleedoutTimerExpired();
		bool IsInjured();
		bool IsInInjuredBleedout();
		bool IsHealthy();
		bool IsDyingTimerExpired();
		bool IsDead();
		void IncreaseHPSlotSize(float percent);
		float GetPercentInjuredBleedoutTimer();
		float GetPercentDyingTimer();
		ECamperDamageState GetDamageState();
		float GetCurrentTotalHealthBarPercent();
		class UChargeableComponent* GetCurrentHPSlot();
		bool CanHealSelf();
		bool CanBeHealedFromInjured();
		bool CanBeHealed();
		bool CanBecomeHealthy();
		void Authority_SetDamageState(ECamperDamageState damageState, bool FireScoreEvent, bool sacrificed);
		void Authority_OnSurvivorRemoved(class ACamperPlayer* Survivor);
		void Authority_OnMendChargeCompletionStateChanged(bool complete, TArray<class AActor*> instigators);
		void Authority_OnHealthBarCharged(bool complete, TArray<class AActor*> instigators);
		void Authority_MendTryGrantScoresOnChargeApplied(float individualChargeAmount, float totalChargeAmount, class AActor* chargeInstigator, bool wasCoop, float DeltaTime);
		void Authority_HealTryGrantScoresOnChargeApplied(float individualChargeAmount, float totalChargeAmount, class AActor* chargeInstigator, bool wasCoop, float DeltaTime);
		void Authority_EndInjuredBleedout();
		void Authority_ApplyDoubleDamage(class AActor* damageSource, class ACharacter* damagePlayerOwner);
		void Authority_ApplyDeepWound(class AActor* damageSource, class ACharacter* damagePlayerOwner);
		void Authority_ApplyDamage(class AActor* damageSource, class ACharacter* damagePlayerOwner);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PlayerInteractable
	 * Size -> 0x0020 (FullSize[0x0348] - InheritedSize[0x0328])
	 */
	class APlayerInteractable : public AInteractable
	{
	public:
		unsigned char                                              UnknownData_F7TW[0x20];                                  // 0x0328(0x0020) MISSED OFFSET (PADDING)

	public:
		void InitInteractable(class ADBDPlayer* Player);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CamperInteractable
	 * Size -> 0x0108 (FullSize[0x0450] - InheritedSize[0x0348])
	 */
	class ACamperInteractable : public APlayerInteractable
	{
	public:
		unsigned char                                              UnknownData_ZK2X[0x8];                                   // 0x0348(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UInteractor*>                                 HealingInteractors;                                      // 0x0350(0x0010) BlueprintVisible, ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected
		TArray<class UChargeableInteractionDefinition*>            _healInteractions;                                       // 0x0360(0x0010) BlueprintVisible, ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected
		class UChargeableComponent*                                _killCharge;                                             // 0x0370(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UChargeableComponent*                                _snapOutOfItCharge;                                      // 0x0378(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UChargeableComponent*                                _wakeUpCharge;                                           // 0x0380(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UChargeableComponent*                                _crowDismissCharge;                                      // 0x0388(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UActivatorComponent*                                 _activator;                                              // 0x0390(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_TBXL[0x68];                                  // 0x0398(0x0068) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UInteractor*                                         _killInteractor;                                         // 0x0400(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UBoxComponent*                                       _killInteractionZone;                                    // 0x0408(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class USphereComponent*                                    _killHealthyInteractionZone;                             // 0x0410(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UBoxComponent*                                       _mainInteractionZone;                                    // 0x0418(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UInteractor*                                         _healingInteractor1;                                     // 0x0420(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UInteractor*                                         _selfInteractionsInteractor;                             // 0x0428(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class USceneComponent*                                     _rootComponent;                                          // 0x0430(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_QK9Q[0x18];                                  // 0x0438(0x0018) MISSED OFFSET (PADDING)

	public:
		void UpdateTargetHPSlot();
		void SetKillInteraction(class UInteractionDefinition* killInteraction);
		void ServerMoveOut();
		class UInteractor* GetSlasherInteractor();
		class ACamperPlayer* GetOwningSurvivor();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CamperMaterialHelperController
	 * Size -> 0x0070 (FullSize[0x0128] - InheritedSize[0x00B8])
	 */
	class UCamperMaterialHelperController : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_OQGG[0x60];                                  // 0x00B8(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FManagedMaterialGroup>                       _managedGroups;                                          // 0x0118(0x0010) ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate

	public:
		void RemoveGroupsBySource(class UObject* Source);
		void AddManagedWithCondition(class UObject* Source, const class FString& Group, const class FScriptDelegate& Condition);
		void AddManagedGroup(class UObject* Source, const class FString& Group);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDCharacterMovementComponent
	 * Size -> 0x0340 (FullSize[0x0E50] - InheritedSize[0x0B10])
	 */
	class UDBDCharacterMovementComponent : public UCharacterMovementComponent
	{
	public:
		unsigned char                                              UnknownData_RVRJ[0x18];                                  // 0x0B10(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ProjectedWallSlidingFactor;                              // 0x0B28(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RandomInputFrontMultiplier;                              // 0x0B2C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RandomInputSideMultiplier;                               // 0x0B30(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RandomInputBackMultiplier;                               // 0x0B34(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KFZA[0x90];                                  // 0x0B38(0x0090) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       _forceUseDropStaggerFix;                                 // 0x0BC8(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_YAFM[0x1F];                                  // 0x0BC9(0x001F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UCurveFloat*>                                 _maxSpeedMultiplierCurvesToRemoveOnTheServer;            // 0x0BE8(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_8850[0x10];                                  // 0x0BF8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UCurveFloat*>                                 _maxSpeedAdditiveCurvesToRemoveOnTheServer;              // 0x0C08(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_3FQ5[0x1A0];                                 // 0x0C18(0x01A0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBaseCharacterVelocityAdditiveStrategy*              _velocityAdditiveStrategy;                               // 0x0DB8(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UBaseInputAccelerationConstraintStrategy*            _inputAccelerationConstraintStrategy;                    // 0x0DC0(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UBaseCharacterRotationStrategy*                      _rotationStrategy;                                       // 0x0DC8(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class AActor*                                              _lookAtTarget;                                           // 0x0DD0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_UZOD[0x78];                                  // 0x0DD8(0x0078) MISSED OFFSET (PADDING)

	public:
		void Server_StopMontage(float Timestamp, const struct FMontageStopDefinition& MontageStopDefinition);
		void Server_StartSnapping(float Timestamp, const struct FSnappingData& Data, int32_t snappingCallCount);
		void Server_SetStopSnapping(float Timestamp, bool snapToFinalDestination);
		void Server_SetMaxSpeedOverride(float Timestamp, float value, bool isSet, int32_t maxSpeedOverrideCallCount);
		void Server_SetMaxSpeedMultiplierScalar(float Timestamp, float value);
		void Server_SetMaxAcceleration(float Timestamp, float value);
		void Server_SetIgnorePawnCollisionOverride(float Timestamp, bool isIgnoringPawnCollision, int32_t ignoringCollisionCallCount);
		void Server_SetGroundFriction(float Timestamp, float value);
		void Server_SetAdditiveMaxSpeedScalar(float Timestamp, float value);
		void Server_ReplicateControlRotation(unsigned char ClientRoll, uint32_t View);
		void Server_RemoveMaxSpeedMovementCurve(float Timestamp, uint32_t curveNetId, EMovementCurveType movementCurveType);
		void Server_PlayMontage(float Timestamp, const struct FMontagePlaybackDefinition& MontagePlaybackDefinition);
		void Server_Launch(float Timestamp, const struct FVector& LaunchVelocity, int32_t launchCallCount);
		void Server_AddMaxSpeedMovementCurve(float Timestamp, uint32_t curveNetId, float Duration, float startOffset, EMovementCurveType movementCurveType);
		void OnPreMontageStop(const struct FMontageStopDefinition& montageDefinition, class UAnimMontage* Montage);
		void OnMontageStarted(const struct FMontagePlaybackDefinition& montageDefinition, class UAnimMontage* Montage);
		void DBD_SimulateHack_LocalSurvivorMaxSpeedMultiplierUsingServerRPC(float maxSpeedMultiplier);
		void DBD_SimulateHack_LocalLaunch(float xVelocity, float yVelocity, float zVelocity);
		void Client_TeleportTo(const struct FVector_NetQuantize100& Location, const struct FYawAndPitchRotator_NetQuantize32& Rotation);
		void Client_Stop();
		void Client_PreventMovement(bool value);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CamperMovementComponent
	 * Size -> 0x0090 (FullSize[0x0EE0] - InheritedSize[0x0E50])
	 */
	class UCamperMovementComponent : public UDBDCharacterMovementComponent
	{
	public:
		unsigned char                                              UnknownData_AV55[0x10];                                  // 0x0E50(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxCrawlSpeed;                                           // 0x0E60(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxRunSpeed;                                             // 0x0E64(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            _defaultRotationRate;                                    // 0x0E68(0x000C) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected
		struct FRotator                                            _rotationRateWhileCrawling;                              // 0x0E74(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected
		class UCurveFloat*                                         _dropStaggerDuration;                                    // 0x0E80(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCurveFloat*                                         _dropStaggerMaxSpeed;                                    // 0x0E88(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_4IQN[0x50];                                  // 0x0E90(0x0050) MISSED OFFSET (PADDING)

	public:
		void OnCamperHealthStateChanged(ECamperDamageState oldDamageState, ECamperDamageState CurrentDamageState);
		struct FRotator GetRotationRateWhileCrawling();
		float GetDropStaggerTimeLeft();
		struct FRotator GetDefaultRotationRate();
		void DBD_SurvivorMaxSpeedMultiplier(float maxSpeedMultiplier);
		void DBD_SimulateHack_LocalSurvivorMaxSpeedMultiplier(float maxSpeedMultiplier);
		void Client_Debug_SetSurvivorMaxSpeedMultiplier(float maxSpeedMultiplier);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDBasePlayer
	 * Size -> 0x0090 (FullSize[0x0560] - InheritedSize[0x04D0])
	 */
	class ADBDBasePlayer : public ACharacter
	{
	public:
		class FScriptMulticastDelegate                             OnCustomizationChanged;                                  // 0x04D0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		struct FGameplayTagContainer                               _semanticGameplayTags;                                   // 0x04E0(0x0020) Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
		class UBaseGroundDetectorComponent*                        _leftFootGroundDetector;                                 // 0x0500(0x0008) Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UBaseGroundDetectorComponent*                        _rightFootGroundDetector;                                // 0x0508(0x0008) Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_109I[0x8];                                   // 0x0510(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    _characterIndex;                                         // 0x0518(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_SB5T[0x44];                                  // 0x051C(0x0044) MISSED OFFSET (PADDING)

	public:
		bool TeleportWithClothHandling(const struct FVector& Location, const struct FRotator& Rotation, bool checkCollisions);
		void Multicast_SwapCosmetics(const class FName& cosmeticId);
		bool GetShowBlindDebugInfo();
		struct FGameplayTagContainer GetSemanticTag();
		EPhysicalSurface GetRightFootSurfaceType();
		class FString GetRightFootAudioSurfaceName();
		EPhysicalSurface GetLeftFootSurfaceType();
		class FString GetLeftFootAudioSurfaceName();
		class UCustomizedSkeletalMesh* GetCustomizedSkeletalMesh();
		class UCustomizedAudioComponent* GetCustomizedAudio();
		class FName GetCharacterName();
		int32_t GetCharacterIndex();
		class UAkComponent* GetAudioComponent();
		void DBD_SwapCosmetics(const class FName& cosmeticId);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDPlayer
	 * Size -> 0x0BF8 (FullSize[0x1158] - InheritedSize[0x0560])
	 */
	class ADBDPlayer : public ADBDBasePlayer
	{
	public:
		unsigned char                                              UnknownData_NPVG[0x98];                                  // 0x0560(0x0098) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       AllowInterrupting;                                       // 0x05F8(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PMB9[0x3];                                   // 0x05F9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinFallHeight;                                           // 0x05FC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsInterruptable;                                         // 0x0600(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       AllowNavigationInput;                                    // 0x0601(0x0001) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       AllowNavigationBackwardInput;                            // 0x0602(0x0001) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       AllowTurningInput;                                       // 0x0603(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       AllowPitchInput;                                         // 0x0604(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       AllowStrafeInput;                                        // 0x0605(0x0001) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsInInteractionUpdate;                                   // 0x0606(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsInteractionChargeCompleted;                            // 0x0607(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PitchLimitLower;                                         // 0x0608(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PitchLimitUpper;                                         // 0x060C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             StrafingOffset;                                          // 0x0610(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PelvisHeight;                                            // 0x061C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PelvisHeightForPounceOnStandingCamper;                   // 0x0620(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PelvisHeightForPounceOnCrouchingCamper;                  // 0x0624(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7NVJ[0x30];                                  // 0x0628(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             Authority_OnAttackedDelegate;                            // 0x0658(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnDamageTargetDelegate;                                  // 0x0668(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnSensed;                                                // 0x0678(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnAnimNotify_Pickup;                                     // 0x0688(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnAnimNotify_Release;                                    // 0x0698(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             Authority_OnSecondaryActionInput;                        // 0x06A8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnFirstPersonModeChanged;                                // 0x06B8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnDreamworldComponentSet;                                // 0x06C8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnForwardInputLockedChanged;                             // 0x06D8(0x0010) ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic
		class USpringArmComponent*                                 CameraBoom;                                              // 0x06E8(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4G84[0x30];                                  // 0x06F0(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       ForceSkillChecks;                                        // 0x0720(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TMFM[0xF];                                   // 0x0721(0x000F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          IKLeftHandTransform;                                     // 0x0730(0x0030) BlueprintVisible, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FTransform                                          IKRightHandTransform;                                    // 0x0760(0x0030) BlueprintVisible, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		float                                                      CameraResetSpeed;                                        // 0x0790(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YWZW[0x4];                                   // 0x0794(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AverageSpeedBufferTime;                                  // 0x0798(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AlmostCurrentSpeedBufferTime;                            // 0x079C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         GamepadYawCurve;                                         // 0x07A0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         GamepadPitchCurve;                                       // 0x07A8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         GamepadSettingToYawRateCurve;                            // 0x07B0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         GamepadSettingToPitchRateCurve;                          // 0x07B8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         JoyconSettingToYawRateCurve;                             // 0x07C0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         JoyconSettingToPitchRateCurve;                           // 0x07C8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnIsCrouchedChanged;                                     // 0x07D0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnRunningAndMovingChanged;                               // 0x07E0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_96B1[0x20];                                  // 0x07F0(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnLocallyObservedChangedForPlayer;                       // 0x0810(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class UCameraComponent*                                    Camera;                                                  // 0x0820(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialHelper*                                     MaterialHelper;                                          // 0x0828(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YZI4[0x30];                                  // 0x0830(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              Interactable;                                            // 0x0860(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PGP3[0x18];                                  // 0x0868(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCharacterInventoryComponent*                        _characterInventoryComponent;                            // 0x0880(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FName                                                CarryJointName;                                          // 0x0888(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      _pitchOffsetForInteractionPriority;                      // 0x0894(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UBoxOcclusionQueryComponent*                         _renderedPixelCounter;                                   // 0x0898(0x0008) Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UBoxComponent*                                       _standingOcclusionBox;                                   // 0x08A0(0x0008) Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UBoxComponent*                                       _crouchingOcclusionBox;                                  // 0x08A8(0x0008) Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UActivatorComponent*                                 _activator;                                              // 0x08B0(0x0008) Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       IsInteracting;                                           // 0x08B8(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_YR59[0x3];                                   // 0x08B9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      _aiCanBeSeenTestCrouchScale;                             // 0x08BC(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      _aiCanBeSeenTestRightOffset;                             // 0x08C0(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      _aiCanBeSeenTestHighOffset;                              // 0x08C4(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      _aiCanBeSeenTestLowOffset;                               // 0x08C8(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      ClearPathTestRadiusMultiplier;                           // 0x08CC(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      ClearPathTestHeightMultiplier;                           // 0x08D0(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      LocationClearTestRadiusMultiplier;                       // 0x08D4(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      LocationClearTestHeightMultiplier;                       // 0x08D8(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      ClearPathTestStepHeight;                                 // 0x08DC(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      MouseTurnSpeedMultiplier;                                // 0x08E0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      MouseLookUpSpeedMultiplier;                              // 0x08E4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USoundCue*                                           DeathSound;                                              // 0x08E8(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		ECamperState                                               CurrentCamperState;                                      // 0x08F0(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_LK4K[0x3];                                   // 0x08F1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                CollectableAttachPoint;                                  // 0x08F4(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UStateMachine*                                       _stateMachine;                                           // 0x0900(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UPlayerInteractionHandler*                           _interactionHandler;                                     // 0x0908(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UMontagePlayer*                                      _montagePlayer;                                          // 0x0910(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UPerkManager*                                        _perkManager;                                            // 0x0918(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UDBDPlayerData*                                      _playerData;                                             // 0x0920(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class APlayerInteractable*                                 _interactable;                                           // 0x0928(0x0008) Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_MJ68[0x50];                                  // 0x0930(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ADBDPlayer*                                          _guidingPlayer;                                          // 0x0980(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_P90P[0x8];                                   // 0x0988(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ADBDPlayer*                                          _interactingPlayer;                                      // 0x0990(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_FC63[0x30];                                  // 0x0998(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EAttackSubstate                                            _nextAttackSubstate;                                     // 0x09C8(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_VPML[0x7];                                   // 0x09C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class ADBDPlayer*>                                  _hitTargets;                                             // 0x09D0(0x0010) ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected
		class UCharacterDreamworldComponent*                       _dreamworldComponent;                                    // 0x09E0(0x0008) Edit, BlueprintVisible, ExportObject, Net, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCharacterChaseVisualComponent*                      _characterChaseVisualComponent;                          // 0x09E8(0x0008) Edit, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCameraHandlerComponent*                             _cameraHandlerComponent;                                 // 0x09F0(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, Transient, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UReversibleActionSystemComponent*                    _reversibleActionSystemComponent;                        // 0x09F8(0x0008) Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USceneComponent*                                     _itemDropOffPosition;                                    // 0x0A00(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAIPerceptionStimuliSourceComponent*                 _perceptionStimuliComponent;                             // 0x0A08(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<class AActor*>                                      _ignoreActors;                                           // 0x0A10(0x0010) ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected
		TArray<struct FEffectCameraTypeSettings>                   EffectCameraTypeSettings;                                // 0x0A20(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
		TMap<class USceneComponent*, bool>                         _detectionZoneEnabledMap;                                // 0x0A30(0x0050) Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_PP8U[0x28];                                  // 0x0A80(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UChargeableComponent*                                _blindingChargeableComponent;                            // 0x0AA8(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_DXCQ[0x90];                                  // 0x0AB0(0x0090) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       _shouldUpdateStateMachineDriverOnPossessed;              // 0x0B40(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_IZX0[0x7];                                   // 0x0B41(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBlindableComponent*                                 _blindableComponent;                                     // 0x0B48(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_X5H6[0x4];                                   // 0x0B50(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      _tutorialChargeableInteractionMultiplier;                // 0x0B54(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_RQJ4[0x8];                                   // 0x0B58(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UPollableEventListener*                              _eventListener;                                          // 0x0B60(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_FSWV[0x8];                                   // 0x0B68(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UChaseComponent*                                     _chaseComponent;                                         // 0x0B70(0x0008) Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UZoneDetectorComponent*                              _meatHookZoneDetector;                                   // 0x0B78(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UZoneDetectorComponent*                              _basementZoneDetector;                                   // 0x0B80(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_4DX3[0x40];                                  // 0x0B88(0x0040) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGameplayTagContainer                               _animGameplayTags;                                       // 0x0BC8(0x0020) Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_B55J[0x58];                                  // 0x0BE8(0x0058) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UInteractionDefinition*                              _bookmarkedInteraction;                                  // 0x0C40(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TMap<EDetectionZone, class UPrimitiveComponent*>           _detectionZoneMap;                                       // 0x0C48(0x0050) ExportObject, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_O2Y3[0x60];                                  // 0x0C98(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAuthoritativeMovementComponent*                     _authoritativeMovementComponent;                         // 0x0CF8(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_ASKN[0x2F0];                                 // 0x0D00(0x02F0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      _screenAspectRatio;                                      // 0x0FF0(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_DH4P[0x1C];                                  // 0x0FF4(0x001C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UGameplayTagContainerComponent*                      _objectState;                                            // 0x1010(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UAudioFXComponent*                                   _audioFXComponent;                                       // 0x1018(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UPlayerPerspectiveComponent*                         _playerPerspectiveComponent;                             // 0x1020(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_RNBO[0x8];                                   // 0x1028(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCharacterSightComponent*                            _characterSightComponent;                                // 0x1030(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_K1MB[0x8];                                   // 0x1038(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCharacterSightableComponent*                        _characterSightableComponent;                            // 0x1040(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_PVQO[0x10];                                  // 0x1048(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UInteractionDetectorComponent*                       _interactionDetectorComponent;                           // 0x1058(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UPrimitivesRegistererComponent*                      _clippablePrimitivesRegistererComponent;                 // 0x1060(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UClippableProviderComponent*                         _clippableProviderComponent;                             // 0x1068(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UDynamicCapsuleResizerComponent*                     _dynCapsuleResizer;                                      // 0x1070(0x0008) Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UPlayerGameRelevancyComponent*                       _playerGameRelevancyComponent;                           // 0x1078(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UContextualQuestComponent*                           _contextualQuestComponent;                               // 0x1080(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_H3RF[0x20];                                  // 0x1088(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UActorComponent*                                     _questEventHandler;                                      // 0x10A8(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UChargeableProgressProviderComponent*                _presentationChargeableProgressComponent;                // 0x10B0(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_RWZ8[0x18];                                  // 0x10B8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveFloat*                                         _currentGamepadYawCurve;                                 // 0x10D0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UCurveFloat*                                         _currentGamepadPitchCurve;                               // 0x10D8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class ADBDPlayerState*                                     _associatedPlayerStateCache;                             // 0x10E0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FOnMovementCacheStruct                              _onMovementCacheStruct;                                  // 0x10E8(0x000C) Transient, NoDestructor, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_YQ19[0x4];                                   // 0x10F4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UOtherCharactersVerticalCollisionsHandler*           _otherCharactersVerticalCollisionsHandler;               // 0x10F8(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_D3TG[0x58];                                  // 0x1100(0x0058) Fix size for supers

	public:
		void UpdateLoadoutFromInventory();
		bool TryInteractionType(EInputInteractionType interactionInputType, class ADBDPlayer* requester, bool usingInputPersistence, bool force);
		bool TryInteraction(class UInteractionDefinition* Interaction, class ADBDPlayer* requester, bool force, bool usingInputPersistence);
		bool TryFireScoreEvent(EDBDScoreTypes scoreType, float PercentToAward);
		void TriggerAnimNotify(EAnimNotifyType animNotifyType);
		void StopMontage();
		void SnapCharacter(bool snapPosition, const struct FVector& position, float stopSnapDistance, bool snapRotation, const struct FRotator& Rotation, float Time, bool useZCoord, bool sweepOnFinalSnap, bool snapRoll);
		bool ShouldPlayCarryAnim();
		bool ShouldFall();
		void SetShouldPlayCarryAnim(bool ShouldPlayCarryAnim);
		void SetReverseMontage(bool Reverse);
		void SetQuestEventHandlerComponent(class UActorComponent* Component);
		void SetItemUseAsToggle(bool value);
		void SetIsCloaked(bool IsCloaked, bool Forced);
		void SetForceDisableSkillChecks(bool IsEnabled);
		void SetFirstPersonVfxsVisibility(bool isFirstPerson);
		void SetFirstPersonModelEnabled(bool Enabled, bool force);
		void SetFeetOnGround(bool feetOnGround);
		void SetDetectionZoneEnabled(EDetectionZone detectionZoneID, bool Enabled);
		void SetAnimationCrouchState(bool crouched);
		void SetAllowNavigation(bool enable);
		void SetAllDetectionZonesEnabled(bool Enabled);
		void Server_UpdateScreenAspectRatio(float value);
		void Server_SendSecondaryActionPressed(bool fromCancelRequest);
		void Server_SendItemUseInput(bool Pressed, bool requestItemUse);
		void Server_SendItemDropInput(bool Pressed);
		void Server_SendInteractionInput(bool Pressed);
		void Server_SendFastInteractionInput(bool Pressed);
		void Server_SendAbilityTwoInput(bool Pressed);
		void Server_SendAbilityInput(bool Pressed);
		void Server_GameTimeSync();
		void Server_Drop(class ACollectable* Item, const struct FVector& Location, const struct FRotator& Rotation, bool onDeath);
		void Server_DebugSetCustomization(const struct FEquippedPlayerCustomization& Customization);
		void Server_Broadcast_DebugPlayMontage(const struct FAnimationMontageDescriptor& animMontageID, float PlayRate);
		void ResetPitchScale(float adjustTime);
		void ResetCamera();
		void RemoveStatusEffect(class UStatusEffect* StatusEffect);
		class UAnimMontage* PlayMontage(const struct FAnimationMontageDescriptor& animMontageID, float PlayRate, bool isFollower);
		void OnRep_Interactable();
		void OnRep_DreamworldComponent();
		void OnPostProcessInput();
		void OnPickupStart(class ADBDPlayer* Target);
		void OnPickupEnd(class ADBDPlayer* Target);
		void OnLocallyObservedChanged();
		void OnLevelReadyToPlay();
		void OnIsCrouchedChanged__DelegateSignature(bool isCrouched);
		void OnIntroCompletedNative();
		void OnIntroCompleted();
		void OnInterruptedStart();
		void OnHudVisibilityChangedNative(bool IsVisible);
		void OnHudVisibilityChanged(bool IsVisible);
		class FString OnGetCharacterName();
		void OnEscapeDoorActivated();
		void OnCurrentMontageComplete(class UAnimMontage* MontageAsset, bool interrupted);
		void OnCurrentMontageBlendingOut(class UAnimMontage* MontageAsset, bool interrupted);
		void OnControllerChanged(class APawn* Pawn, class AController* OldController, class AController* NewController);
		void OnClientRestart();
		void OnBlindChargeEmptied();
		void OnAnimInstanceChanged();
		void OnAllPlayerLoaded();
		void Multicast_SetRunVaultEnabled(bool Enabled);
		void Multicast_SetReverseTraverseEnabled(bool Enabled);
		void Multicast_SetInteractingPlayer(class ADBDPlayer* interactingPlayer);
		void Multicast_SetForceAuthoritativeMovement(bool value);
		void Multicast_SetEnableCapsuleDynamicResize(bool Enabled);
		void Multicast_SetDebugSnapPoint(bool Enabled);
		void Multicast_SetDebugPrintAvailableInteractions(bool Enabled);
		void Multicast_SetDebugCarry(bool Enabled);
		void Multicast_SetCustomization(const struct FEquippedPlayerCustomization& Customization);
		void Multicast_SetContinuousPrintDebug(bool Enabled);
		void Multicast_SetAuthoritativeMovement(bool Enabled);
		void Multicast_ServerResetMeshRelativeOffSet();
		void Multicast_ReplicateController(class AController* NewController);
		void Multicast_LeaveGame(const struct FGuid& uniqueLeavingPlayerId);
		void Multicast_Debug_SetMaxWalkSpeed(float MaxWalkSpeed);
		void Multicast_ConfirmItemDrop(bool Pressed);
		void Multicast_Broadcast_DebugPlayMontage(const struct FAnimationMontageDescriptor& animMontageID, float PlayRate);
		void Local_NotifyMatchEnded();
		bool Local_IsInteractionInputPressed(EInputInteractionType interactionType);
		bool K2_SetActorLocationByBottomCapsule(const struct FVector& NewLocation, bool bSweep, struct FHitResult* SweepHitResult);
		void ItemUseReleased();
		void ItemUsePressed();
		bool IsRunning();
		bool IsPlayingMontage(const struct FAnimationMontageDescriptor& animMontageID);
		bool IsPlayingAnyMontage();
		bool IsMoving();
		bool IsLocallyObserved();
		bool IsInTerrorRadius();
		bool IsInteractionInputPressed(EInputInteractionType interactionType);
		bool IsInStalkMode();
		bool IsInsideCloset();
		bool IsInParadise();
		bool IsInMeathookZone();
		bool IsIncapacitated();
		bool IsHeadHidden();
		bool IsExhausted();
		bool IsCrouchPressed();
		bool IsCrouching();
		bool IsCloaked();
		bool IsBeingInterrupted();
		bool IsAllowedNavigation();
		void InteractionInputReleased();
		void InteractionInputPressed();
		bool HasMoveInput();
		bool HasDamageImmunity();
		bool HasClearPathToTargetWithIgnore(const struct FVector& targetPosition, TArray<class AActor*> ignoreActors);
		bool HasClearPathToTarget(const struct FVector& targetPosition);
		float GetTunableValue(const class FName& Key, float defaultValue, bool warnIfRowMissing);
		class ADBDPlayerController* GetSharedPlayerController();
		bool GetRunVaultEnabled();
		bool GetReverseTraverseEnabled();
		struct FRotator GetRepControlRotation();
		EPlayerTeam GetPlayerTeam();
		EPlayerRole GetPlayerRole();
		class UPlayerInteractionHandler* GetPlayerInteractionHandler();
		struct FRotator GetPlayerDirection();
		class ADBDPlayerController* GetPlayerController();
		class UCameraComponent* GetPlayerCamera();
		class UPerkManager* GetPerkManager();
		float GetPercentMovementSpeed();
		EPawnType GetPawnType();
		class UOtherCharactersVerticalCollisionsHandler* GetOtherCharactersVerticalCollisionsHandler();
		class UGameplayTagContainerComponent* GetObjectState();
		class FString GetNameDebugString();
		class UMontagePlayer* GetMontagePlayer();
		struct FMontagePlaybackDefinition GetMontagePlaybackDefinition(const struct FAnimationMontageDescriptor& animMontageID, float PlayRate, bool isFollower);
		float GetMontageLength(const struct FAnimationMontageDescriptor& animMontageID);
		class UAnimMontage* GetMontage(const struct FAnimationMontageDescriptor& animMontageID);
		float GetMaxSpeed();
		float GetLuck();
		TArray<class UItemModifier*> GetItemModifiers();
		TArray<class UItemAddon*> GetItemAddons();
		bool GetIsInterrupting();
		bool GetIsInteracting();
		bool GetIsInFirstPerson();
		struct FInteractionPlayerProperties GetInteractionPlayerProperties();
		class UInteractionDetectorComponent* GetInteractionDetectorComponent();
		class AInteractable* GetInteractable();
		class ADBDPlayer* GetGuidingPlayer();
		float GetGrassEffectRadiusMultiplier();
		class UActorComponent* GetFirstComponentByClass(class UClass* ComponentClass);
		struct FVector GetFeetPosition();
		class UCharacterDreamworldComponent* GetDreamworldComponent();
		class UPrimitiveComponent* GetDetectionZone(EDetectionZone detectionZoneID);
		class ADBDPlayerState* GetDBDPlayerState();
		EInteractionAnimation GetCurrentInteractionAnimation();
		class UInteractionDefinition* GetCurrentInteraction();
		class UChaseComponent* GetChaseComponent();
		class UCharacterInventoryComponent* GetCharacterInventoryComponent();
		class ADBDPlayerCameraManager* GetCameraManager();
		struct FVector GetBoneLocation(const class FName& Name, EBoneSpaces space);
		class UBlindableComponent* GetBlindableComponent();
		struct FVector GetAverageVelocity();
		class UAuthoritativeMovementComponent* GetAuthoritativeMovementComponent();
		class USceneComponent* GetAttachPoint(const class FName& attachPointName);
		class APlayerState* GetAssociatedPlayerState();
		void GetAnimTags(TArray<class FName>* outTags);
		class UAnimInstance* GetAnimInstance();
		struct FVector GetActorLocationFromFeetLocation(const struct FVector& FeetLocation);
		class ADBDPlayer* FindClosestSlashablePlayerInDetectionZone(EDetectionZone detectionZoneID);
		void FastInteractionInputReleased();
		void FastInteractionInputPressed();
		void Dissolve(bool Dissolve);
		void DetachInteractor();
		void DBDUnCrouch();
		void DBDCrouch();
		void DBD_ToggleForceAuthoritativeMovement();
		void DBD_ToggleDebugInteractionInZone();
		void DBD_SetMouseTurnSpeedMultiplier(float value);
		void DBD_SetMouseLookUpSpeedMultiplier(float value);
		void DBD_DebugStartInteraction();
		void DBD_CancelInteraction();
		void Client_TryInteractionType(EInputInteractionType interactionType, class ADBDPlayer* requester);
		void Client_TryInteraction(class UInteractionDefinition* Interaction, class ADBDPlayer* requester, bool force, bool usingInputPersistence);
		void Client_SendCancelInteraction(class UInteractionDefinition* InteractionDefinition);
		void Client_Debug_PlayerStartSnapping(const struct FVector& Location, float Duration);
		bool CanInterrupt_BP();
		void CancelCarry(bool alsoCancelForOtherPlayer);
		void CameraUpdated();
		void Authority_SetDreamworldComponent(class UCharacterDreamworldComponent* Component);
		void Authority_RequestStun(EStunType stunType, class ADBDPlayer* stunner);
		void Authority_RemoveStatusEffectByID(const class FName& statusEffectID, bool bRemoveAllWithID);
		class UStatusEffect* Authority_ImposeStatusEffect_DEPRECATED(const class FName& statusEffectID, class ADBDPlayer* originatingPlayer, float customParam, class UGameplayModifierContainer* originatingEffect, bool shouldDisplay, float lifetime);
		class UStatusEffect* Authority_ImposeDynamicStatusEffect_DEPRECATED(const class FName& statusEffectID, class ADBDPlayer* originatingPlayer, float customParam, class UGameplayModifierContainer* originatingEffect);
		void Authority_HandleScoreEvent(const struct FGameplayTag& scoreTypeTag, const struct FScoreEventData& ScoreEventData);
		void Authority_EvaluateIfPlayerCanSee();
		void AttachInteractor(class UInteractor* Interactor);
		void AddDetectionZone(EDetectionZone detectionZoneID, class UPrimitiveComponent* zone);
		void AbilityTwoInputReleased();
		void AbilityTwoInputPressed();
		void AbilityInputReleased();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CamperPlayer
	 * Size -> 0x04C8 (FullSize[0x1620] - InheritedSize[0x1158])
	 */
	class ACamperPlayer : public ADBDPlayer
	{
	public:
		unsigned char                                              UnknownData_4TV9[0x8];                                   // 0x1158(0x0008) Fix Super Size
		unsigned char                                              UnknownData_QUT0[0x18];                                  // 0x1160(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnHookedStateChanged;                                    // 0x1178(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnGuidedStateChanged;                                    // 0x1188(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnPickedUpDelegate;                                      // 0x1198(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnPickedUpEndDelegate;                                   // 0x11A8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnHPSlotChanged;                                         // 0x11B8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MJ7J[0x40];                                  // 0x11C8(0x0040) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnImmobilizeStateChanged;                                // 0x1208(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6BPL[0x30];                                  // 0x1218(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnHookEscapeFailedCosmetic;                              // 0x1248(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FName                                                ReverseBearTrapAttachSocket;                             // 0x1258(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       isBeingDissolved;                                        // 0x1264(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MGO6[0x3];                                   // 0x1265(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FootprintAudibleRange;                                   // 0x1268(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5FEN[0x4];                                   // 0x126C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UStalkedComponent*                                   StalkedComponent;                                        // 0x1270(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CameraResetToleranceYaw;                                 // 0x1278(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CameraResetTolerancePitch;                               // 0x127C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CameraRecenterOffsetYaw;                                 // 0x1280(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CameraRecenterOffsetPitch;                               // 0x1284(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EGender                                                    Gender;                                                  // 0x1288(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ATW6[0x7];                                   // 0x1289(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveFloat*                                         DropStaggerDuration;                                     // 0x1290(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         DropStaggerMaxSpeed;                                     // 0x1298(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TimeforDeathWhileCrawling;                               // 0x12A0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TimeforDeathWhileHooked;                                 // 0x12A4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SecondsUntilFootprintTrigger;                            // 0x12A8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       TriggerAfflictionHUDIntro;                               // 0x12AC(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MBD0[0x93];                                  // 0x12AD(0x0093) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class APlayerController*                                   _storedPlayerController;                                 // 0x1340(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCamperStillnessTrackerComponent*                    _stillnessTracker;                                       // 0x1348(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      PartiallyHiddenStillnessThreshold;                       // 0x1350(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_9HNY[0x4];                                   // 0x1354(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              _escape;                                                 // 0x1358(0x0008) Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class AActor*                                              _overlappingEscape;                                      // 0x1360(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USpherePlayerOverlapComponent*                       ProximityZone;                                           // 0x1368(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_NM3D[0x18];                                  // 0x1370(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCapsuleComponent*                                   SlashableZone;                                           // 0x1388(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCapsuleComponent*                                   HookSlashableZone;                                       // 0x1390(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCamperSlashableComponent*                           _camperSlashable;                                        // 0x1398(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      CrouchCapsuleHalfHeight;                                 // 0x13A0(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      IKOffsetRightFoot;                                       // 0x13A4(0x0004) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      IKOffsetLeftFoot;                                        // 0x13A8(0x0004) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_KYG2[0xC];                                   // 0x13AC(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UDBDPawnSensingComponent*                            _camperSensor;                                           // 0x13B8(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class USurviveTimerScoreEventComponent*                    _surviveTimerScoreComponent;                             // 0x13C0(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_SZN1[0x18];                                  // 0x13C8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class ADBDPlayer*>                                  _foundCampers;                                           // 0x13E0(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		TArray<class ADBDPlayer*>                                  _potentialSaviors;                                       // 0x13F0(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		class UCamperHealthComponent*                              _healthComponent;                                        // 0x1400(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UChargeableComponent*                                _hpSlot01;                                               // 0x1408(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UChargeableComponent*                                _hpSlot02;                                               // 0x1410(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UChargeableComponent*                                _mendChargeable;                                         // 0x1418(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UBloodTrailSettings*                                 _bloodTrailSettings;                                     // 0x1420(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UCamperBloodTrailComponent*                          _bloodTrailComponent;                                    // 0x1428(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UCameraAttachmentComponent*                          _cameraAttachment;                                       // 0x1430(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UCharmSpawnerComponent*                              _charmSpawnerComponent;                                  // 0x1438(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UHookableComponent*                                  _hookableComponent;                                      // 0x1440(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UHookAntiCampingComponent*                           _hookAntiCampingComponent;                               // 0x1448(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UProtectionHitComponent*                             _protectionHitComponent;                                 // 0x1450(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UScreamComponent*                                    _screamComponent;                                        // 0x1458(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UCharacterPositionRecorderComponent*                 _positionRecorder;                                       // 0x1460(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_HAJ5[0xA5];                                  // 0x1468(0x00A5) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       _lastEscaped;                                            // 0x150D(0x0001) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_PS0X[0x6];                                   // 0x150E(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       _runInputPressed;                                        // 0x1514(0x0001) Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_NVBJ[0x23];                                  // 0x1515(0x0023) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       _trapIndicatorActive;                                    // 0x1538(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_AR2K[0x7];                                   // 0x1539(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCamperEndGameComponent*                             _camperEndGameComponent;                                 // 0x1540(0x0008) Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UAkComponent*                                        _noOcclusionAkComponent;                                 // 0x1548(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UAkComponent*                                        _attenuationAkComponent;                                 // 0x1550(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_9MPJ[0x24];                                  // 0x1558(0x0024) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       _isHealingKOCamper;                                      // 0x157C(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _isSkillCheckFailed;                                     // 0x157D(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _isBeingSacrificed;                                      // 0x157E(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _isWiggleProgressionAllowed;                             // 0x157F(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_HXAV[0x70];                                  // 0x1580(0x0070) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMoveComponentToComponent*                           _meshMover;                                              // 0x15F0(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UCarriedMovementComponent*                           _carriedMovementComponent;                               // 0x15F8(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class USurvivorHitSprintEffect*                            _sprintEffect;                                           // 0x1600(0x0008) ExportObject, Net, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_5QSO[0x18];                                  // 0x1608(0x0018) MISSED OFFSET (PADDING)

	public:
		void UpdateHealingTimer(float DeltaTime);
		void TriggerPutDownAnimation();
		void TriggerPickUpAnimation();
		void TriggerAfflictionHUDFeedback();
		void StopHealingTimer();
		void StartHealingTimer(float Time);
		void SetVignetteVisible(bool visible);
		void SetPlayerExposedVFX();
		void SetIsSkillCheckFailed(bool isSkillCheckFailed);
		void SetIsHealingKOCamper(bool isHealingKOCamper);
		void SetGuidedActionLocal(ECamperGuidedAction action);
		void SetGuidedAction(ECamperGuidedAction action);
		void SetBeingCarried(bool IsBeingCarried, class ADBDPlayer* carrier);
		void Server_SetRunInput(bool Pressed);
		void Server_SetOverlappingEscape(class AActor* Escape);
		void RunLocked(bool lock);
		void ResetPotentialSaviors();
		void ResetCameraAttach();
		void RemoveReverseBearTrap();
		void OnUnhooked();
		void OnRep_SprintEffect();
		void OnRep_RunInputPressed();
		void OnProximityEntered(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
		void OnPickUpEnter(class ADBDPlayer* picker, float TransitionTime);
		void OnPickUpDenied();
		void OnPawnSensed(class APawn* Pawn);
		void OnObsessionChanged(class ACamperPlayer* newObsession, class ACamperPlayer* previousObsession);
		void OnHpSlotSkillCheckResponseAesthetic(bool success, bool Bonus, class ADBDPlayer* Player, bool TriggerLoudNoise, bool hadInput, ESkillCheckCustomType Type, float ChargeChange);
		void OnHookedStateChangedCosmetic(bool hooked);
		void OnHooked();
		void OnFinishedPlaying();
		void OnDroppedStart();
		void OnDroppedEnd(bool clearLeader);
		void OnDroppedByBearTrap();
		void Multicast_SetOverlappingEscape(class AActor* Escape);
		void Multicast_SetImmobilized(ECamperImmobilizeState State);
		void Multicast_SetHookEscapeAutoFail(bool Enabled);
		void Multicast_SetGuidedAction(ECamperGuidedAction action);
		void Multicast_SetAuthoritativeMovementFlag(EAuthoritativeMovementFlag flag, bool value);
		void Multicast_RemoveReverseBearTrap();
		void Multicast_EscapeItemEvents(bool isItemFromSpawn);
		void MakeCamperDisappearBleedOut();
		void MakeCamperDisappear();
		void Local_SetImmobilized(ECamperImmobilizeState State);
		void Kill(EHealthType healthType);
		bool IsVaulting();
		bool IsUnintentionallyImmobilized();
		bool IsUnhookingSelf();
		bool IsTrapped();
		bool IsSacrificed();
		bool IsRunLocked();
		bool IsObsessionTarget();
		bool IsMovementGuided();
		bool IsInNeed();
		bool IsInDeathBed();
		bool IsImmobilized();
		bool IsHooked();
		bool IsHealingTimerExpired();
		bool IsGuidedBySlasher();
		bool IsEscaped();
		bool IsDeadOrInParadise();
		bool IsCrawling();
		bool IsBeingUnhooked();
		bool IsBeingPutOnHook();
		bool IsBeingPutDown();
		bool IsBeingPulledFromCloset();
		bool IsBeingPickedUp();
		bool IsBeingMended();
		bool IsBeingKilled();
		bool IsBeingInteractedWith();
		bool IsBeingHealed();
		bool IsBeingEndGameSacrificed();
		bool IsBeingCarried();
		void Input_ToggleRun();
		void HatchEscapeZoneEntered(class AActor* Escape);
		bool HasReverseBearTrap();
		bool HasHitEvents();
		bool HasGuidedAction();
		class UChargeableComponent* GetWiggleChargeable();
		struct FRotator GetToAimPointRotation();
		float GetStillness();
		class AReverseBearTrap* GetReverseBearTrap();
		float GetPercentHealingTimer();
		class AActor* GetOverlappingEscape();
		float GetObsessionTargetWeight();
		int32_t GetNumberOfEntityRenderRegions();
		class UAkComponent* GetNoOcclusionAudioComponent();
		class UAnimationMontageSlave* GetMontageFollower();
		class UMoveComponentToComponent* GetMeshMover();
		float GetMaxGruntDistance(bool isLocalPlayerKiller);
		bool GetIsWiggleProgressionAllowed();
		bool GetIsSkillCheckFailed();
		bool GetIsHealingKOCamper();
		bool GetIsBeingDissolved();
		ECamperImmobilizeState GetImmobilizedState();
		class UHookAntiCampingComponent* GetHookAntiCampingComponent();
		class UHookableComponent* GetHookableComponent();
		class UCamperHealthComponent* GetHealthComponent();
		ECamperGuidedAction GetGuidedAction();
		class UDBDClipRegionComponent* GetEntityRenderRegionAtIndex(int32_t InIndex);
		class UChaseeCharacterComponent* GetChaseeCharacterComponent();
		class UCamperStillnessTrackerComponent* GetCamperStillnessComponent();
		class UDBDCamperData* GetCamperData();
		class UCameraAttachmentComponent* GetCameraAttachmentComponent();
		class UCamperBloodTrailComponent* GetBloodTrailComponent();
		class UAkComponent* GetAttenuationAudioComponent();
		TArray<class UDBDClipRegionComponent*> GetAllEntityRenderRegions();
		struct FVector GetAimPoint();
		void EventOnDeath();
		void EscapeTutorial();
		void DoSacrificialDissolve();
		void DetachFromGuidingPlayer();
		void DecalBlood_Puddles();
		void DBD_SetSurvivorCameraArmLengthCommand(float cameraArmLength);
		void DBD_SetSurvivorCameraArmLength(float cameraArmLength);
		void DBD_SetImmobilized(ECamperImmobilizeState State);
		void DBD_LeaveParadise();
		void DBD_ForceRun(bool Forced);
		void DBD_CheatEscaped();
		float ComputeInteractionSuccessPercentage(class UInteractionDefinition* Interaction);
		bool ComputeHookEscapeResult();
		bool ComputeBeartrapEscapeResult();
		void Client_OnSlashedOutOfTrap(class ADBDPlayer* requester);
		bool CanRushQuietly();
		bool CanBeShocked();
		bool CanBePickedUp();
		bool CanBeKilled();
		void CallOnDroppedByBearTrap();
		void Authority_SetImmobilized(ECamperImmobilizeState State);
		void Authority_OnSlashed(class ADBDPlayer* Attacker);
		void Authority_DropItemAtLastSafePosition();
		void Authority_ApplySprintEffect();
		void AttachToGuidingPlayer();
		void AddBloodDropsToRightHand();
		void AddBloodDropsToLeftHand();
		void AddBloodDrippingToGK_Mori();
		void AddBloodDecalToGK_Mori();
		void ActivatePlayerExposedVFX();
		void ActivateLocalPlayerExposedVFX();
		void ActionInputReleased();
		void ActionInputPressed();
		bool AcceptsHealing();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CamperSlashableComponent
	 * Size -> 0x00F0 (FullSize[0x01A8] - InheritedSize[0x00B8])
	 */
	class UCamperSlashableComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_LS6E[0x8];                                   // 0x00B8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCapsuleComponent*                                   _slashableZone;                                          // 0x00C0(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCapsuleComponent*                                   _hookSlashableZone;                                      // 0x00C8(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      _standingCapsuleHalfHeight;                              // 0x00D0(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      _crouchCapsuleHalfHeight;                                // 0x00D4(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FGameplayTagContainer                               _slashableDisablingStateTags;                            // 0x00D8(0x0020) Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
		float                                                      _sourceActivationLingerDuration;                         // 0x00F8(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_WW3R[0x2C];                                  // 0x00FC(0x002C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USlashableActivationSourceCollection*                _slashableActivationSources;                             // 0x0128(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_XRAH[0x78];                                  // 0x0130(0x0078) MISSED OFFSET (PADDING)

	public:
		void SetUseCrouchSlashableCapsule(bool useCrouchCapsule);
		void SetStandingCapsuleHalfHeight(float Height);
		void SetSlashableZone(class UCapsuleComponent* zone);
		void SetHookSlashableZone(class UCapsuleComponent* zone);
		void SetCrouchCapsuleHalfHeight(float Height);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PlayerStateMachine
	 * Size -> 0x0000 (FullSize[0x0130] - InheritedSize[0x0130])
	 */
	class UPlayerStateMachine : public UStateMachine
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CamperStateMachine
	 * Size -> 0x0000 (FullSize[0x0130] - InheritedSize[0x0130])
	 */
	class UCamperStateMachine : public UPlayerStateMachine
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.StillnessTrackerComponent
	 * Size -> 0x0038 (FullSize[0x00F0] - InheritedSize[0x00B8])
	 */
	class UStillnessTrackerComponent : public UActorComponent
	{
	public:
		float                                                      SpeedThreshold;                                          // 0x00B8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DistanceThreshold;                                       // 0x00BC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DistanceDecay;                                           // 0x00C0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       DecayWhileMoving;                                        // 0x00C4(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DUEC[0x3];                                   // 0x00C5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      StillnessThreshhold;                                     // 0x00C8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StillnessTimerLimit;                                     // 0x00CC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DecaySpeedMultiplier;                                    // 0x00D0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DABL[0x8];                                   // 0x00D4(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TWeakObjectPtr<class ADBDPlayer>                           _trackedPlayer;                                          // 0x00DC(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_U9MZ[0xC];                                   // 0x00E4(0x000C) MISSED OFFSET (PADDING)

	public:
		void StartTracking();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CamperStillnessTrackerComponent
	 * Size -> 0x0060 (FullSize[0x0150] - InheritedSize[0x00F0])
	 */
	class UCamperStillnessTrackerComponent : public UStillnessTrackerComponent
	{
	public:
		float                                                      ChickenShitModifier;                                     // 0x00F0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LoudNoiseTime;                                           // 0x00F4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9D8Y[0x10];                                  // 0x00F8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<float>                                              ExposerSpawnTimes;                                       // 0x0108(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		TArray<float>                                              ExposerDespawnTimes;                                     // 0x0118(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		class UClass*                                              _exposerInstanceToSpawn;                                 // 0x0128(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<class ACamperExposerInstance*>                      _exposerInstances;                                       // 0x0130(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		class UExposerInteriorZoneComponent*                       _interiorZone;                                           // 0x0140(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_GMEW[0x8];                                   // 0x0148(0x0008) MISSED OFFSET (PADDING)

	public:
		void OnOverlapExit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex);
		void OnOverlapEnter(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
		void OnLevelReadyToPlay();
		void ExitInteriorZone(class UExposerInteriorZoneComponent* zone);
		void EnterInteriorZone(class UExposerInteriorZoneComponent* zone);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CarriedMovementComponent
	 * Size -> 0x00A8 (FullSize[0x0160] - InheritedSize[0x00B8])
	 */
	class UCarriedMovementComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_7RBR[0xA8];                                  // 0x00B8(0x00A8) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CartersSparkComponent
	 * Size -> 0x00F0 (FullSize[0x01A8] - InheritedSize[0x00B8])
	 */
	class UCartersSparkComponent : public UActorComponent
	{
	public:
		bool                                                       _staticBlastEnabled;                                     // 0x00B8(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_408M[0x8F];                                  // 0x00B9(0x008F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class ADBDPlayer*>                                  _totallyInsanePlayers;                                   // 0x0148(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		class ADBDPlayer*                                          _owningPlayer;                                           // 0x0158(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_AGUN[0x20];                                  // 0x0160(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDBDTunableRowHandle                                _maxMadnessTier;                                         // 0x0180(0x0028) Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void TriggerStaticBlastCooldown();
		void TriggerShockTherapyCooldown();
		void OnRequestAndBeginInteraction(class UInteractionDefinition* Interaction);
		void Multicast_OnShockTherapyCooldownCheatEntered();
		bool IsStaticBlastOnCooldown();
		bool IsShockTherapyOnCooldown();
		float GetStaticBlastCooldownPercentElapsed();
		void Authority_RegisterToGameEvents();
		void Authority_AddTotallyInsaneSurvivor(class ADBDPlayer* insaneSurvivor);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CDNPatchManager
	 * Size -> 0x0228 (FullSize[0x0258] - InheritedSize[0x0030])
	 */
	class UCDNPatchManager : public UObject
	{
	public:
		class FString                                              InstallDirectory;                                        // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PakOrder;                                                // 0x0040(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1N2M[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              PakMountPoint;                                           // 0x0048(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VTB3[0x48];                                  // 0x0058(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TWeakObjectPtr<class UGameInstance>                        _gameInstance;                                           // 0x00A0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_2K47[0xF0];                                  // 0x00A8(0x00F0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAtlantaPendingContent*                              _currentContentToInstall;                                // 0x0198(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<class FString>                                      _remainingManifestsToInstall;                            // 0x01A0(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		TMap<class FString, class UAtlantaPendingContent*>         _contentToInstall;                                       // 0x01B0(0x0050) Transient, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_HYAQ[0x48];                                  // 0x0200(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAtlantaPendingContent*                              _MobilePendingContent;                                   // 0x0248(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_4YZU[0x8];                                   // 0x0250(0x0008) MISSED OFFSET (PADDING)

	public:
		void OnRequestSucceeded(class UAtlantaPendingContent* pendingContent);
		void OnRequestFailed(const class FText& ErrorText, int32_t ErrorCode);
		void OnInstallSucceeded();
		void OnInstallFailed(const class FText& ErrorText, int32_t ErrorCode);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CharacterChaseVisualComponent
	 * Size -> 0x0078 (FullSize[0x0130] - InheritedSize[0x00B8])
	 */
	class UCharacterChaseVisualComponent : public UActorComponent
	{
	public:
		class FScriptMulticastDelegate                             OnChaseStartEvent;                                       // 0x00B8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnChaseEndEvent;                                         // 0x00C8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class UMaterialHelperUnaffectedStaticMeshComponent*        _vignetteMeshComp;                                       // 0x00D8(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FVector                                             _relativeLocation;                                       // 0x00E0(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FVector                                             _relativeScale;                                          // 0x00EC(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FRotator                                            _relativeRotation;                                       // 0x00F8(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate
		float                                                      _fovModifyFactor;                                        // 0x0104(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_ZG7G[0x28];                                  // 0x0108(0x0028) MISSED OFFSET (PADDING)

	public:
		void OnObservedCharacterChange(class ADBDPlayer* Player);
		void OnAllChaseEnd();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CharacterCollection
	 * Size -> 0x0228 (FullSize[0x02E0] - InheritedSize[0x00B8])
	 */
	class UCharacterCollection : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_UDMU[0x90];                                  // 0x00B8(0x0090) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ASlasherPlayer*                                      _killer;                                                 // 0x0148(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              _survivors[0x50];                                        // 0x0150(0x0050) UNKNOWN PROPERTY: SetProperty
		unsigned char                                              _mainDBDPlayers[0x50];                                   // 0x01A0(0x0050) UNKNOWN PROPERTY: SetProperty
		unsigned char                                              _otherCharacters[0x50];                                  // 0x01F0(0x0050) UNKNOWN PROPERTY: SetProperty
		unsigned char                                              _nonPlayableCharacters[0x50];                            // 0x0240(0x0050) UNKNOWN PROPERTY: SetProperty
		unsigned char                                              _allCharacters[0x50];                                    // 0x0290(0x0050) UNKNOWN PROPERTY: SetProperty

	public:
		void GetSurvivors();
		void GetMainDBDPlayers();
		class ASlasherPlayer* GetKiller();
		TArray<class ADBDPlayer*> GetAllDBDPlayers();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CharacterCollectionUtilities
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UCharacterCollectionUtilities : public UBlueprintFunctionLibrary
	{
	public:
		int32_t STATIC_GetNumberOfInjuredHookedOrDyingSurvivors(class UObject* WorldContextObject);
		class ASlasherPlayer* STATIC_GetKiller(class UObject* WorldContextObject);
		void STATIC_GetInGameSurvivorsByRef(class UObject* WorldContextObject);
		TArray<class ADBDPlayer*> STATIC_GetInGameSurvivorsAsPlayers(class UObject* WorldContextObject);
		TArray<class ACamperPlayer*> STATIC_GetInGameSurvivors(class UObject* WorldContextObject);
		TArray<class ADBDPlayer*> STATIC_GetInGamePlayers(class UObject* WorldContextObject);
		TArray<class ADBDPlayer*> STATIC_GetCharactersByPlayerTeam(EPlayerTeam playerTeam, class UObject* WorldContextObject);
		TArray<class ADBDPlayer*> STATIC_GetAllDBDPlayers(class UObject* WorldContextObject);
		void STATIC_GetAllCharacters(class UObject* WorldContextObject);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CharacterCollisionsUtilities
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UCharacterCollisionsUtilities : public UBlueprintFunctionLibrary
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CharacterDataSubsystem
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UCharacterDataSubsystem : public UGameInstanceSubsystem
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CharacterHelper
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UCharacterHelper : public UObject
	{
	public:
		struct FCharmIdSlot STATIC_SetCharmSlot(class ADBDPlayerState* PlayerState, const class FName& CharmId, int32_t slotIndex);
		TArray<struct FOutfitData> STATIC_GetOutfitsByCharacterID(const class FString& characterId);
		void STATIC_GetOutfitComposition(struct FCustomizationItemData* returnHead, struct FCustomizationItemData* returnTorso, struct FCustomizationItemData* returnLegsWeapon, const class FString& OutfitId);
		TArray<struct FCharacterDescription> STATIC_GetCharactersByRole(EPlayerRole Role);
		void STATIC_GetAllOutfitComponentsOfCharacter(TArray<struct FCustomizationItemData>* returnHeads, TArray<struct FCustomizationItemData>* returnTorsos, TArray<struct FCustomizationItemData>* returnLegsWeapons, const class FString& characterId);
		TArray<class FString> STATIC_GetAllEnabledCharms();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CharacterInfoScreen
	 * Size -> 0x0018 (FullSize[0x0138] - InheritedSize[0x0120])
	 */
	class UCharacterInfoScreen : public UScreenBase
	{
	public:
		unsigned char                                              UnknownData_DNZI[0x18];                                  // 0x0120(0x0018) MISSED OFFSET (PADDING)

	public:
		void OnBackButtonClick();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CharacterInventoryComponent
	 * Size -> 0x00B8 (FullSize[0x0170] - InheritedSize[0x00B8])
	 */
	class UCharacterInventoryComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_BS1Z[0x58];                                  // 0x00B8(0x0058) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class ACollectable*>                                _inventory;                                              // 0x0110(0x0010) Net, ZeroConstructor, Transient, RepNotify, NativeAccessSpecifierPrivate
		TArray<class UItemAddon*>                                  _generalAddons;                                          // 0x0120(0x0010) ExportObject, Net, ZeroConstructor, Transient, RepNotify, ContainsInstancedReference, NativeAccessSpecifierPrivate
		TArray<class ACollectable*>                                _backpackInventory;                                      // 0x0130(0x0010) Net, ZeroConstructor, Transient, RepNotify, NativeAccessSpecifierPrivate
		TArray<class ACollectable*>                                _localInventory;                                         // 0x0140(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		TArray<class ACollectable*>                                _localBackpackInventory;                                 // 0x0150(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		TArray<class UItemAddon*>                                  _allAddons;                                              // 0x0160(0x0010) ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate

	public:
		void StoreItem();
		class ACollectable* SpawnAndCollectItem(const class FName& ItemId);
		void RemoveFromInventory(class ACollectable* Item);
		void OnRep_Inventory();
		void OnRep_GeneralAddons();
		void OnRep_BackpackInventory();
		void Multicast_RemoveFromInventory(class ACollectable* Item);
		void Multicast_ClearAndDestroyInventory();
		void Multicast_AddToInventory(class ACollectable* Item, EInventoryType inventoryType);
		bool IsUsingAimItem();
		bool HasStoredItem();
		bool HasMaximumItemCount(class ACollectable* Item);
		bool HasItem();
		bool HasInInventory(class UClass* Item, EInventoryType inventoryType);
		bool HasEquippedItem();
		class FName GetItemID();
		int32_t GetItemCountByID(const class FName& ItemId);
		int32_t GetItemCount();
		class ACollectable* GetItem();
		class ACollectable* GetFirstItemFromInventory(class UClass* Item, EInventoryType inventoryType);
		TArray<class UItemAddon*> GetAddons();
		void EquipItem();
		void Collect(class ACollectable* Item, EInventoryType inventoryType);
		void ClearAndDestroyInventory();
		void Authority_UseInventoryItem();
		void Authority_Drop(class ACollectable* Item, const struct FVector& Location, const struct FRotator& Rotation, bool onDeath, bool adjustToGround, bool dropInChest);
		void AddToInventory(class ACollectable* Item, EInventoryType inventoryType);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ItemsAssetLibrary
	 * Size -> 0x0070 (FullSize[0x0120] - InheritedSize[0x00B0])
	 */
	class UItemsAssetLibrary : public UAssetLibrary
	{
	public:
		unsigned char                                              UnknownData_NYG0[0x70];                                  // 0x00B0(0x0070) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CharacterItemsAssetLibrary
	 * Size -> 0x0018 (FullSize[0x0138] - InheritedSize[0x0120])
	 */
	class UCharacterItemsAssetLibrary : public UItemsAssetLibrary
	{
	public:
		unsigned char                                              UnknownData_5YEE[0x18];                                  // 0x0120(0x0018) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CharacterPositionRecorderConfigurator
	 * Size -> 0x0010 (FullSize[0x00D0] - InheritedSize[0x00C0])
	 */
	class UCharacterPositionRecorderConfigurator : public UBaseHitValidationConfigurator
	{
	public:
		unsigned char                                              UnknownData_PYZL[0x10];                                  // 0x00C0(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CharacterProgressionManager
	 * Size -> 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
	 */
	class UCharacterProgressionManager : public UObject
	{
	public:
		TWeakObjectPtr<class UDBDGameInstance>                     _gameInstance;                                           // 0x0030(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CharacterStatsHandlerComponent
	 * Size -> 0x0010 (FullSize[0x00C8] - InheritedSize[0x00B8])
	 */
	class UCharacterStatsHandlerComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_GVCX[0x10];                                  // 0x00B8(0x0010) MISSED OFFSET (PADDING)

	public:
		void ReceiveGameEvent(EDBDScoreTypes scoreType, float Amount, class AActor* Instigator, class AActor* Target);
		void OnGameEvent(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
		void InitializePreMatchStats();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CharacterStatsUtilities
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UCharacterStatsUtilities : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDEditorActor
	 * Size -> 0x0000 (FullSize[0x0230] - InheritedSize[0x0230])
	 */
	class ADBDEditorActor : public AActor
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CharacterTool
	 * Size -> 0x0150 (FullSize[0x0380] - InheritedSize[0x0230])
	 */
	class ACharacterTool : public ADBDEditorActor
	{
	public:
		TArray<class ATargetPoint*>                                SpawnLocations;                                          // 0x0230(0x0010) Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected
		struct FCharacterToolData                                  _customizationData;                                      // 0x0240(0x0080) Edit, NativeAccessSpecifierPrivate
		struct FCharacterToolSpawnParameters                       _defaultSpawnParams;                                     // 0x02C0(0x0003) Edit, NoDestructor, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_BL82[0x1];                                   // 0x02C3(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                _powerSocket;                                            // 0x02C4(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		EAttachmentRule                                            _powerAttachmentRule;                                    // 0x02D0(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _muteAudioInPIE;                                         // 0x02D1(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _isUsingGameSkeleton;                                    // 0x02D2(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_DZDU[0x5];                                   // 0x02D3(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              _overallLightingClass[0x30];                             // 0x02D8(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		struct FNamedButton                                        _showHelp;                                               // 0x0308(0x0018) Edit, NativeAccessSpecifierPrivate
		TMap<class ADBDMenuPlayer*, struct FCharacterToolSpawnParameters> _characters;                                             // 0x0320(0x0050) Transient, NativeAccessSpecifierPrivate
		class AActor*                                              _lighting;                                               // 0x0370(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_OD0Q[0x8];                                   // 0x0378(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CharacterToolAnimation
	 * Size -> 0x0010 (FullSize[0x02D0] - InheritedSize[0x02C0])
	 */
	class UCharacterToolAnimation : public UAnimInstance
	{
	public:
		TArray<struct FCharacterToolItemData>                      SelectedItems;                                           // 0x02C0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CharacterUtilities
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UCharacterUtilities : public UBlueprintFunctionLibrary
	{
	public:
		struct FVector STATIC_GetFeetPositionAtTargetLocation(class ACharacter* Character, const struct FVector& Location);
		struct FVector STATIC_GetFeetPosition(class ACharacter* Character);
		struct FVector STATIC_GetActorLocationFromFeetLocation(class ACharacter* Character, const struct FVector& FeetLocation);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CharacterXPManager
	 * Size -> 0x00E0 (FullSize[0x0110] - InheritedSize[0x0030])
	 */
	class UCharacterXPManager : public UObject
	{
	public:
		unsigned char                                              UnknownData_5SUI[0x18];                                  // 0x0030(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TWeakObjectPtr<class UDBDGameInstance>                     _gameInstance;                                           // 0x0048(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_J003[0xC0];                                  // 0x0050(0x00C0) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ChargeableComponent
	 * Size -> 0x0268 (FullSize[0x0320] - InheritedSize[0x00B8])
	 */
	class UChargeableComponent : public UActorComponent
	{
	public:
		class FScriptMulticastDelegate                             OnInteractionEmptiedEvent;                               // 0x00B8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5NXF[0x18];                                  // 0x00C8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnInteractionCompletionStateChanged;                     // 0x00E0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SB3W[0x18];                                  // 0x00F0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             SkillCheckResponseAestheticDelegate;                     // 0x0108(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             SkillCheckResponseAuthorityDelegate;                     // 0x0118(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             ChargeAppliedAuthorityDelegate;                          // 0x0128(0x0010) ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             ChargeableCompletionPercentChangeAuthorityDelegate;      // 0x0138(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             ChargeableCompletionPercentChangeCosmeticDelegate;       // 0x0148(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             DechargeBeginDelegate;                                   // 0x0158(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             DechargeEndDelegate;                                     // 0x0168(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		bool                                                       AllowSkillChecksAtFullCharge;                            // 0x0178(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CRXQ[0x7];                                   // 0x0179(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ChargeableComponentID;                                   // 0x0180(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DechargeDelay;                                           // 0x0190(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StartingChargePercent;                                   // 0x0194(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSpeedBasedNetSyncedValue                           _currentCharge;                                          // 0x0198(0x0038) Net, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_0CSP[0x8];                                   // 0x01D0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDBDTimer                                           _skillCheckFailurePenaltyTimer;                          // 0x01D8(0x0028) Transient, NativeAccessSpecifierPrivate
		struct FDBDTimer                                           _dechargeTimer;                                          // 0x0200(0x0028) Transient, NativeAccessSpecifierPrivate
		TArray<struct FChargeData>                                 _chargesThisFrame;                                       // 0x0228(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		TArray<struct FChargeData>                                 _redirectedChargesThisFrame;                             // 0x0238(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		TMap<uint32_t, class UChargeStrategy*>                     _activeChargeStrategies;                                 // 0x0248(0x0050) Transient, NativeAccessSpecifierPrivate
		TArray<class AActor*>                                      _instigatorsSinceEmpty;                                  // 0x0298(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		TMap<class FName, float>                                   _tunableValueMap;                                        // 0x02A8(0x0050) Transient, NativeAccessSpecifierPrivate
		bool                                                       _isCharging;                                             // 0x02F8(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_LJVA[0x7];                                   // 0x02F9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            _playersWhoDidSkillCheck;                                // 0x0300(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		float                                                      _dechargeRate;                                           // 0x0310(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _enableAddCharge;                                        // 0x0314(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _enableSkillCheckFailurePenalty;                         // 0x0315(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _isDecharging;                                           // 0x0316(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _stopDechargingWhenComplete;                             // 0x0317(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_B90Y[0x8];                                   // 0x0318(0x0008) MISSED OFFSET (PADDING)

	public:
		void SetSecondsToCharge(float SecondsToCharge);
		void SetDechargeRate(float dechargeRate);
		void OnRep_CurrentCharge();
		void OnCurrentChargeChanged(float value);
		void Multicast_OnEmptied();
		void Multicast_OnCompleteChanged(bool COMPLETED);
		bool IsSkillCheckTimePenaltyActive();
		bool IsChargeComplete();
		void IncreaseMaxChargeAdditive(float secondsToAdd);
		void IncreaseMaxCharge(float percent);
		bool HasPlayerDoneSkillCheck(int32_t playerID);
		float GetTunableValue(const class FName& TunableValueID);
		float GetPlayerCountPenaltyModifier(int32_t PlayerCount);
		float GetPercentComplete();
		float GetMaxCharge();
		float GetCurrentCharge();
		float GetChargingSpeed();
		float GetChargeRemaining();
		void Authority_SetEnableSkillCheckFailurePenalty(bool enable);
		void Authority_SetEnableAddCharge(bool enable);
		void Authority_Reset();
		void Authority_ApplyStartingCharge();
		void Authority_AddChargePercent(float ChargePercent, class AActor* Instigator, bool BypassSkillCheckFail, bool IsOneTimeIncrease, bool isChargeWithItem);
		void Authority_AddCharge(float ChargeAmount, class AActor* Instigator, bool BypassSkillCheckFail, bool IsOneTimeIncrease, bool isChargeWithItem);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ChargeableProgressProviderComponent
	 * Size -> 0x0010 (FullSize[0x00C8] - InheritedSize[0x00B8])
	 */
	class UChargeableProgressProviderComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_95T0[0x10];                                  // 0x00B8(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ChargedAttackStateComponent
	 * Size -> 0x0008 (FullSize[0x00C0] - InheritedSize[0x00B8])
	 */
	class UChargedAttackStateComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_BDXU[0x8];                                   // 0x00B8(0x0008) MISSED OFFSET (PADDING)

	public:
		void SetIsCharging(bool IsCharging);
		void SetChargingPercent(float ChargePercent);
		bool GetIsCharging();
		float GetChargingPercent();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ChargerComponent
	 * Size -> 0x0080 (FullSize[0x0138] - InheritedSize[0x00B8])
	 */
	class UChargerComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_88RG[0x8];                                   // 0x00B8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ChargerComponentID;                                      // 0x00C0(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnChargeStateChange;                                     // 0x00D0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnChargePercentChange;                                   // 0x00E0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NYUQ[0x18];                                  // 0x00F0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EEnergyTypeEnum                                            EnergyType;                                              // 0x0108(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_H5EZ[0x3];                                   // 0x0109(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      _currentEnergyLevel;                                     // 0x010C(0x0004) Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _maxEnergyLevel;                                         // 0x0110(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_5NVB[0x24];                                  // 0x0114(0x0024) MISSED OFFSET (PADDING)

	public:
		void UseEnergy(float Seconds, float energyUseModifier);
		void SetNormalizedEnergyLevel(float EnergyLevel);
		void SetMaxEnergyLevel(float EnergyLevel);
		void SetEnergyLevel(float EnergyLevel);
		void Reset();
		void OnRep_EnergyLevel(float previousEnergyLevel);
		bool HasCharge();
		float GetNormalizedEnergyLevel();
		float GetMaxEnergyLevel();
		float GetEnergyLevel();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ChargeStrategy
	 * Size -> 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
	 */
	class UChargeStrategy : public UObject
	{
	public:
		unsigned char                                              UnknownData_Y9P7[0x10];                                  // 0x0030(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       _shouldApplyRedirectedChargeNormally;                    // 0x0040(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _shouldBroadcastChargeApplied;                           // 0x0041(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _shouldApplyModifiersToRedirectedCharge;                 // 0x0042(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _shouldAllowChargeFromItem;                              // 0x0043(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _shouldRedirectSkillcheckChargePenalty;                  // 0x0044(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_2DUI[0x3];                                   // 0x0045(0x0003) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.Charm
	 * Size -> 0x0048 (FullSize[0x0278] - InheritedSize[0x0230])
	 */
	class ACharm : public AActor
	{
	public:
		unsigned char                                              UnknownData_6FF9[0x8];                                   // 0x0230(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USkeletalMeshComponent*                              _skeletalMeshComponent;                                  // 0x0238(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_ZDSX[0x18];                                  // 0x0240(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AItemVfx*                                            _actorVfx;                                               // 0x0258(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_I955[0x18];                                  // 0x0260(0x0018) MISSED OFFSET (PADDING)

	public:
		void BeginDestroySequence_Internal();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CharmAttachable
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UCharmAttachable : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CharmAttacher
	 * Size -> 0x0038 (FullSize[0x0268] - InheritedSize[0x0230])
	 */
	class ACharmAttacher : public AActor
	{
	public:
		class FScriptMulticastDelegate                             OnAttachedOnActor;                                       // 0x0230(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnCharmAnimationTagsChanged;                             // 0x0240(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class UDBDSkeletalMeshComponentBudgeted*                   _chain;                                                  // 0x0250(0x0008) Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class ACharm*                                              _attachedCharm;                                          // 0x0258(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_D4QN[0x8];                                   // 0x0260(0x0008) MISSED OFFSET (PADDING)

	public:
		class USkeletalMeshComponent* GetSkeletalMeshComponentAttachedOn();
		class ACharm* GetAttachedCharm();
		struct FCharmAttacherAnimationTweak GetAnimationTweak();
		class AActor* GetActorAttachedOn();
		void DispatchOnCharmAnimationTagsChanged();
		void BindOnCharmAnimationTagsChanged();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CharmSpawnerComponent
	 * Size -> 0x0030 (FullSize[0x00E8] - InheritedSize[0x00B8])
	 */
	class UCharmSpawnerComponent : public UActorComponent
	{
	public:
		class FName                                                SocketRootName;                                          // 0x00B8(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OQU7[0x4];                                   // 0x00C4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FCharmSlot>                                  CharmSlots;                                              // 0x00C8(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FVector                                             ScaleCharm;                                              // 0x00D8(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    _forcedLOD;                                              // 0x00E4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void ReplaceCharmTextures(TArray<struct FCharmIdSlot> Customization);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ChaseComponent
	 * Size -> 0x0070 (FullSize[0x0128] - InheritedSize[0x00B8])
	 */
	class UChaseComponent : public UActorComponent
	{
	public:
		class FScriptMulticastDelegate                             OnChaseStarted;                                          // 0x00B8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnChaseEnded;                                            // 0x00C8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnAllChaseEnded;                                         // 0x00D8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnIsInChaseChanged;                                      // 0x00E8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		struct FTagStateBool                                       _isInChase;                                              // 0x00F8(0x0030) Net, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void OnRep_IsInChase();
		bool IsInChase();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ChaseeCharacterComponent
	 * Size -> 0x0068 (FullSize[0x0190] - InheritedSize[0x0128])
	 */
	class UChaseeCharacterComponent : public UChaseComponent
	{
	public:
		unsigned char                                              UnknownData_3E26[0x8];                                   // 0x0128(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      _totalChaseTimeThisMatchDebugReplicated;                 // 0x0130(0x0004) Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_8KU9[0x5C];                                  // 0x0134(0x005C) MISSED OFFSET (PADDING)

	public:
		void Authority_OnLevelReadyToPlay();
		void Authority_OnGeneratorPercentChanged(class UChargeableComponent* ChargeableComponent, float PercentCompletionChange, float TotalPercentComplete);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ChaserCharacterComponent
	 * Size -> 0x00D8 (FullSize[0x0200] - InheritedSize[0x0128])
	 */
	class UChaserCharacterComponent : public UChaseComponent
	{
	public:
		unsigned char                                              UnknownData_CI0M[0x10];                                  // 0x0128(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UDBDPawnSensingComponent*                            _camperSensor;                                           // 0x0138(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TMap<class ADBDPlayer*, struct FChaseUpdateInfo>           _chaseUpdateInfo;                                        // 0x0140(0x0050) Transient, NativeAccessSpecifierPrivate
		TArray<class ADBDPlayer*>                                  _chasedPlayers;                                          // 0x0190(0x0010) Net, ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		TArray<class ADBDPlayer*>                                  _authority_survivorsWhoStunnedKillerByPalletDuringChase; // 0x01A0(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_HYBU[0x30];                                  // 0x01B0(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGameplayTagContainer                               _preventChaseTags;                                       // 0x01E0(0x0020) Edit, NativeAccessSpecifierPrivate

	public:
		void OnKillerLocallyObservedChanged(bool locallyObserved);
		void Multicast_OnChaseStart(class ACamperPlayer* Survivor);
		void Multicast_OnChaseEnd(class ACamperPlayer* Survivor, const struct FChaseUpdateInfo& ChaseUpdateInfo);
		void Multicast_OnAllChaseEnd();
		void Authority_OnChaseTargetFound(class APawn* Pawn);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ChatManager
	 * Size -> 0x0020 (FullSize[0x0250] - InheritedSize[0x0230])
	 */
	class AChatManager : public AActor
	{
	public:
		class UDBDGameInstance*                                    _gameInstance;                                           // 0x0230(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_EHUL[0x18];                                  // 0x0238(0x0018) MISSED OFFSET (PADDING)

	public:
		void Multicast_DisplayMessage(const class FString& chatIdentifier, int32_t PlayerIndex, const class FString& MirrorsId, const class FString& Msg);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ChatSimulator
	 * Size -> 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
	 */
	class UChatSimulator : public UObject
	{
	public:
		unsigned char                                              UnknownData_YZIU[0x20];                                  // 0x0030(0x0020) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CheatUtilities
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UCheatUtilities : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ChunkingManager
	 * Size -> 0x0038 (FullSize[0x0068] - InheritedSize[0x0030])
	 */
	class UChunkingManager : public UObject
	{
	public:
		class UDBDGameInstance*                                    _gameInstance;                                           // 0x0030(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_4WUP[0x30];                                  // 0x0038(0x0030) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CinematicManager
	 * Size -> 0x0048 (FullSize[0x0078] - InheritedSize[0x0030])
	 */
	class UCinematicManager : public UObject
	{
	public:
		unsigned char                                              UnknownData_6LDK[0x30];                                  // 0x0030(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FCinematic>                                  _cinematicQueue;                                         // 0x0060(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		class UBackendCinematicContainer*                          _backendContainer;                                       // 0x0070(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void PlaySingle(const struct FCinematic& Cinematic);
		void PlayMultiple(TArray<struct FCinematic> Cinematics);
		bool HasCinematicToPlay();
		struct FCinematic GetNextCinematicToPlay();
		void CancelAllCinematicToPlay();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CinematicScreen
	 * Size -> 0x0000 (FullSize[0x0120] - InheritedSize[0x0120])
	 */
	class UCinematicScreen : public UScreenBase
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ClientBloodwebContentAdapter
	 * Size -> 0x0010 (FullSize[0x0070] - InheritedSize[0x0060])
	 */
	class UClientBloodwebContentAdapter : public UBaseBloodwebContentAdapter
	{
	public:
		class UBloodwebGenerator*                                  _bloodwebBuilder;                                        // 0x0060(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_ITVX[0x8];                                   // 0x0068(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ClientStartupInitializerInterface
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UClientStartupInitializerInterface : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ClipManager
	 * Size -> 0x0168 (FullSize[0x0398] - InheritedSize[0x0230])
	 */
	class AClipManager : public AActor
	{
	public:
		TArray<class UDBDClipRegionComponent*>                     _clippingZones;                                          // 0x0230(0x0010) ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
		unsigned char                                              _meshComponents[0x50];                                   // 0x0240(0x0050) UNKNOWN PROPERTY: SetProperty
		TArray<struct FMaterialOriginalState>                      _dissolvedMeshes;                                        // 0x0290(0x0010) ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
		TMap<class UMaterialInterface*, class UMaterialInterface*> _normal2dissolve;                                        // 0x02A0(0x0050) Transient, NativeAccessSpecifierPrivate
		TMap<class UMaterialInterface*, struct FStaticMeshesArrayForClip> _normal2dissolveStaticMeshes;                            // 0x02F0(0x0050) Transient, NativeAccessSpecifierPrivate
		TMap<class UMaterialInterface*, class UMaterialInterface*> _dissolve2normal;                                        // 0x0340(0x0050) Transient, NativeAccessSpecifierPrivate
		class UDataTable*                                          _sphericalDissolveMaterials;                             // 0x0390(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void SphericalDissolveAt(const struct FVector& Location, float Radius);
		void RemoveDissolveMaterials();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CollectableCollection
	 * Size -> 0x0048 (FullSize[0x0100] - InheritedSize[0x00B8])
	 */
	class UCollectableCollection : public UActorComponent
	{
	public:
		TArray<class ACollectable*>                                _collectables;                                           // 0x00B8(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_T6A7[0x38];                                  // 0x00C8(0x0038) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CombinedPartyFriendFacade
	 * Size -> 0x0138 (FullSize[0x0168] - InheritedSize[0x0030])
	 */
	class UCombinedPartyFriendFacade : public UObject
	{
	public:
		unsigned char                                              UnknownData_WF4F[0x138];                                 // 0x0030(0x0138) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CombinedSpecialEventDataUtilities
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UCombinedSpecialEventDataUtilities : public UBlueprintFunctionLibrary
	{
	public:
		class FName STATIC_GetSpecialMusicState(const struct FCombinedSpecialEventData& Data);
		struct FColor STATIC_GetObjectOutlineColour(const struct FCombinedSpecialEventData& Data);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ConeAroundDirectionCameraStrategy
	 * Size -> 0x0028 (FullSize[0x0058] - InheritedSize[0x0030])
	 */
	class UConeAroundDirectionCameraStrategy : public UObject
	{
	public:
		unsigned char                                              UnknownData_4EIY[0x18];                                  // 0x0030(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      _maxPitchDifference;                                     // 0x0048(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _maxYawDifference;                                       // 0x004C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _maxRollDifference;                                      // 0x0050(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_PIX1[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ConnectionStatusSubsystem
	 * Size -> 0x00E0 (FullSize[0x0118] - InheritedSize[0x0038])
	 */
	class UConnectionStatusSubsystem : public UGameInstanceSubsystem
	{
	public:
		unsigned char                                              UnknownData_TM7I[0xE0];                                  // 0x0038(0x00E0) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ConsentManager
	 * Size -> 0x0070 (FullSize[0x00A0] - InheritedSize[0x0030])
	 */
	class UConsentManager : public UObject
	{
	public:
		unsigned char                                              UnknownData_YAH1[0x70];                                  // 0x0030(0x0070) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ConstrainAspectRatioComponent
	 * Size -> 0x00B8 (FullSize[0x0170] - InheritedSize[0x00B8])
	 */
	class UConstrainAspectRatioComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_BB6P[0xB8];                                  // 0x00B8(0x00B8) MISSED OFFSET (PADDING)

	public:
		void SetCinematicMode(bool cinematicMode);
		void OnIntroCompleted();
		struct FIntPoint GetCameraConstrainedViewSize();
		void DBD_ToggleBlackBars(int32_t Option);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ContainsItemInterface
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UContainsItemInterface : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ContentScheduleManager
	 * Size -> 0x0110 (FullSize[0x0140] - InheritedSize[0x0030])
	 */
	class UContentScheduleManager : public UObject
	{
	public:
		unsigned char                                              UnknownData_UWWJ[0x108];                                 // 0x0030(0x0108) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UObjectLibrary*                                      _availableMapLibrary;                                    // 0x0138(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ContentVersionManager
	 * Size -> 0x0018 (FullSize[0x0050] - InheritedSize[0x0038])
	 */
	class UContentVersionManager : public UGameInstanceSubsystem
	{
	public:
		unsigned char                                              UnknownData_WHAM[0x18];                                  // 0x0038(0x0018) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ContextualQuestComponent
	 * Size -> 0x0040 (FullSize[0x00F8] - InheritedSize[0x00B8])
	 */
	class UContextualQuestComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_WLEZ[0x28];                                  // 0x00B8(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSpecialBehaviourObjectsInfo>                _specialBehaviourObjectsInfo;                            // 0x00E0(0x0010) Net, ZeroConstructor, Transient, RepNotify, NativeAccessSpecifierPrivate
		bool                                                       _isInitialized;                                          // 0x00F0(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_NFAR[0x7];                                   // 0x00F1(0x0007) MISSED OFFSET (PADDING)

	public:
		void OnSpecialBehaviourSet__DelegateSignature(class ADBDPlayer* DBDPlayer);
		void OnRep_SpecialBehaviourObjectsInfo();
		void Authority_DebugRemoveSpecialBehaviour(const class FName& ID);
		void Authority_DebugAddSpecialBehaviour(const class FName& ID, int32_t amountRequired);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ControllerPairingManager
	 * Size -> 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
	 */
	class UControllerPairingManager : public UObject
	{
	public:
		TWeakObjectPtr<class UDBDGameInstance>                     _gameInstance;                                           // 0x0030(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_D4O4[0x8];                                   // 0x0038(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CooldownTimerPerkIconStrategy
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UCooldownTimerPerkIconStrategy : public UBasePerkIconStrategy
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CoreCursor
	 * Size -> 0x0008 (FullSize[0x02A0] - InheritedSize[0x0298])
	 */
	class UCoreCursor : public UUserWidget
	{
	public:
		class UScaleBox*                                           CursorScaleBox;                                          // 0x0298(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CoreHudRootWidget
	 * Size -> 0x00D8 (FullSize[0x0370] - InheritedSize[0x0298])
	 */
	class UCoreHudRootWidget : public UUserWidget
	{
	public:
		class UOverlay*                                            WidgetContainer;                                         // 0x0298(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UOverlay*                                            OuterContainer;                                          // 0x02A0(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UOverlay*                                            SpectateContainer;                                       // 0x02A8(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UScaleBox*                                           ScaleHud;                                                // 0x02B0(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      UnfocusedOpacity;                                        // 0x02B8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_18EM[0x4];                                   // 0x02BC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveFloat*                                         Test4kDpiScalingCurve;                                   // 0x02C0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              Test4kDpiCurveClass;                                     // 0x02C8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UUserWidget*                                         Test4kDpiCurveWidget;                                    // 0x02D0(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              EquippedItemWidgetClass;                                 // 0x02D8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UClass*                                              EquippedPowerWidgetClass;                                // 0x02E0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UClass*                                              ExternalEffectsWidgetClass;                              // 0x02E8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UClass*                                              HudAlertWidgetClass;                                     // 0x02F0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UClass*                                              InteractionProgressWidgetClass;                          // 0x02F8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UClass*                                              InteractionPromptsContainerWidgetClass;                  // 0x0300(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UClass*                                              ItemInteractionWidgetClass;                              // 0x0308(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UClass*                                              MatchResultWidgetClass;                                  // 0x0310(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UClass*                                              OfferingInteractionWidgetClass;                          // 0x0318(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UClass*                                              PerksContainerWidgetClass;                               // 0x0320(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UClass*                                              PingStatusWidgetClass;                                   // 0x0328(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UClass*                                              PlayerStatusesWidgetClass;                               // 0x0330(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UClass*                                              ScreenIndicatorWidgetClass;                              // 0x0338(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UClass*                                              StartSequenceWidgetClass;                                // 0x0340(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UClass*                                              StatusEffectWidgetClass;                                 // 0x0348(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              _coreBaseViewInterfaces[0x10];                           // 0x0350(0x0010) UNKNOWN PROPERTY: ArrayProperty
		class FScriptMulticastDelegate                             HUDWidgetsFadeOutCompletedDelegate;                      // 0x0360(0x0010) ZeroConstructor, InstancedReference, BlueprintCallable, NativeAccessSpecifierPrivate

	public:
		void SetWidgetsVisibility(bool visible);
		void FadeOutWidgets();
		void FadeInWidgets();
		void ApplyConstrainedAspectRatio(bool isConstrained, float AspectRatio);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CrossPlatformManager
	 * Size -> 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
	 */
	class UCrossPlatformManager : public UObject
	{
	public:
		bool                                                       _crossPlayAllowedByPlatform;                             // 0x0030(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _crossPlayAllowedByKraken;                               // 0x0031(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_XJ4B[0x6];                                   // 0x0032(0x0006) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CrossPromotionManager
	 * Size -> 0x0028 (FullSize[0x0060] - InheritedSize[0x0038])
	 */
	class UCrossPromotionManager : public UGameInstanceSubsystem
	{
	public:
		unsigned char                                              UnknownData_4AJH[0x28];                                  // 0x0038(0x0028) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.GeneratorDrivenActor
	 * Size -> 0x0028 (FullSize[0x0258] - InheritedSize[0x0230])
	 */
	class AGeneratorDrivenActor : public AActor
	{
	public:
		float                                                      LightPriority;                                           // 0x0230(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EComponentMobility                                         TargetMobileLightMobility;                               // 0x0234(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1D2J[0x3];                                   // 0x0235(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<bool>                                               _activated;                                              // 0x0238(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		TArray<class AGenerator*>                                  _generators;                                             // 0x0248(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate

	public:
		void SetSpawnedObject(class AGenerator* Generator, int32_t generatorId);
		void OnInitGeneratorDrivenActor(class AGenerator* Generator, int32_t generatorId);
		void OnGeneratorRepairedEvent6(bool isAutoCompleted);
		void OnGeneratorRepairedEvent5(bool isAutoCompleted);
		void OnGeneratorRepairedEvent4(bool isAutoCompleted);
		void OnGeneratorRepairedEvent3(bool isAutoCompleted);
		void OnGeneratorRepairedEvent2(bool isAutoCompleted);
		void OnGeneratorRepairedEvent1(bool isAutoCompleted);
		void OnGeneratorRepairedEvent0(bool isAutoCompleted);
		void OnGeneratorRepairedBySurvivorEvent6(class ADBDPlayer* repairingSurvivor);
		void OnGeneratorRepairedBySurvivorEvent5(class ADBDPlayer* repairingSurvivor);
		void OnGeneratorRepairedBySurvivorEvent4(class ADBDPlayer* repairingSurvivor);
		void OnGeneratorRepairedBySurvivorEvent3(class ADBDPlayer* repairingSurvivor);
		void OnGeneratorRepairedBySurvivorEvent2(class ADBDPlayer* repairingSurvivor);
		void OnGeneratorRepairedBySurvivorEvent1(class ADBDPlayer* repairingSurvivor);
		void OnGeneratorRepairedBySurvivorEvent0(class ADBDPlayer* repairingSurvivor);
		void OnGeneratorRepairedBySurvivor(class ADBDPlayer* repairingSurvivor, int32_t generatorId);
		void OnActivateGeneratorDrivenActor(bool isAutoCompleted, int32_t generatorId);
		void Multicast_GeneratorRepairedBySurvivor(class ADBDPlayer* repairingSurvivor, int32_t generatorId);
		void Multicast_ActivationChecked(bool activated, bool isAutoCompleted, int32_t generatorId);
		bool IsValidGeneratorId(int32_t generatorId);
		bool IsActivated(int32_t generatorId);
		struct FRandomStream GetSharedTileRandomizer();
		void Authority_CheckGeneratorRepairedBySurvivor(class ADBDPlayer* repairingSurvivor, int32_t generatorId);
		void Authority_CheckActivation(bool isAutoCompleted, int32_t generatorId);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CrowBomb
	 * Size -> 0x0098 (FullSize[0x02F0] - InheritedSize[0x0258])
	 */
	class ACrowBomb : public AGeneratorDrivenActor
	{
	public:
		float                                                      _innerRadius;                                            // 0x0258(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _outerRadius;                                            // 0x025C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _maxTakeoffDelay;                                        // 0x0260(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    _numCrows;                                               // 0x0264(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    _crowCenterDistance;                                     // 0x0268(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    _eliminationSamples;                                     // 0x026C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _eliminationStddev;                                      // 0x0270(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_QYJR[0x4];                                   // 0x0274(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              _meshComponentClass[0x30];                               // 0x0278(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		TArray<class UWorldRunawayMeshComponent*>                  _crows;                                                  // 0x02A8(0x0010) ExportObject, Net, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_QNB2[0x18];                                  // 0x02B8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USceneComponent*                                     _root;                                                   // 0x02D0(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class USceneComponent*                                     _traceStart;                                             // 0x02D8(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class USceneComponent*                                     _traceEnd;                                               // 0x02E0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _landed;                                                 // 0x02E8(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_DCNW[0x7];                                   // 0x02E9(0x0007) MISSED OFFSET (PADDING)

	public:
		void TriggerTakeOff(const struct FVector& triggerLocation);
		void TriggerLand();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CrowdChoiceTugOfWarPopupScreen
	 * Size -> 0x0000 (FullSize[0x0140] - InheritedSize[0x0140])
	 */
	class UCrowdChoiceTugOfWarPopupScreen : public UGenericPopupScreen
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CurrencyDisplayable
	 * Size -> 0x0060 (FullSize[0x0290] - InheritedSize[0x0230])
	 */
	class ACurrencyDisplayable : public AActor
	{
	public:
		unsigned char                                              UnknownData_0FI9[0x8];                                   // 0x0230(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USkeletalMeshComponent*                              SkeletalMeshComponent;                                   // 0x0238(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<ECurrencyType, class USkeletalMesh*>                  _currencyMeshes;                                         // 0x0240(0x0050) Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate

	public:
		void FinishSpawningCurrency(ECurrencyType CurrencyType);
		void BeginDestroySequence_Internal();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CurveFloatNetIdSubsystem
	 * Size -> 0x0060 (FullSize[0x0098] - InheritedSize[0x0038])
	 */
	class UCurveFloatNetIdSubsystem : public UGameInstanceSubsystem
	{
	public:
		unsigned char                                              UnknownData_UF43[0x60];                                  // 0x0038(0x0060) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CustomizationDescription
	 * Size -> 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
	 */
	class UCustomizationDescription : public UDataAsset
	{
	public:
		TArray<struct FCustomizedMeshPart>                         Parts;                                                   // 0x0038(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CustomizationHelper
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UCustomizationHelper : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CustomizationPresetController
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UCustomizationPresetController : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CustomizedAnimationComponent
	 * Size -> 0x0020 (FullSize[0x00D8] - InheritedSize[0x00B8])
	 */
	class UCustomizedAnimationComponent : public UActorComponent
	{
	public:
		class ADBDBasePlayer*                                      _owner;                                                  // 0x00B8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UCustomizedSkeletalMesh*                             _customizedSkeletalMesh;                                 // 0x00C0(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UClass*                                              _defaultAnimClass;                                       // 0x00C8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_CG5Z[0x8];                                   // 0x00D0(0x0008) MISSED OFFSET (PADDING)

	public:
		void OnCustomizationChanged();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CustomizedAudioComponent
	 * Size -> 0x0160 (FullSize[0x0218] - InheritedSize[0x00B8])
	 */
	class UCustomizedAudioComponent : public UActorComponent
	{
	public:
		class FScriptMulticastDelegate                             OnCustomizedAudioSwitchStateChanged;                     // 0x00B8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnOutfitCustomizedAudioStateCollectionChanged;           // 0x00C8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WKAB[0xB0];                                  // 0x00D8(0x00B0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              AudioCharacterNameDefaultSwitchState;                    // 0x0188(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FString                                              AudioCharacterSubNameDefaultSwitchState;                 // 0x0198(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FString                                              AudioCharacterHeadDefaultSwitchState;                    // 0x01A8(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FString                                              AudioCharacterClothesDefaultSwitchState;                 // 0x01B8(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FString                                              AudioCharacterShoesDefaultSwitchState;                   // 0x01C8(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FString                                              AudioCharacterWeaponDefaultSwitchState;                  // 0x01D8(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FString                                              AudioCharacterAmbianceDefaultSwitchState;                // 0x01E8(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FString                                              AudioCharacterStateDefaultSwitchState;                   // 0x01F8(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FName                                                AudioCharacterDefaultOutfitCollectionState;              // 0x0208(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_MO42[0x4];                                   // 0x0214(0x0004) MISSED OFFSET (PADDING)

	public:
		void OutfitCustomizedAudioChangedDelegate__DelegateSignature(const class FName& outfitAudioStateCollection);
		class FName GetOutfitCustomizedAudioCollectionState();
		class FString GetAudioSwitchState(EAudioCustomizationCategory audioCustomizationCategory);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CustomizedSkeletalMesh
	 * Size -> 0x0378 (FullSize[0x0430] - InheritedSize[0x00B8])
	 */
	class UCustomizedSkeletalMesh : public UActorComponent
	{
	public:
		class FScriptMulticastDelegate                             OnMeshSwitchBP;                                          // 0x00B8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0TMY[0x18];                                  // 0x00C8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnCustomizationReady;                                    // 0x00E0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QKBP[0x30];                                  // 0x00F0(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USkinnedMeshComponent*                               _meshOwner;                                              // 0x0120(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_KIWV[0x8];                                   // 0x0128(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              _ignoredItemCategories[0x50];                            // 0x0130(0x0050) UNKNOWN PROPERTY: SetProperty
		TArray<class USkeletalMeshComponent*>                      _cosmeticPiecesMesh;                                     // 0x0180(0x0010) Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, ContainsInstancedReference, NativeAccessSpecifierPrivate
		TMap<ECustomizationCategory, class USkeletalMeshComponent*> _cosmeticPiecesMeshPerCategory;                          // 0x0190(0x0050) ExportObject, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
		TArray<class USkeletalMeshComponent*>                      _slaves;                                                 // 0x01E0(0x0010) Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, ContainsInstancedReference, NativeAccessSpecifierPrivate
		TMap<ECustomizationCategory, class AItemVfx*>              _itemVfxs;                                               // 0x01F0(0x0050) Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_US7L[0xA0];                                  // 0x0240(0x00A0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    _characterIdOverride;                                    // 0x02E0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_O8ZV[0x5C];                                  // 0x02E4(0x005C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<ECustomizationCategory, struct FCosmeticPieceMeshLoadingData> _cosmeticPieceMeshesBeingLoaded;                         // 0x0340(0x0050) NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_O1WA[0xA0];                                  // 0x0390(0x00A0) MISSED OFFSET (PADDING)

	public:
		void SetVfxsVisibility(ECustomizationCategory Category, bool visible);
		void SetMeshVisibility(bool visible);
		void SetMeshOwner(class USkinnedMeshComponent* Mesh);
		void SetCastShadow(bool CastShadow);
		void SetAllVfxsVisibility(bool visible);
		void SetAllAccessoriesVisibility(bool visible);
		void OnMeshSwitchEventBP__DelegateSignature(ECustomizationCategory Category, class USkeletalMeshComponent* Mesh);
		void OnCustomizationReadyBP__DelegateSignature();
		bool HasValidCustomization();
		class USkeletalMeshComponent* GetSkeletalMesh(ECustomizationCategory Category);
		class USkinnedMeshComponent* GetMeshOwner();
		TArray<class FName> GetCurrentCustomizationItems();
		TArray<class USkeletalMeshComponent*> GetComponents();
		void CopyCustomization(class UCustomizedSkeletalMesh* CopyFrom);
		bool Contains(TArray<class FName> itemIds);
		void ClearAllVfxs();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CustomWidgetWrapperInitializer
	 * Size -> 0x0010 (FullSize[0x02A8] - InheritedSize[0x0298])
	 */
	class UCustomWidgetWrapperInitializer : public UUserWidget
	{
	public:
		class UCustomWidgetWrapper*                                ListeningWrapper;                                        // 0x0298(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_CBZG[0x8];                                   // 0x02A0(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CustomWidgetWrapper
	 * Size -> 0x0050 (FullSize[0x01A8] - InheritedSize[0x0158])
	 */
	class UCustomWidgetWrapper : public UCanvasPanel
	{
	public:
		class FScriptMulticastDelegate                             OnVersion;                                               // 0x0158(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		struct FGameplayTag                                        ID;                                                      // 0x0168(0x000C) Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8X69[0x4];                                   // 0x0174(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCustomWidgetWrapper*                                ManuallyParentWrapper;                                   // 0x0178(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UCustomWidgetWrapper*>                        ManuallyChildWrappers;                                   // 0x0180(0x0010) Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		class UCustomWidgetWrapperInitializer*                     InitializerWidget;                                       // 0x0190(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LOTJ[0x10];                                  // 0x0198(0x0010) MISSED OFFSET (PADDING)

	public:
		void ApplyVersion(int32_t Version);
		void ApplyScale(float Scale);
		void ApplyOpacity(float Opacity);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CustomWidgetWrapper_HudEditor
	 * Size -> 0x00C8 (FullSize[0x0270] - InheritedSize[0x01A8])
	 */
	class UCustomWidgetWrapper_HudEditor : public UCustomWidgetWrapper
	{
	public:
		float                                                      MinOpacity;                                              // 0x01A8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxOpacity;                                              // 0x01AC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinScale;                                                // 0x01B0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxScale;                                                // 0x01B4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NbVersions;                                              // 0x01B8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HideUnderOpacity;                                        // 0x01BC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FColor                                              HiddenStatusTintColor;                                   // 0x01C0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HiddenStatusOpacity;                                     // 0x01C4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OverlapAboveSizeRatio;                                   // 0x01C8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KYW5[0x4];                                   // 0x01CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGameplayTagContainer                               IgnoreOverlapIds;                                        // 0x01D0(0x0020) Edit, NativeAccessSpecifierPublic
		struct FHudEditorDragFromParentAxisLimit                   ParentDragLimitX;                                        // 0x01F0(0x0014) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FHudEditorDragFromParentAxisLimit                   ParentDragLimitY;                                        // 0x0204(0x0014) Edit, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       IsEditingHudByInput;                                     // 0x0218(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QU8R[0x3];                                   // 0x0219(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FColor                                              OverlapStatusTintColor;                                  // 0x021C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1VX2[0x50];                                  // 0x0220(0x0050) MISSED OFFSET (PADDING)

	public:
		float GetScale();
		float GetOpacity();
		void FlipScreenPosition();
		void FlipPositionWithChildLinkWidget();
		void ClampToViewport();
		bool CanEditScale();
		bool CanEditOpacity();
		void ApplyScaleWithOverlappingWrappers(float Scale, class UWidget* Widget, TArray<class UCustomWidgetWrapper_HudEditor*> allEditableWrappers, bool needDetectOverlapping);
		void AddToTranslation(const struct FVector2D& Translation);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CustomWidgetWrapper_InGame
	 * Size -> 0x0028 (FullSize[0x01D0] - InheritedSize[0x01A8])
	 */
	class UCustomWidgetWrapper_InGame : public UCustomWidgetWrapper
	{
	public:
		int32_t                                                    VirtualJoystickIndex;                                    // 0x01A8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_A5K0[0x24];                                  // 0x01AC(0x0024) MISSED OFFSET (PADDING)

	public:
		void UpdateSettings();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DailyRewardUtilities
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UDailyRewardUtilities : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DailyRitualsScreen
	 * Size -> 0x0060 (FullSize[0x0180] - InheritedSize[0x0120])
	 */
	class UDailyRitualsScreen : public UScreenBase
	{
	public:
		unsigned char                                              UnknownData_ORUQ[0x60];                                  // 0x0120(0x0060) MISSED OFFSET (PADDING)

	public:
		void OnRemoveRitual(const class FString& ID);
		void OnClosed();
		void OnClaimRitual(const class FString& ID);
		void OnClaimAllRituals();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBD_CrossDissolver
	 * Size -> 0x0030 (FullSize[0x00E8] - InheritedSize[0x00B8])
	 */
	class UDBD_CrossDissolver : public UActorComponent
	{
	public:
		TArray<class UMaterialInterface*>                          NewMaterials;                                            // 0x00B8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class USkeletalMeshComponent*>                      BaseSkeletalMesh;                                        // 0x00C8(0x0010) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		TArray<class USkeletalMeshComponent*>                      ClonedSkeletalMeshes;                                    // 0x00D8(0x0010) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic

	public:
		void MakeClone();
		void KillClone();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBD_SoundClipUtil
	 * Size -> 0x00C8 (FullSize[0x0180] - InheritedSize[0x00B8])
	 */
	class UDBD_SoundClipUtil : public UActorComponent
	{
	public:
		TArray<struct FMapMeshToAkAudioEvent>                      AudioMap;                                                // 0x00B8(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TMap<class FName, struct FMapMeshToAkAudioEvent>           _audioEventMap;                                          // 0x00C8(0x0050) Transient, Protected, NativeAccessSpecifierProtected
		TArray<struct FMapSoundsToAvoid>                           _objectsWhoHavePlayedASound;                             // 0x0118(0x0010) ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected
		TMap<class UAkAudioEvent*, float>                          _nextSoundPlayTime;                                      // 0x0128(0x0050) Transient, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_YMRZ[0x8];                                   // 0x0178(0x0008) MISSED OFFSET (PADDING)

	public:
		void OnCharacterEnterSoundRegion(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
		class UAkAudioEvent* GetAudioEventForMesh(class UStaticMeshComponent* usm);
		void Cosmetic_OnSoundTriggered(class AActor* Actor);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBD_SoundEventSpawner
	 * Size -> 0x0038 (FullSize[0x0268] - InheritedSize[0x0230])
	 */
	class ADBD_SoundEventSpawner : public AActor
	{
	public:
		TArray<struct FDBD_SoundSpawnerData>                       AtlantaSoundDescriptor;                                  // 0x0230(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FDBD_SoundSpawnerData>                       SoundDescriptor;                                         // 0x0240(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U479[0x8];                                   // 0x0250(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UClass*>                                      _loadedSoundAssets;                                      // 0x0258(0x0010) ZeroConstructor, Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected

	public:
		void OnLoudNoiseTriggered(class AActor* originator, class AActor* instigatingActor, const struct FVector& Location, bool shouldTrack, float* audibleRange, bool isQuickAction, bool isDeceivingNoise);
		void AssetsLoaded();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDAggregateCullDistanceVolumes
	 * Size -> 0x0000 (FullSize[0x0230] - InheritedSize[0x0230])
	 */
	class ADBDAggregateCullDistanceVolumes : public AActor
	{
	public:
		void SpawnCullDistanceVolumes();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDAggregateParticleSystemComponent
	 * Size -> 0x0064 (FullSize[0x0760] - InheritedSize[0x06FC])
	 */
	class UDBDAggregateParticleSystemComponent : public UParticleSystemComponent
	{
	public:
		float                                                      EndFadeDistance;                                         // 0x06FC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              LocatorComponentCache[0x50];                             // 0x0700(0x0050) UNKNOWN PROPERTY: SetProperty
		bool                                                       PendingReset;                                            // 0x0750(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_0RJJ[0xF];                                   // 0x0751(0x000F) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDAggregateParticleManager
	 * Size -> 0x0000 (FullSize[0x0230] - InheritedSize[0x0230])
	 */
	class ADBDAggregateParticleManager : public AActor
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDLocatorComponent
	 * Size -> 0x0000 (FullSize[0x0218] - InheritedSize[0x0218])
	 */
	class UDBDLocatorComponent : public USceneComponent
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDAggregateParticleLocatorComponent
	 * Size -> 0x0018 (FullSize[0x0230] - InheritedSize[0x0218])
	 */
	class UDBDAggregateParticleLocatorComponent : public UDBDLocatorComponent
	{
	public:
		class UParticleSystem*                                     Template;                                                // 0x0218(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UParticleSystemComponent*                            _particleComponent;                                      // 0x0220(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_J0EV[0x8];                                   // 0x0228(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDAIPlayerController
	 * Size -> 0x0028 (FullSize[0x0610] - InheritedSize[0x05E8])
	 */
	class ADBDAIPlayerController : public ADBDAIController
	{
	public:
		unsigned char                                              UnknownData_4K0Y[0x18];                                  // 0x05E8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UAICharacterBehaviour*>                       _currentBehaviours;                                      // 0x0600(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate

	public:
		void StopCharacterBehaviour(class UClass* behaviourClass);
		void StopAllCharacterBehaviours();
		void StartCharacterBehaviour(class UClass* behaviourClass, class UAICharacterBehaviourData* characterBehaviourData);
		void ResumeCharacterBehaviour(class UClass* behaviourClass);
		void PauseCharacterBehaviour(class UClass* behaviourClass);
		void OnBehaviourEndedHandler(class UAICharacterBehaviour* behaviourEnded);
		void MovePlayerToActor(class AActor* Goal, float AcceptanceRadius);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDAITypes
	 * Size -> 0x01C8 (FullSize[0x01F8] - InheritedSize[0x0030])
	 */
	class UDBDAITypes : public UObject
	{
	public:
		struct FGameplayTag                                        AISkills_Context_Service_Root;                           // 0x0030(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameplayTag                                        AISkills_Context_Task_Slasher_AttackTarget;              // 0x003C(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameplayTag                                        AISkills_Context_Service_Slasher_AttackTarget;           // 0x0048(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameplayTag                                        AISkills_Context_Task_Slasher_CrawlingTarget;            // 0x0054(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameplayTag                                        AISkills_Context_Service_Slasher_CrawlingTarget;         // 0x0060(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameplayTag                                        AISkills_Context_Service_Slasher_Investigate_NotInChase; // 0x006C(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameplayTag                                        AISkills_Context_Service_Slasher_Investigate_InChase;    // 0x0078(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameplayTag                                        AISkills_Context_Service_Slasher_Investigate_MoveAround; // 0x0084(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameplayTag                                        AISkills_Context_Service_Slasher_Patrol;                 // 0x0090(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameplayTag                                        AISkills_Context_Service_Slasher_Patrol_MoveAround;      // 0x009C(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameplayTag                                        AISkills_Context_Service_Camper_Standing;                // 0x00A8(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameplayTag                                        AISkills_Context_Service_Camper_Crawling;                // 0x00B4(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameplayTag                                        AISkills_Context_Service_Camper_Flee_Run_InChase;        // 0x00C0(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameplayTag                                        AISkills_Context_Service_Camper_Flee_Run_NotInChase;     // 0x00CC(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameplayTag                                        AISkills_Context_Service_Camper_Patrol;                  // 0x00D8(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameplayTag                                        AISkills_Context_Service_Camper_RescueCarriedFriend;     // 0x00E4(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameplayTag                                        AISkills_Context_Service_Camper_RemoveTrap;              // 0x00F0(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameplayTag                                        AISkills_Context_Service_Camper_Chained;                 // 0x00FC(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameplayTag                                        AISkills_Context_Service_Camper_HelpOther;               // 0x0108(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameplayTag                                        AISkills_Context_Service_Camper_GoalInTerror;            // 0x0114(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameplayTag                                        AISkills_Context_Service_Camper_Carried;                 // 0x0120(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameplayTag                                        AISkills_Context_Service_Camper_UseSelfItem;             // 0x012C(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameplayTag                                        AISkills_Context_Service_Camper_InLocker;                // 0x0138(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameplayTag                                        AISkills_Context_Service_Camper_Flee_InLocker;           // 0x0144(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameplayTag                                        AISkills_Context_Service_Camper_RepairGenerator;         // 0x0150(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameplayTag                                        AIBlackboard_InteractableWishList_FindSkill;             // 0x015C(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameplayTag                                        AI_PointOfInterest_ActivatedDoor;                        // 0x0168(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameplayTag                                        AI_PointOfInterest_ActivatedDoor_Opened;                 // 0x0174(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameplayTag                                        AI_PointOfInterest_BrokenGenerator;                      // 0x0180(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameplayTag                                        AI_PointOfInterest_OccupiedMeatHook;                     // 0x018C(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameplayTag                                        AI_PointOfInterest_HexTotem;                             // 0x0198(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameplayTag                                        AI_PinLocation_WarpStart;                                // 0x01A4(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameplayTag                                        AI_PinLocation_WarpEnd;                                  // 0x01B0(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameplayTag                                        AI_PinLocation_EQS;                                      // 0x01BC(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameplayTag                                        AI_PinLocation_WishedObj;                                // 0x01C8(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameplayTag                                        AI_PinLocation_GoTo;                                     // 0x01D4(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameplayTag                                        AI_PinObject_EQS;                                        // 0x01E0(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameplayTag                                        AI_PinObject_WishedObj;                                  // 0x01EC(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDAnimationBudgetAllocatorActivator
	 * Size -> 0x0030 (FullSize[0x00E8] - InheritedSize[0x00B8])
	 */
	class UDBDAnimationBudgetAllocatorActivator : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_809J[0x30];                                  // 0x00B8(0x0030) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDAssetManager
	 * Size -> 0x0018 (FullSize[0x0498] - InheritedSize[0x0480])
	 */
	class UDBDAssetManager : public UAssetManager
	{
	public:
		unsigned char                                              UnknownData_DUSV[0x18];                                  // 0x0480(0x0018) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDAtlantaBloodwebDefinition
	 * Size -> 0x0110 (FullSize[0x0140] - InheritedSize[0x0030])
	 */
	class UDBDAtlantaBloodwebDefinition : public UObject
	{
	public:
		unsigned char                                              UnknownData_ILGD[0x110];                                 // 0x0030(0x0110) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDBaseInputHandler
	 * Size -> 0x00A8 (FullSize[0x00D8] - InheritedSize[0x0030])
	 */
	class UDBDBaseInputHandler : public UObject
	{
	public:
		class APawn*                                               _pawn;                                                   // 0x0030(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USpringArmComponent*                                 _cameraBoom;                                             // 0x0038(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_I1ZP[0x98];                                  // 0x0040(0x0098) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDAtlantaInputHandler
	 * Size -> 0x00D8 (FullSize[0x01B0] - InheritedSize[0x00D8])
	 */
	class UDBDAtlantaInputHandler : public UDBDBaseInputHandler
	{
	public:
		unsigned char                                              UnknownData_EYOY[0xD8];                                  // 0x00D8(0x00D8) MISSED OFFSET (PADDING)

	public:
		void SetVirtualJoystickCenter(int32_t controlIndex, const struct FVector2D& controlCenter);
		struct FVector2D GetVirtualJoystickVisualSize(int32_t controlIndex);
		struct FVector2D GetVirtualJoystickVisualCenter(int32_t controlIndex);
		struct FVector2D GetVirtualJoystickPosition(int32_t controlIndex);
		struct FVector2D GetVirtualJoystickNormalizedOffset(int32_t controlIndex);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AtlantaRitualEvaluatorBase
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UAtlantaRitualEvaluatorBase : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AtlantaRitualEvaluatorInvalid
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UAtlantaRitualEvaluatorInvalid : public UAtlantaRitualEvaluatorBase
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AtlantaRitualEvaluatorFullLoadout
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UAtlantaRitualEvaluatorFullLoadout : public UAtlantaRitualEvaluatorBase
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDAtlantaTutorialParameters
	 * Size -> 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
	 */
	class UDBDAtlantaTutorialParameters : public UObject
	{
	public:
		float                                                      SurvTutorial_WiggleChargeRateMultiplier;                 // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3NOU[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDAttackerComponent
	 * Size -> 0x0108 (FullSize[0x01C0] - InheritedSize[0x00B8])
	 */
	class UDBDAttackerComponent : public UActorComponent
	{
	public:
		class FScriptMulticastDelegate                             OnAttackStartDelegate;                                   // 0x00B8(0x0010) ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnAttackFinishDelegate;                                  // 0x00C8(0x0010) ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NRWF[0x38];                                  // 0x00D8(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDBDTunableRowHandle                                _autonomousHitPredictionDelay;                           // 0x0110(0x0028) Edit, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<class UDBDAttack*>                                  _attacks;                                                // 0x0138(0x0010) ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_ZH6Q[0x10];                                  // 0x0148(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UDBDAttack*                                          _requestedAttack;                                        // 0x0158(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UDBDAttack*                                          _currentAttack;                                          // 0x0160(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_DNHS[0x48];                                  // 0x0168(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FAttackDelegatePair>                         _attackHitDelegates;                                     // 0x01B0(0x0010) ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate

	public:
		void Server_StoreAttack(EAttackType attackType);
		void OnAttackPhaseChangedDelegate__DelegateSignature(EAttackType attackType);
		void Multicast_StoreAttack(EAttackType attackType);
		void Local_RequestAttack(EAttackType attackType);
		bool IsAttackTransitionRequested(EAttackType attackType);
		bool IsAttacking();
		bool IsAnyAttackTransitionRequested();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDAttackUtilities
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UDBDAttackUtilities : public UBlueprintFunctionLibrary
	{
	public:
		EAttackType STATIC_GetCurrentAttackType(class AActor* Attacker);
		float STATIC_GetCurrentAttackSubstateRemainingTime(class AActor* Attacker);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDAuthentication
	 * Size -> 0x0028 (FullSize[0x0058] - InheritedSize[0x0030])
	 */
	class UDBDAuthentication : public UObject
	{
	public:
		TArray<struct FAuthenticationInfo>                         _localInfos;                                             // 0x0030(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		TArray<struct FAuthenticationInfo>                         _remoteInfos;                                            // 0x0040(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		class UDBDGameInstance*                                    _gameInstance;                                           // 0x0050(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDBaseGameMode
	 * Size -> 0x0038 (FullSize[0x0360] - InheritedSize[0x0328])
	 */
	class ADBDBaseGameMode : public AGameMode
	{
	public:
		unsigned char                                              UnknownData_PSMN[0x8];                                   // 0x0328(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDataTableDropdown                                  DebugSpecialEvent;                                       // 0x0330(0x0030) Edit, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDBaseHud
	 * Size -> 0x0010 (FullSize[0x0330] - InheritedSize[0x0320])
	 */
	class ADBDBaseHud : public AHUD
	{
	public:
		class UFont*                                               _debugFont;                                              // 0x0320(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_IVVA[0x8];                                   // 0x0328(0x0008) MISSED OFFSET (PADDING)

	public:
		void ShowAnimHudBP();
		bool ShouldDrawAnimHud();
		void DBD_ShowAnimHud(bool Show);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDBaseMatchGameMode
	 * Size -> 0x0018 (FullSize[0x0378] - InheritedSize[0x0360])
	 */
	class ADBDBaseMatchGameMode : public ADBDBaseGameMode
	{
	public:
		class UEndGameComponent*                                   _endGameComponent;                                       // 0x0360(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UEscapeRequirementTracker*                           _escapeRequirementTracker;                               // 0x0368(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class ANetworkFenceActor*                                  _theFence;                                               // 0x0370(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		class UEndGameComponent* GetEndGameComponent();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.HISMMaterialHelperSettings
	 * Size -> 0x0050 (FullSize[0x0088] - InheritedSize[0x0038])
	 */
	class UHISMMaterialHelperSettings : public UDataAsset
	{
	public:
		unsigned char                                              _meshMaterialOverride[0x50];                             // 0x0038(0x0050) UNKNOWN PROPERTY: MapProperty

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.BatchDrawing
	 * Size -> 0x0080 (FullSize[0x00B0] - InheritedSize[0x0030])
	 */
	class UBatchDrawing : public UObject
	{
	public:
		class AActor*                                              _actorToSpawnInstancesInto;                              // 0x0030(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TMap<class UStaticMesh*, struct FPerMeshInstancingData>    _meshesToInstancingData;                                 // 0x0038(0x0050) Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
		class UHISMMaterialHelperSettings*                         _hismMaterialHelperSettings;                             // 0x0088(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UWorld*                                              _currentWorld;                                           // 0x0090(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<struct FStaticMeshAutoBatch>                        _meshAutoBatch;                                          // 0x0098(0x0010) ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_KRB9[0x8];                                   // 0x00A8(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDBloodWebDefinition
	 * Size -> 0x0110 (FullSize[0x0140] - InheritedSize[0x0030])
	 */
	class UDBDBloodWebDefinition : public UObject
	{
	public:
		unsigned char                                              UnknownData_3I5M[0x110];                                 // 0x0030(0x0110) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDBloodwebDefinitionBase
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UDBDBloodwebDefinitionBase : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDBotsUtilities
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UDBDBotsUtilities : public UBlueprintFunctionLibrary
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDPlayerData
	 * Size -> 0x0090 (FullSize[0x0148] - InheritedSize[0x00B8])
	 */
	class UDBDPlayerData : public UActorComponent
	{
	public:
		class FScriptMulticastDelegate                             OnItemUseButtonStateChanged;                             // 0x00B8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4Y62[0x74];                                  // 0x00C8(0x0074) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FYawAndPitchRotator_NetQuantize16                   _controlRotation;                                        // 0x013C(0x000C) Net, NoDestructor, NativeAccessSpecifierPrivate

	public:
		void Server_SetPlayerReady();
		void Server_SetIntroCompleted();
		void Server_RenderingFeaturesCompleted();
		void Server_NotifyAIPawnSpawned();
		void Server_LoadoutSpawned();
		void Server_CampaignDataSynced();
		void OnItemUseButtonStateChanged__DelegateSignature(bool IsPressed);
		bool IsInteractionInputPressed(EInputInteractionType interactionType);
		bool GetUseInputPressed();
		struct FRotator GetControlRotation();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDCamperData
	 * Size -> 0x0048 (FullSize[0x0190] - InheritedSize[0x0148])
	 */
	class UDBDCamperData : public UDBDPlayerData
	{
	public:
		unsigned char                                              UnknownData_OEE5[0x48];                                  // 0x0148(0x0048) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDCharacterMovementUtilities
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UDBDCharacterMovementUtilities : public UBlueprintFunctionLibrary
	{
	public:
		void STATIC_Local_RemoveMaxSpeedMultiplierCurve(class ACharacter* Character, class UCurveFloat* curveToReset);
		void STATIC_Local_AddMaxSpeedMultiplierCurve(class ACharacter* Character, class UCurveFloat* Curve, float Duration, bool autoReset);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDCharacterUtilities
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UDBDCharacterUtilities : public UBlueprintFunctionLibrary
	{
	public:
		bool STATIC_IsWilliamBillOverbeck(class ADBDBasePlayer* TargetPlayer);
		bool STATIC_IsTheWraith(class ADBDBasePlayer* TargetPlayer);
		bool STATIC_IsTheTwins_Sister(class ADBDBasePlayer* TargetPlayer);
		bool STATIC_IsTheTwins_Brother(class ADBDBasePlayer* TargetPlayer);
		bool STATIC_IsTheTwins(class ADBDBasePlayer* TargetPlayer);
		bool STATIC_IsTheTrickster(class ADBDBasePlayer* TargetPlayer);
		bool STATIC_IsTheTrapper(class ADBDBasePlayer* TargetPlayer);
		bool STATIC_IsTheSpirit(class ADBDBasePlayer* TargetPlayer);
		bool STATIC_IsTheShape(class ADBDBasePlayer* TargetPlayer);
		bool STATIC_IsThePig(class ADBDBasePlayer* TargetPlayer);
		bool STATIC_IsTheOni(class ADBDBasePlayer* TargetPlayer);
		bool STATIC_IsTheNurse(class ADBDBasePlayer* TargetPlayer);
		bool STATIC_IsTheNightmare(class ADBDBasePlayer* TargetPlayer);
		bool STATIC_IsTheLegion(class ADBDBasePlayer* TargetPlayer);
		bool STATIC_IsTheHuntress(class ADBDBasePlayer* TargetPlayer);
		bool STATIC_IsTheHillBilly(class ADBDBasePlayer* TargetPlayer);
		bool STATIC_IsTheHag(class ADBDBasePlayer* TargetPlayer);
		bool STATIC_IsTheGhost(class ADBDBasePlayer* TargetPlayer);
		bool STATIC_IsTheExecutioner(class ADBDBasePlayer* TargetPlayer);
		bool STATIC_IsTheDoctor(class ADBDBasePlayer* TargetPlayer);
		bool STATIC_IsTheDemogorgon(class ADBDBasePlayer* TargetPlayer);
		bool STATIC_IsTheClown(class ADBDBasePlayer* TargetPlayer);
		bool STATIC_IsTheCannibal(class ADBDBasePlayer* TargetPlayer);
		bool STATIC_IsTheBlight(class ADBDBasePlayer* TargetPlayer);
		bool STATIC_IsSteveHarrington(class ADBDBasePlayer* TargetPlayer);
		bool STATIC_IsSlasherLocallyObserved(class UObject* WorldContextObject);
		bool STATIC_IsQuentinSmith(class ADBDBasePlayer* TargetPlayer);
		bool STATIC_IsPlague(class ADBDBasePlayer* TargetPlayer);
		bool STATIC_IsNeaKarlsson(class ADBDBasePlayer* TargetPlayer);
		bool STATIC_IsNancyWheeler(class ADBDBasePlayer* TargetPlayer);
		bool STATIC_IsMegThomas(class ADBDBasePlayer* TargetPlayer);
		bool STATIC_IsLaurieStrode(class ADBDBasePlayer* TargetPlayer);
		bool STATIC_IsKateDenson(class ADBDBasePlayer* TargetPlayer);
		bool STATIC_IsJeffJohansen(class ADBDBasePlayer* TargetPlayer);
		bool STATIC_IsJaneRomero(class ADBDBasePlayer* TargetPlayer);
		bool STATIC_IsJakePark(class ADBDBasePlayer* TargetPlayer);
		bool STATIC_IsInDreamworld(class ADBDPlayer* Player);
		bool STATIC_IsFengMin(class ADBDBasePlayer* TargetPlayer);
		bool STATIC_IsDwightFairfield(class ADBDBasePlayer* TargetPlayer);
		bool STATIC_IsDavidTapp(class ADBDBasePlayer* TargetPlayer);
		bool STATIC_IsDavidKing(class ADBDBasePlayer* TargetPlayer);
		bool STATIC_IsClaudetteMorel(class ADBDBasePlayer* TargetPlayer);
		bool STATIC_IsAshleyWilliams(class ADBDBasePlayer* TargetPlayer);
		bool STATIC_IsAdamFrancis(class ADBDBasePlayer* TargetPlayer);
		bool STATIC_IsAceVisconti(class ADBDBasePlayer* TargetPlayer);
		EPlayerRole STATIC_GetLocallyObservedPlayerRole(class UObject* WorldContextObject);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDCheatValidatorSubsystem
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UDBDCheatValidatorSubsystem : public UEngineSubsystem
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDClientSyncer
	 * Size -> 0x01F8 (FullSize[0x0428] - InheritedSize[0x0230])
	 */
	class ADBDClientSyncer : public AActor
	{
	public:
		TArray<struct FSpawnInfo>                                  _actorsToSpawnLocally;                                   // 0x0230(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		TArray<struct FSpawnInfo>                                  _currentQueue;                                           // 0x0240(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_IPSB[0x8];                                   // 0x0250(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UPaperTileMap*                                       _tileMap;                                                // 0x0258(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_QP15[0x1C8];                                 // 0x0260(0x01C8) MISSED OFFSET (PADDING)

	public:
		void Multicast_SyncSeed(int32_t Seed, class UPaperTileMap* TileMap, int32_t GenerationPlayerCount, const class FString& PremadeMap);
		void Multicast_SyncFinalLocallySpawnCount(int32_t numLocal);
		void Multicast_SyncActorToSpawnLocally(TArray<struct FSpawnInfo> spawnInfos, int32_t startIndex);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDClipRegionComponent
	 * Size -> 0x0018 (FullSize[0x0230] - InheritedSize[0x0218])
	 */
	class UDBDClipRegionComponent : public UDBDLocatorComponent
	{
	public:
		TArray<struct FAffectedMaterialAndVariant>                 AffectedMaterialsAndVariants;                            // 0x0218(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_LUH0[0x8];                                   // 0x0228(0x0008) MISSED OFFSET (PADDING)

	public:
		void NotifyShouldClipComponent(class UMeshComponent* InMeshComponent);
		float ClipDistance(class UMeshComponent* InMeshComponent);
		void ApplyClipToDynamicMaterial(class UMaterialInstanceDynamic* dynamicInstanceToClip, int32_t InRegionID);
		void ApplyClip(class UMaterialInstanceDynamic* InMaterial2clip, int32_t InRegionID);
		void STATIC_ApplyArrayOfClipsToDynamicMaterial(TArray<class UDBDClipRegionComponent*> InRegions, class UMaterialInstanceDynamic* dynamicInstanceToClip);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ColorBlindFunctionLibrary
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UColorBlindFunctionLibrary : public UBlueprintFunctionLibrary
	{
	public:
		void STATIC_CallOnColorBlindSettingsChange(class AActor* callingActor);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ColorBlindSettingsListenerInterface
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UColorBlindSettingsListenerInterface : public UInterface
	{
	public:
		void OnColorBlindSettingsChange(EColorVisionDeficiency ColorBlindMode, int32_t colorBlindIntensity);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDConsoleCommandUtilities
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UDBDConsoleCommandUtilities : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDCoreUMGDesignTunables
	 * Size -> 0x0060 (FullSize[0x0090] - InheritedSize[0x0030])
	 */
	class UDBDCoreUMGDesignTunables : public UObject
	{
	public:
		unsigned char                                              CoreHudRootWidgetClass[0x30];                            // 0x0030(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              CorePlayerControllerClass[0x30];                         // 0x0060(0x0030) UNKNOWN PROPERTY: SoftClassProperty

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDCurrencyConversionTunables
	 * Size -> 0x0050 (FullSize[0x0088] - InheritedSize[0x0038])
	 */
	class UDBDCurrencyConversionTunables : public UDataAsset
	{
	public:
		TMap<ECurrencyType, struct FCurrencyConversion>            Currencies;                                              // 0x0038(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDCustomizationTool
	 * Size -> 0x0E60 (FullSize[0x1090] - InheritedSize[0x0230])
	 */
	class ADBDCustomizationTool : public AActor
	{
	public:
		unsigned char                                              OverallLightingClass[0x30];                              // 0x0230(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		struct FDBDCustomizationToolData                           CustomizationData;                                       // 0x0260(0x0E18) Edit, Protected, NativeAccessSpecifierProtected
		TArray<class AActor*>                                      _spawnedActors;                                          // 0x1078(0x0010) ZeroConstructor, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_U0JQ[0x8];                                   // 0x1088(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.RitualEvaluatorBase
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class URitualEvaluatorBase : public UObject
	{
	public:
		bool EvaluateEvent(const struct FRitualEvent& RitualEvent);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDDangerPredictionComponent
	 * Size -> 0x0010 (FullSize[0x00C8] - InheritedSize[0x00B8])
	 */
	class UDBDDangerPredictionComponent : public UActorComponent
	{
	public:
		float                                                      RelevantHorizontalDistance;                              // 0x00B8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      RelevantVerticalDistance;                                // 0x00BC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		EPlayerRole                                                RelevantRole;                                            // 0x00C0(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_SPVK[0x7];                                   // 0x00C1(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDDateTimeProvider
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UDBDDateTimeProvider : public UDateTimeProvider
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDDebugCameraController
	 * Size -> 0x0000 (FullSize[0x06A0] - InheritedSize[0x06A0])
	 */
	class ADBDDebugCameraController : public ADebugCameraController
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDGameMode
	 * Size -> 0x0158 (FullSize[0x04D0] - InheritedSize[0x0378])
	 */
	class ADBDGameMode : public ADBDBaseMatchGameMode
	{
	public:
		unsigned char                                              UnknownData_4VGV[0x20];                                  // 0x0378(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnPlayersLoadoutsCreated;                                // 0x0398(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected
		class UClass*                                              _killerPlayerControllerClass;                            // 0x03A8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UClass*                                              _survivorPlayerControllerClass;                          // 0x03B0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<class APlayerStart*>                                _initialPlayerStarts;                                    // 0x03B8(0x0010) ZeroConstructor, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_PQOK[0x34];                                  // 0x03C8(0x0034) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    KillerCreationPositionOrder;                             // 0x03FC(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_JUIA[0xD0];                                  // 0x0400(0x00D0) MISSED OFFSET (PADDING)

	public:
		void SetPlayerCount(int32_t playerAmount);
		void SetEscapeOpened(bool Val);
		void RegisterOnPlayerStateChanged(class APlayerState* PlayerState);
		void OnPlayerGameStateChanged(class ADBDPlayerState* PlayerState, EGameState playerGameState);
		void LevelLoaded(const class FString& LevelName);
		bool IsEscapeOpen();
		void InitializeEscapeRequirements();
		void HostGame();
		void DBD_BlockCamperEscape(bool shouldBlock);
		bool AreLoadoutsCreated();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDDebugGameMode
	 * Size -> 0x00D8 (FullSize[0x05A8] - InheritedSize[0x04D0])
	 */
	class ADBDDebugGameMode : public ADBDGameMode
	{
	public:
		unsigned char                                              UnknownData_B11E[0x8];                                   // 0x04D0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class ADBDPlayerController*, int32_t>                 LoadoutIndex;                                            // 0x04D8(0x0050) NativeAccessSpecifierPrivate
		unsigned char                                              PlayersWithItems[0x50];                                  // 0x0528(0x0050) UNKNOWN PROPERTY: SetProperty
		TArray<struct FCamperLoadout>                              CamperPawnOverrides;                                     // 0x0578(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPrivate
		TArray<struct FSlasherLoadout>                             SlasherPawnOverrides;                                    // 0x0588(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPrivate
		TArray<struct FDebugQuestModelExtArchiveObjective>         _questObjectives;                                        // 0x0598(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDDebugInputComponent
	 * Size -> 0x0020 (FullSize[0x00D8] - InheritedSize[0x00B8])
	 */
	class UDBDDebugInputComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_GERS[0x20];                                  // 0x00B8(0x0020) MISSED OFFSET (PADDING)

	public:
		void DBD_ItsAlive(bool aliveEnabled);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDDecalComponent
	 * Size -> 0x00C8 (FullSize[0x0320] - InheritedSize[0x0258])
	 */
	class UDBDDecalComponent : public UDecalComponent
	{
	public:
		TArray<class UStaticMeshComponent*>                        staticMeshDecals;                                        // 0x0258(0x0010) ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic
		TMap<class UStaticMeshComponent*, class UGlassStaticMesh*> staticMeshGlass;                                         // 0x0268(0x0050) ExportObject, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic
		TArray<class UMaterialInstanceDynamic*>                    materialInstances;                                       // 0x02B8(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SCNP[0x48];                                  // 0x02C8(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UDecalCollection*                                    _decalCollection;                                        // 0x0310(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_9J8F[0x8];                                   // 0x0318(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDDesignTunables
	 * Size -> 0x0208 (FullSize[0x0238] - InheritedSize[0x0030])
	 */
	class UDBDDesignTunables : public UObject
	{
	public:
		int8_t                                                     EntityDispleasedKills;                                   // 0x0030(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int8_t                                                     BrutalKillerKills;                                       // 0x0031(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int8_t                                                     RuthlessKillerKills;                                     // 0x0032(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int8_t                                                     MercilessKillerKills;                                    // 0x0033(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WinStreakThresholdLarge;                                 // 0x0034(0x0004) Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WinStreakThresholdSmall;                                 // 0x0038(0x0004) Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxFearTokens;                                           // 0x003C(0x0004) Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    QuantityOfItemsToBuyBeforeFreeBloodwebRefresh;           // 0x0040(0x0004) Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7LPR[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FPerkLevelDefinition>                        PerkLevelDefinitions;                                    // 0x0048(0x0010) Edit, BlueprintVisible, ZeroConstructor, Config, NativeAccessSpecifierPublic
		unsigned char                                              MetaModifiers[0x50];                                     // 0x0058(0x0050) UNKNOWN PROPERTY: SetProperty
		unsigned char                                              RangedSurvivorAuraPerceptionModifiers[0x50];             // 0x00A8(0x0050) UNKNOWN PROPERTY: SetProperty
		unsigned char                                              SurvivorRevelatoryAuraPerceptionModifiers[0x50];         // 0x00F8(0x0050) UNKNOWN PROPERTY: SetProperty
		unsigned char                                              DisruptableAuraReadingFlags[0x50];                       // 0x0148(0x0050) UNKNOWN PROPERTY: SetProperty
		unsigned char                                              TextDesignTunableClass[0x30];                            // 0x0198(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		class UDBDTextDesignTunables*                              TextTunables;                                            // 0x01C8(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FGameEventForwarderInfo>                     GameEventForwarderInfos;                                 // 0x01D0(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              CoreUMGDesignTunableClass[0x30];                         // 0x01E0(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		class UDBDCoreUMGDesignTunables*                           CoreUMGDesignTunables;                                   // 0x0210(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       _overrideDefaultLobby;                                   // 0x0218(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_565T[0x3];                                   // 0x0219(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                _lobbyOverrideName;                                      // 0x021C(0x000C) Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<struct FGameplayTag>                                _conspicuousActionEvents;                                // 0x0228(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate

	public:
		float GetTunableValue(const class FName& ID, bool warnIfRowMissing);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDTextDesignTunables
	 * Size -> 0x00D8 (FullSize[0x0108] - InheritedSize[0x0030])
	 */
	class UDBDTextDesignTunables : public UObject
	{
	public:
		class FText                                                LegalTextTitle;                                          // 0x0030(0x0018) Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic
		class FText                                                LegalText;                                               // 0x0048(0x0018) Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic
		class FText                                                ConsentTextTitle;                                        // 0x0060(0x0018) Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic
		class FText                                                ConsentText;                                             // 0x0078(0x0018) Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic
		class FText                                                LegalTextSIEA;                                           // 0x0090(0x0018) Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic
		class FText                                                LegalTextSIEE;                                           // 0x00A8(0x0018) Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic
		class FText                                                SystemMessage_ChatDisconnected;                          // 0x00C0(0x0018) Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic
		class FText                                                SystemMessage_ChatReturnedToLobby;                       // 0x00D8(0x0018) Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic
		class FText                                                SystemMessage_ChatMatchServerClosed;                     // 0x00F0(0x0018) Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDDiceRoller
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UDBDDiceRoller : public UBlueprintFunctionLibrary
	{
	public:
		bool STATIC_GetRollResultByTunableValue(class AActor* RollingActor, const class FName& tunableValueName, float MultiplicativeModifier, float AdditiveModifier);
		bool STATIC_GetRollResultByDiceRollType(class ADBDPlayer* RollingPlayer, EDiceRollType DiceRollType);
		float STATIC_GetInteractionRollSuccessPercentageByDiceRollType(class UInteractionDefinition* Interaction, class ADBDPlayer* RollingPlayer, EDiceRollType DiceRollType);
		bool STATIC_CalculateTickedRollResult(class AActor* RollingActor, float BaseProbability, float ticks, float MultiplicativeModifier, float AdditiveModifier);
		bool STATIC_CalculateRollResult(class AActor* RollingActor, float BaseProbability, float MultiplicativeModifier, float AdditiveModifier);
		bool STATIC_CalculateOverTimeRollResult(class AActor* RollingActor, float BaseProbability, float DeltaTime, float ExpectedTime, float MultiplicativeModifier, float AdditiveModifier);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDEasyAntiCheat
	 * Size -> 0x0028 (FullSize[0x0058] - InheritedSize[0x0030])
	 */
	class UDBDEasyAntiCheat : public UObject
	{
	public:
		unsigned char                                              UnknownData_YT5G[0x18];                                  // 0x0030(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UDBDGameInstance*                                    _gameInstance;                                           // 0x0048(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_KGMT[0x2];                                   // 0x0050(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       _connectedToServer;                                      // 0x0052(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_WSYG[0x5];                                   // 0x0053(0x0005) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDEasyAntiCheatEnable
	 * Size -> 0x0090 (FullSize[0x00E8] - InheritedSize[0x0058])
	 */
	class UDBDEasyAntiCheatEnable : public UDBDEasyAntiCheat
	{
	public:
		unsigned char                                              UnknownData_1UYO[0x90];                                  // 0x0058(0x0090) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDEasyAntiCheatLinux
	 * Size -> 0x0000 (FullSize[0x00E8] - InheritedSize[0x00E8])
	 */
	class UDBDEasyAntiCheatLinux : public UDBDEasyAntiCheatEnable
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDEasyAntiCheatWindows
	 * Size -> 0x0000 (FullSize[0x00E8] - InheritedSize[0x00E8])
	 */
	class UDBDEasyAntiCheatWindows : public UDBDEasyAntiCheatEnable
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDEngineUtils
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UDBDEngineUtils : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDGame_Lobby
	 * Size -> 0x0080 (FullSize[0x03E0] - InheritedSize[0x0360])
	 */
	class ADBDGame_Lobby : public ADBDBaseGameMode
	{
	public:
		unsigned char                                              UnknownData_5CBL[0x18];                                  // 0x0360(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UIdentityValidation*                                 _identityValidation;                                     // 0x0378(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_KNC6[0x60];                                  // 0x0380(0x0060) MISSED OFFSET (PADDING)

	public:
		void DBD_RemoveBotByIndex(int32_t botIndex);
		void DBD_FillLobbyWithBotsByName(const class FString& selectedKiller, int32_t Rank);
		void DBD_FillLobby();
		void DBD_AddBotToLobbyNoLoadoutByName(const class FString& SelectedCharacter);
		void DBD_AddBotToLobbyNoLoadout(int32_t SelectedCharacter);
		void DBD_AddBotToLobbyByName(const class FString& SelectedCharacter, const class FString& Item, const class FString& addon1, const class FString& addon2, const class FString& Offering, const class FString& perk1, const class FString& perk2, const class FString& perk3, const class FString& perk4, int32_t Rank);
		void DBD_AddBotToLobby(int32_t SelectedCharacter, const class FString& Item, const class FString& addon1, const class FString& addon2, const class FString& Offering, const class FString& perk1, const class FString& perk2, const class FString& perk3, const class FString& perk4, int32_t Rank);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDGame_Menu
	 * Size -> 0x0030 (FullSize[0x0390] - InheritedSize[0x0360])
	 */
	class ADBDGame_Menu : public ADBDBaseGameMode
	{
	public:
		bool                                                       StartWithSlasher;                                        // 0x0360(0x0001) Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AZY9[0x7];                                   // 0x0361(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAtlantaPartyFlowHandler*                            _partyFlowHandler;                                       // 0x0368(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_K4PX[0x8];                                   // 0x0370(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ALevelSequenceActor*                                 _sequenceFadeActor;                                      // 0x0378(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class ALevelSequenceActor*                                 _sequenceIntroActor;                                     // 0x0380(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class ALevelSequenceActor*                                 _sequenceLoopActor;                                      // 0x0388(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDGame_Start
	 * Size -> 0x00A8 (FullSize[0x0408] - InheritedSize[0x0360])
	 */
	class ADBDGame_Start : public ADBDBaseGameMode
	{
	public:
		unsigned char                                              UnknownData_I8GH[0x60];                                  // 0x0360(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              _startupInitializer[0x10];                               // 0x03C0(0x0010) UNKNOWN PROPERTY: InterfaceProperty
		unsigned char                                              UnknownData_ZMHL[0x38];                                  // 0x03D0(0x0038) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDGameEngine
	 * Size -> 0x0008 (FullSize[0x0EC0] - InheritedSize[0x0EB8])
	 */
	class UDBDGameEngine : public UGameEngine
	{
	public:
		unsigned char                                              UnknownData_E7T9[0x8];                                   // 0x0EB8(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDGameEventForwarderComponent
	 * Size -> 0x0018 (FullSize[0x00D0] - InheritedSize[0x00B8])
	 */
	class UDBDGameEventForwarderComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_X1HW[0x18];                                  // 0x00B8(0x0018) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDGameEventUtilities
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UDBDGameEventUtilities : public UBlueprintFunctionLibrary
	{
	public:
		void STATIC_RemotelyDispatchGameEvent(class UObject* WorldContextObject, const struct FGameplayTag& gameEventType, class ADBDPlayer* Instigator, class AActor* Target, float CustomValue, class UObject* CustomObjectParameter, int32_t CustomIntValue);
		void STATIC_LocallyDispatchGameEvent(class UObject* WorldContextObject, const struct FGameplayTag& gameEventType, class ADBDPlayer* Instigator, class AActor* Target, float CustomValue, class UObject* CustomObjectParameter, int32_t CustomIntValue);
		void STATIC_DispatcherFireGameEvent(class UObject* WorldContextObject, const struct FGameplayTag& gameEventType, bool broadcastOverNetwork, class ADBDPlayer* Instigator, class AActor* Target, float CustomValue, class UObject* CustomObjectParameter, int32_t CustomIntValue);
		void STATIC_Authority_DispatcherFireGameEvent(class UObject* WorldContextObject, const struct FGameplayTag& gameEventType, bool broadcastOverNetwork, class ADBDPlayer* Instigator, class AActor* Target, float CustomValue, class UObject* CustomObjectParameter, int32_t CustomIntValue);
		void STATIC_Authority_AccumulateOngoingGameEvent(class UObject* WorldContextObject, const struct FGameplayTag& gameEventType, class ADBDPlayer* Instigator, class AActor* Target, float CustomValue, float OngoingWaitTime, class UObject* CustomObjectParameter, int32_t CustomIntValue);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDGameFlowUtilities
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UDBDGameFlowUtilities : public UBlueprintFunctionLibrary
	{
	public:
		void STATIC_TriggerWorldFlowEvent(class UObject* WorldContextObject, EWorldFlowEvent worldFlowEvent);
		void STATIC_TriggerUIFlowEvent(class UObject* WorldContextObject, EUIFlowEvent uiFlowEvent);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDGameInstance
	 * Size -> 0x0820 (FullSize[0x0A20] - InheritedSize[0x0200])
	 */
	class UDBDGameInstance : public UGameInstance
	{
	public:
		unsigned char                                              UnknownData_06GR[0x48];                                  // 0x0200(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              DesignTunableClass;                                      // 0x0248(0x0008) Edit, BlueprintVisible, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDBDDesignTunables*                                  DesignTunables;                                          // 0x0250(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              RegionClass;                                             // 0x0258(0x0008) Edit, BlueprintVisible, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              ShopManagerClass;                                        // 0x0260(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              OfferingSequenceManagerClass;                            // 0x0268(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              FriendManagerClass;                                      // 0x0270(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDataAsset*                                          AchievementsDataAsset;                                   // 0x0278(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGameEventTracker*                                   GameEventTracker;                                        // 0x0280(0x0008) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDBDKeyDisplayInfo*                                  KeyDisplayInfo;                                          // 0x0288(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       LeaveGameRequested;                                      // 0x0290(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RMDZ[0x7];                                   // 0x0291(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UPlayerProfileDAL*                                   PlayerProfileDAL;                                        // 0x0298(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GenerationSeed;                                          // 0x02A0(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AFF6[0x4];                                   // 0x02A4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              PaperTileAssetName;                                      // 0x02A8(0x0010) ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GenerationPlayerCount;                                   // 0x02B8(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U55N[0x4];                                   // 0x02BC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              PremadeMap;                                              // 0x02C0(0x0010) ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FForceSpawnTileData>                         ForceSpawnTileData;                                      // 0x02D0(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6KOJ[0x20];                                  // 0x02E0(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AOfferingSequenceManager*                            OfferingSequence;                                        // 0x0300(0x0008) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FParadiseData>                               ParadiseData;                                            // 0x0308(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       PlayerProfileLoadFailed;                                 // 0x0318(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ECZX[0x7];                                   // 0x0319(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UNewsContentManager*                                 NewsContentManager;                                      // 0x0320(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UContentScheduleManager*                             ContentScheduleManager;                                  // 0x0328(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCDNPatchManager*                                    CDNPatchManager;                                         // 0x0330(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCharacterProgressionManager*                        CharacterProgressionManager;                             // 0x0338(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCharacterXPManager*                                 CharacterXPManager;                                      // 0x0340(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAtlantaRitualsManager*                              AtlRitualsManager;                                       // 0x0348(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              AuthOrEACErrorAdditionalInfo;                            // 0x0350(0x0010) ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       HasServerLeftMatch;                                      // 0x0360(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       HasWrittenGameEndStats;                                  // 0x0361(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LR60[0x6];                                   // 0x0362(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UFearMarketManager*                                  FearMarketManager;                                       // 0x0368(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class Ushopmanager*                                        shopmanager;                                             // 0x0370(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFriendManager*                                      FriendManager;                                           // 0x0378(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWalletHandler*                                      WalletHandler;                                           // 0x0380(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                TutorialRequesterName;                                   // 0x0388(0x000C) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MPHK[0x4];                                   // 0x0394(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UControllerPairingManager*                           ControllerPairingManager;                                // 0x0398(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4NJL[0xE8];                                  // 0x03A0(0x00E8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UChunkingManager*                                    ChunkingManager;                                         // 0x0488(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnPlayerDisconnect;                                      // 0x0490(0x0010) Edit, ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0ZCZ[0x128];                                 // 0x04A0(0x0128) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAssetLibraryManager*                                _assetLibraryManager;                                    // 0x05C8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              _bloodwebManagerClass[0x30];                             // 0x05D0(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		class UOnlineTransactionServiceComponent*                  _onlineTransactionService;                               // 0x0600(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              _sharedAuthenticationManagerClass[0x30];                 // 0x0608(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              UnknownData_R4QI[0x130];                                 // 0x0638(0x0130) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UDBDPersistentData*                                  _persistentData;                                         // 0x0768(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UPlayerDataStorageFacade*                            _playerDataFacade;                                       // 0x0770(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class URankManager*                                        _rankManager;                                            // 0x0778(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UDBDPlayerLevelManager*                              _playerLevelManager;                                     // 0x0780(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UPlayerNameRegistration*                             _playerNameRegistration;                                 // 0x0788(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class Uspecialeventmanager*                                _specialEventManager;                                    // 0x0790(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UBonusPointEventsManager*                            _bonusPointEventsManager;                                // 0x0798(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UDBDTimeTravelManager*                               _timeTravelManager;                                      // 0x07A0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UToastManager*                                       _toastManager;                                           // 0x07A8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UDBDSocialNotificationFactory*                       _socialNotificationFactory;                              // 0x07B0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UDBDPartyFacade*                                     _partyFacade;                                            // 0x07B8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UPenaltyTracker*                                     _penaltyTracker;                                         // 0x07C0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_25WI[0x28];                                  // 0x07C8(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ULightingHelper*                                     _ligthingHelper;                                         // 0x07F0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UOfferingHandler*                                    _offeringHandler;                                        // 0x07F8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_H0OW[0x8];                                   // 0x0800(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UActorKnowledgeCollection*>                   _actorKnowledgeCollections;                              // 0x0808(0x0010) ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
		class UMapActorDB*                                         _mapActorDB;                                             // 0x0818(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<class UInteractionProficiency*>                     _interactionProficiencies;                               // 0x0820(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		class UDBDHud*                                             _theHud;                                                 // 0x0830(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_XHCT[0x28];                                  // 0x0838(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBloodwebManager*                                    _bloodwebManager;                                        // 0x0860(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class USharedAuthenticationComponent*                      _sharedAuthenticationManager;                            // 0x0868(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UPopupSequencer*                                     _popupSequencer;                                         // 0x0870(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UPopupFactory*                                       _popupFactory;                                           // 0x0878(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UDBDAuthentication*                                  _auth;                                                   // 0x0880(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UDBDEasyAntiCheat*                                   _eac;                                                    // 0x0888(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_WE0V[0x98];                                  // 0x0890(0x0098) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<TWeakObjectPtr<class UObject>>                      _execObjects;                                            // 0x0928(0x0010) ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate
		bool                                                       _networkFailureDetected;                                 // 0x0938(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _networkConnectionMonitoringOnly;                        // 0x0939(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _achievementStatsUploadEnabled;                          // 0x093A(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _isDisconnected;                                         // 0x093B(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _isGamepadReconnected;                                   // 0x093C(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _isProfileOffline;                                       // 0x093D(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _isAppSuspended;                                         // 0x093E(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _isAppResumed;                                           // 0x093F(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _isInvitationRejected;                                   // 0x0940(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _isAdditionalContentInstalled;                           // 0x0941(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _isCloudInventoryInitialized;                            // 0x0942(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_6U1Q[0x2D];                                  // 0x0943(0x002D) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UOfferingEffectCollection*                           _resultOfferingAndPerkEffects;                           // 0x0970(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UInventoryHandler*                                   _inventoryHandler;                                       // 0x0978(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UCinematicManager*                                   _cinematicManager;                                       // 0x0980(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class USoftBanManager*                                     _softBanManager;                                         // 0x0988(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UConsentManager*                                     _consentManager;                                         // 0x0990(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UOnlineSystemHandler*                                _onlineSystemHandler;                                    // 0x0998(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class URegionFinder*                                       _regionFinder;                                           // 0x09A0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UDecalSpawnerCollection*                             _decalSpawnerCollection;                                 // 0x09A8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UPrimitiveCollection*                                _characterClippingPrimitiveCollection;                   // 0x09B0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UAtlantaTooltipManager*                              _atlantaTooltipManager;                                  // 0x09B8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		uint32_t                                                   LastProviderErrorCode;                                   // 0x09C0(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		EDisconnectErrors                                          _disconnectError;                                        // 0x09C4(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_LZMX[0x3];                                   // 0x09C5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UDateTimerUpdater*                                   _dateTimerUpdater;                                       // 0x09C8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_TCVP[0x50];                                  // 0x09D0(0x0050) MISSED OFFSET (PADDING)

	public:
		void StartOfferingSequence();
		void SimulateOfferingSequence(TArray<class FName> offerings, bool playSequence);
		void RemoveActorKnowledgeCollection(class UActorKnowledgeCollection* Collection);
		void OnTimeTravelComplete(bool success, const class FString& date);
		bool IsActorKnown(class ADBDPlayer* knowledgePossessor, class AActor* possiblyKnownActor);
		bool HasOfferingOfType(EOfferingEffectType Type, int32_t playerID, const class FName& Tag);
		bool HasOfferingByType(EOfferingEffectType Type);
		void GotoSplashScreen(bool showDefaultDialogueOnSplashScreen);
		class UDBDTimeUtilities* GetTimeUtils();
		class Uspecialeventmanager* GetSpecialEventManager();
		class USoftBanManager* GetSoftBanManager();
		class URankManager* GetRankManager();
		class UPlayerNameRegistration* GetPlayerNameRegistration();
		class UDBDPlayerLevelManager* GetPlayerLevelManager();
		int32_t GetMaxSurvivorCount();
		class UMapActorDB* GetMapActorDB();
		class APlayerController* GetLocalPlayerController();
		class ULocalPlayer* GetLocalPlayer();
		class ADBDPlayer* GetLocallyControlledCharacter();
		class ULocalEventManager* GetLocalEventManager();
		class ULightingInterpolator* GetLightInterpolator();
		class ULightingHelper* GetLightingHelper();
		class ABaseSky* GetLevelLighting();
		class UInventoryHandler* GetInventoryHandler();
		class UDedicatedServerManager* GetDedicatedServerManager();
		class UDecalSpawnerCollection* GetDecalSpawnerCollection();
		int32_t GetDeadOrDisconnectedCampersCount(class ADBDPlayerState* exception);
		class UConsentManager* GetConsentManager();
		class UCinematicManager* GetCinematicManager();
		class FName GetCharacterDefaultItem(int32_t inCharacterIndex);
		class UPrimitiveCollection* GetCharacterClippingPrimitiveCollection();
		class UBonusPointEventsManager* GetBonusPointEventsManager();
		void STATIC_ForceCloseGame();
		void EndLoadingScreen(class UWorld* loadedWorld);
		void DBD_UpdateSteamInventory();
		void DBD_ToggleLightingLoaded();
		void DBD_TestTickedDiceRoll(float BaseProbability, float ticks, float MultiplicativeModifier, float AdditiveModifier);
		void DBD_TestSaveFile(const class FString& Name);
		void DBD_TestRegion();
		void DBD_TestDiceRoll(float BaseProbability, float MultiplicativeModifier, float AdditiveModifier);
		void DBD_SetStatsUploadEnabled(bool Enabled);
		void DBD_SetFearMarketDate(const class FString& dateString);
		void DBD_ResetSaveData();
		void DBD_ResetCurrentAchievementStats(bool andUpload, bool andUpdateData);
		void DBD_ResetCurrentAchievementStat(const class FName& StatName, bool andUpload);
		void DBD_PrintAudioConfig();
		void DBD_PIXEndCapture();
		void DBD_PIXBeginCapture();
		void DBD_GetRegion();
		void DBD_ForceSave();
		void DBD_ForceLoad();
		void DBD_DumpSessions();
		void DBD_DisplayCurrentAchievementStat(const class FName& StatName);
		void DBD_DestroySteamInventory();
		void DBD_DeleteLocalSaveFile();
		void DBD_CheckForNewContent(const class FString& debugGameVersion, bool forceDisplay);
		void DBD_ChangeSteamOverlayPosition(int32_t position, int32_t VerticalOffset, int32_t horizontalOffset);
		void DBD_ApplyNoMist();
		void DBD_ApplyMist(float fogModifier);
		void BeginLoadingScreen(const class FString& MapName);
		void Authority_SimulatePerks(TArray<class FName> Perks, int32_t Level);
		void AddActorKnowledgeCollection(class UActorKnowledgeCollection* Collection);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDGameSession
	 * Size -> 0x0060 (FullSize[0x02B0] - InheritedSize[0x0250])
	 */
	class ADBDGameSession : public AGameSession
	{
	public:
		unsigned char                                              UnknownData_AK5G[0x60];                                  // 0x0250(0x0060) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDGameUserSettings
	 * Size -> 0x0310 (FullSize[0x0438] - InheritedSize[0x0128])
	 */
	class UDBDGameUserSettings : public UGameUserSettings
	{
	public:
		TArray<struct FInputActionKeyMapping>                      ActionMappings;                                          // 0x0128(0x0010) ZeroConstructor, Config, NativeAccessSpecifierPublic
		TArray<struct FInputAxisKeyMapping>                        AxisMappings;                                            // 0x0138(0x0010) ZeroConstructor, Config, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnSetCustomizedHudsTimestamp;                            // 0x0148(0x0010) ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E4KL[0x18];                                  // 0x0158(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              DeviceLoginTokenID;                                      // 0x0170(0x0010) ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    ScalabilityLevel;                                        // 0x0180(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       AutoScalabilitySet;                                      // 0x0184(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       AutoAdjust;                                              // 0x0185(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_AFPX[0x2];                                   // 0x0186(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ScreenResolution;                                        // 0x0188(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       FullScreen;                                              // 0x018C(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       HUDConstrainedAspectRatio;                               // 0x018D(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_4PJU[0x2];                                   // 0x018E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MenuScaleFactor;                                         // 0x0190(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    HudScaleFactor;                                          // 0x0194(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    SkillCheckScaleFactor;                                   // 0x0198(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       LargeText;                                               // 0x019C(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       BloodwebInteractionBehaviour;                            // 0x019D(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       TerrorRadiusVisualFeedback;                              // 0x019E(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       HUDPlayerNamesVisibility;                                // 0x019F(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       HUDKillerHookCountVisibility;                            // 0x01A0(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       HUDScoreEventsVisibility;                                // 0x01A1(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       LegacyPrestigePortraits;                                 // 0x01A2(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       ChallengeProgression;                                    // 0x01A3(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       ChallengeCompletion;                                     // 0x01A4(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_O0G9[0x3];                                   // 0x01A5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint32_t                                                   FPSLimit;                                                // 0x01A8(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    MainVolume;                                              // 0x01AC(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       MainVolumeOn;                                            // 0x01B0(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_ZBO3[0x3];                                   // 0x01B1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MenuMusicVolume;                                         // 0x01B4(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       MenuMusicVolumeOn;                                       // 0x01B8(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       UseHeadphones;                                           // 0x01B9(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       MuteOnFocusLost;                                         // 0x01BA(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       HapticsVibrationPS5;                                     // 0x01BB(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    KillerCameraSensitivity;                                 // 0x01BC(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    SurvivorCameraSensitivity;                               // 0x01C0(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    KillerMouseSensitivity;                                  // 0x01C4(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    SurvivorMouseSensitivity;                                // 0x01C8(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    KillerControllerSensitivity;                             // 0x01CC(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    SurvivorControllerSensitivity;                           // 0x01D0(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       AimAssist;                                               // 0x01D4(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_LWSJ[0x3];                                   // 0x01D5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ControlType;                                             // 0x01D8(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       InvertY;                                                 // 0x01DC(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       SurvivorInvertY;                                         // 0x01DD(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       KillerToggleInteractions;                                // 0x01DE(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       SurvivorToggleInteractions;                              // 0x01DF(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       SprintToCancel;                                          // 0x01E0(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_DWZH[0x7];                                   // 0x01E1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Language;                                                // 0x01E8(0x0010) ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       LanguageIsDefinedByPlayer;                               // 0x01F8(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_826F[0x3];                                   // 0x01F9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    HighestWeightSeenNews;                                   // 0x01FC(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FSharedAuthenticationTokenInformation               SharedLoginInformation;                                  // 0x0200(0x0030) Config, NativeAccessSpecifierPrivate
		uint32_t                                                   LastPanelContextId;                                      // 0x0230(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       ArchivesAutoPlayVoiceOver;                               // 0x0234(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       ArchivesFullscreenTextVisibility;                        // 0x0235(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       HasAcceptedCrossplayPopup;                               // 0x0236(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       HasAcceptedProgressionSystemInfoPopup;                   // 0x0237(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       HasAcceptedHapticsVibrationPopup;                        // 0x0238(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       HasAcceptedCrossProgressionPopup;                        // 0x0239(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_M68R[0x6];                                   // 0x023A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FBonusTierTooltipVisibility                         BonusTierTooltipVisibility;                              // 0x0240(0x0018) Config, NativeAccessSpecifierPrivate
		bool                                                       UseAtlantaCustomizedHuds;                                // 0x0258(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       UseAtlantaSurvivorQuickTurn;                             // 0x0259(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       UseAtlantaKillerQuickTurn;                               // 0x025A(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_D6PR[0x5];                                   // 0x025B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FAtlantaCustomizedHudSettings>               AtlantaCustomizedHuds;                                   // 0x0260(0x0010) ZeroConstructor, Config, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_R2MP[0x8];                                   // 0x0270(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       ShowPortraitBorder;                                      // 0x0278(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_WXU8[0x7];                                   // 0x0279(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              PartyPrivacyState;                                       // 0x0280(0x0010) ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_N9JC[0xF0];                                  // 0x0290(0x00F0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ColorBlindMode;                                          // 0x0380(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    ColorBlindModeIntensity;                                 // 0x0384(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       BeginnerMode;                                            // 0x0388(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       Subtitles;                                               // 0x0389(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_SPN2[0x2];                                   // 0x038A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    SubtitlesBackgroundOpacity;                              // 0x038C(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_UFDX[0x48];                                  // 0x0390(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    SubtitlesSize;                                           // 0x03D8(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       IsAnonymousMode;                                         // 0x03DC(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       HideYourName;                                            // 0x03DD(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       HideOtherNames;                                          // 0x03DE(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       HiddenMatchmakingDelay;                                  // 0x03DF(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_PH8C[0x58];                                  // 0x03E0(0x0058) MISSED OFFSET (PADDING)

	public:
		bool GetTerrorRadiusVisualFeedback();
		int32_t GetSkillCheckScaleFactor();
		int32_t GetMenuScaleFactor();
		bool GetLegacyPrestigePortraits();
		bool GetLargeText();
		bool GetHUDScoreEventsVisibility();
		int32_t GetHudScaleFactor();
		bool GetHUDPlayerNamesVisibility();
		bool GetHUDKillerHookCountVisibility();
		class UDBDGameUserSettings* STATIC_GetDBDGameUserSettings();
		int32_t GetColorBlindModeIntensity();
		EColorVisionDeficiency GetColorBlindMode();
		bool GetChallengeProgression();
		bool GetChallengeCompletion();
		bool GetBloodwebInteractionBehaviour();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDGameViewportClient
	 * Size -> 0x0038 (FullSize[0x03A8] - InheritedSize[0x0370])
	 */
	class UDBDGameViewportClient : public UGameViewportClient
	{
	public:
		unsigned char                                              UnknownData_EBY7[0x38];                                  // 0x0370(0x0038) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDGenericTeamAgentInterface
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UDBDGenericTeamAgentInterface : public UGenericTeamAgentInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDHud
	 * Size -> 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
	 */
	class UDBDHud : public UObject
	{
	public:
		TMap<class FName, class AStatusView*>                      _statusViews;                                            // 0x0030(0x0050) NativeAccessSpecifierPrivate

	public:
		void RemoveStatusViewOnDestroy(class AActor* Actor);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDInGameHud
	 * Size -> 0x0028 (FullSize[0x0358] - InheritedSize[0x0330])
	 */
	class ADBDInGameHud : public ADBDBaseHud
	{
	public:
		class UFont*                                               _debugFontObj;                                           // 0x0330(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CH7F[0x18];                                  // 0x0338(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCompetenceDebugger*                                 _competenceDebugger;                                     // 0x0350(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDInitPlayerQuery
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UDBDInitPlayerQuery : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDInitPlayerQueryYesNo
	 * Size -> 0x0080 (FullSize[0x00B0] - InheritedSize[0x0030])
	 */
	class UDBDInitPlayerQueryYesNo : public UDBDInitPlayerQuery
	{
	public:
		unsigned char                                              UnknownData_SIHQ[0x80];                                  // 0x0030(0x0080) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDInitPlayerQueryYesNoSizeWifi
	 * Size -> 0x0010 (FullSize[0x00C0] - InheritedSize[0x00B0])
	 */
	class UDBDInitPlayerQueryYesNoSizeWifi : public UDBDInitPlayerQueryYesNo
	{
	public:
		unsigned char                                              UnknownData_P5L9[0x10];                                  // 0x00B0(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDInstancedFoliageComponent
	 * Size -> 0x0068 (FullSize[0x0120] - InheritedSize[0x00B8])
	 */
	class UDBDInstancedFoliageComponent : public UActorComponent
	{
	public:
		int32_t                                                    NextBaseId;                                              // 0x00B8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GOFF[0x4];                                   // 0x00BC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<int32_t, class USceneComponent*>                      InstanceBaseMap;                                         // 0x00C0(0x0050) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditConst, ContainsInstancedReference, NativeAccessSpecifierPublic
		TArray<struct FDBDFoliageInfo>                             Foliage;                                                 // 0x0110(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDKeyDisplayInfo
	 * Size -> 0x0140 (FullSize[0x0170] - InheritedSize[0x0030])
	 */
	class UDBDKeyDisplayInfo : public UObject
	{
	public:
		TMap<class FName, struct FKeyDisplayInfo>                  _keyDisplayInfoMap;                                      // 0x0030(0x0050) NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_72U0[0x50];                                  // 0x0080(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<EInputInteractionType, class FName>                   _interactionTypeToActionMap_Camper;                      // 0x00D0(0x0050) NativeAccessSpecifierPrivate
		TMap<EInputInteractionType, class FName>                   _interactionTypeToActionMap_Slasher;                     // 0x0120(0x0050) NativeAccessSpecifierPrivate

	public:
		bool IsExcludedKey(const struct FKey& Key);
		struct FKeyDisplayInfo GetKeyDisplayInfoForInteractionType(class UPlayerInput* PlayerInput, EPlayerRole PlayerRole, EInputInteractionType interactionType, bool useGamePad);
		struct FKeyDisplayInfo GetKeyDisplayInfo(const struct FKey& Key);
		struct FKey GetFirstKeyForAction(class UPlayerInput* PlayerInput, const class FName& ActionName, bool useGamePad);
		class FName GetActionForInteractionType(EPlayerRole PlayerRole, EInputInteractionType inputInteractionType, bool useGamePad, bool ignoreInteractMash);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDLobbyHud
	 * Size -> 0x0000 (FullSize[0x0330] - InheritedSize[0x0330])
	 */
	class ADBDLobbyHud : public ADBDBaseHud
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDLocalPlayer
	 * Size -> 0x0000 (FullSize[0x0268] - InheritedSize[0x0268])
	 */
	class UDBDLocalPlayer : public ULocalPlayer
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDMapFoliageDensityTunables
	 * Size -> 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
	 */
	class UDBDMapFoliageDensityTunables : public UObject
	{
	public:
		TArray<struct FTypeFoliageToAutomateDensity>               FoliageToAutomateDensity;                                // 0x0030(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDMaterialBlueprintLibrary
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UDBDMaterialBlueprintLibrary : public UBlueprintFunctionLibrary
	{
	public:
		void STATIC_SetVectorParameterValueOnMeshComponent(class UMeshComponent* Mesh, const class FName& ParameterName, const struct FLinearColor& value);
		void STATIC_SetTransformParameterValueOnMeshComponent(class UMeshComponent* Mesh, const class FName& ParameterName, const struct FTransform& value);
		void STATIC_SetTransformParameterValueOnMaterialDynamic(class UMaterialInstanceDynamic* Material, const class FName& ParameterName, const struct FTransform& value);
		void STATIC_SetTransformParameterInverseValueOnMaterialDynamic(class UMaterialInstanceDynamic* Material, const class FName& ParameterName, const struct FTransform& value);
		TArray<class UMaterialInstanceDynamic*> STATIC_CreateDynamicMaterialInstanceForParticleSystem(class UParticleSystemComponent* System);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDMathBlueprintLibrary
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UDBDMathBlueprintLibrary : public UBlueprintFunctionLibrary
	{
	public:
		bool STATIC_VectorIntersect(const struct FVector& OriginA, const struct FVector& ExtentA, const struct FVector& OriginB, const struct FVector& ExtentB);
		struct FVector STATIC_VectorAbsoluteValue(const struct FVector& A);
		TArray<struct FLinearColor> STATIC_TransformToMatrix(const struct FTransform& A);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDHookUtilities
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UDBDHookUtilities : public UBlueprintFunctionLibrary
	{
	public:
		bool STATIC_IsWraithHook(class AMeatHook* targetHook);
		bool STATIC_IsPigHook(class AMeatHook* targetHook);
		bool STATIC_IsNurseHook(class AMeatHook* targetHook);
		bool STATIC_IsLegionHook(class AMeatHook* targetHook);
		bool STATIC_IsHuntressHook(class AMeatHook* targetHook);
		bool STATIC_IsHookOf(class AMeatHook* targetHook, const struct FGameplayTag& hookTag);
		bool STATIC_IsHagHook(class AMeatHook* targetHook);
		bool STATIC_IsFreddyHook(class AMeatHook* targetHook);
		float STATIC_ComputeHookStrugglePercent(class ACamperPlayer* hookedCamper, float hookStruggleThreshold);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDMenuGameState
	 * Size -> 0x0008 (FullSize[0x0870] - InheritedSize[0x0868])
	 */
	class ADBDMenuGameState : public ADBDGameState
	{
	public:
		class UMenuForcedLODHandler*                               _menuForcedLODHandler;                                   // 0x0868(0x0008) Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDMenuPlayer
	 * Size -> 0x00F0 (FullSize[0x0650] - InheritedSize[0x0560])
	 */
	class ADBDMenuPlayer : public ADBDBasePlayer
	{
	public:
		unsigned char                                              UnknownData_9EG9[0x28];                                  // 0x0560(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       RoleSelected;                                            // 0x0588(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsOnline;                                                // 0x0589(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_97LN[0x6];                                   // 0x058A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnItemEquipped;                                          // 0x0590(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_22CE[0x18];                                  // 0x05A0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              DarkMaterial[0x30];                                      // 0x05B8(0x0030) UNKNOWN PROPERTY: SoftObjectProperty
		EItemHandPosition                                          _handPosition;                                           // 0x05E8(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_K56O[0x7];                                   // 0x05E9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USkeletalMeshComponent*                              ItemMesh;                                                // 0x05F0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UMaterialHelper*                                     MaterialHelper;                                          // 0x05F8(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UCustomizedSkeletalMesh*                             _customizedSkeletalMeshComponent;                        // 0x0600(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FName                                                _equippedItemName;                                       // 0x0608(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_3J46[0x28];                                  // 0x0614(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      _blockRotationDuringSpawnAnimationDuration;              // 0x063C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _isLocalPlayerCharacter;                                 // 0x0640(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _isReady;                                                // 0x0641(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_MM73[0xE];                                   // 0x0642(0x000E) MISSED OFFSET (PADDING)

	public:
		void WrappedOnDestroyed(class AActor* DestroyedActor);
		bool ShouldShowSpawnAnimation();
		bool ShouldApplyPositionOffset();
		void RestartInSequence_Internal();
		void OnLocalPlayerSpawned();
		void OnLocalPlayerReadyChanged(bool IsReady);
		void OnIsReadyChanged(bool IsReady);
		void OnGuestPlayerSpawned(class ADBDMenuPlayer* Player);
		void OnGuestPlayerReadyChanged(class ADBDMenuPlayer* Player, bool IsReady);
		void OnGuestPlayerDespawned(class ADBDMenuPlayer* Player);
		void OnCustomizationTransactionCompleted(ECustomizationCategory Category);
		void OnAllPlayersReadyInOnlineLobby();
		bool IsInMenuPlayer();
		bool GetIsReady();
		bool GetIsLocalPlayerCharacter();
		EItemHandPosition GetHandPosition();
		EGameFlowStep GetCurrentMenu();
		class UCharmSpawnerComponent* GetCharmSpawnerComponent();
		float GetBlockRotationAfterSpawningTime();
		void BlockCharacterRotation(bool shouldBlock);
		void BeginDestroySequence_Internal();
		void BeginCreateSequence();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDMenuSilhouette
	 * Size -> 0x0000 (FullSize[0x0230] - InheritedSize[0x0230])
	 */
	class ADBDMenuSilhouette : public AActor
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDMistLocatorComponent
	 * Size -> 0x0008 (FullSize[0x0220] - InheritedSize[0x0218])
	 */
	class UDBDMistLocatorComponent : public UDBDLocatorComponent
	{
	public:
		unsigned char                                              UnknownData_7ATI[0x8];                                   // 0x0218(0x0008) Fix Super Size

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDMistManager
	 * Size -> 0x0008 (FullSize[0x0238] - InheritedSize[0x0230])
	 */
	class ADBDMistManager : public AActor
	{
	public:
		class UDBDAggregateParticleSystemComponent*                _particleSystemComp;                                     // 0x0230(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDNavEvadeLoopComponent
	 * Size -> 0x00A0 (FullSize[0x0158] - InheritedSize[0x00B8])
	 */
	class UDBDNavEvadeLoopComponent : public UActorComponent
	{
	public:
		struct FVector                                             EvadeDoorExtent;                                         // 0x00B8(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EvadeDoorFrontPointOffset;                               // 0x00C4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EvadeDoorSideOffset;                                     // 0x00C8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SideBlockerOffset;                                       // 0x00CC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AutoSnapPointsUpHeight;                                  // 0x00D0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AutoSnapPointsDownHeight;                                // 0x00D4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECollisionChannel                                          AutoSnapCollisionChannel;                                // 0x00D8(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V6MY[0x7];                                   // 0x00D9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              EvadeLoopFilterClass;                                    // 0x00E0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinSafetyLength;                                         // 0x00E8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxSafetyLength;                                         // 0x00EC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAIEvadeLoopSides                                          LimitToSide;                                             // 0x00F0(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       DebugEditMode;                                           // 0x00F1(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       DrawDebugFilter;                                         // 0x00F2(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BORG[0x65];                                  // 0x00F3(0x0065) MISSED OFFSET (PADDING)

	public:
		void OnLevelReadyToPlay();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDNavModifierComponent
	 * Size -> 0x0050 (FullSize[0x01A0] - InheritedSize[0x0150])
	 */
	class UDBDNavModifierComponent : public UNavModifierComponent
	{
	public:
		bool                                                       ForceUseFailsafeExtent;                                  // 0x0150(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KGLC[0x3];                                   // 0x0151(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      UpdateModifierInterval;                                  // 0x0154(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       StartNavigationRelevant;                                 // 0x0158(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       AlwaysTickToCheckTransform;                              // 0x0159(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       RelevantPassiveMode;                                     // 0x015A(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5JIK[0x45];                                  // 0x015B(0x0045) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDNetworkUtilities
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UDBDNetworkUtilities : public UBlueprintFunctionLibrary
	{
	public:
		bool STATIC_IsRunningDedicatedServerFlow();
		bool STATIC_IsOnDedicatedServerNetwork(class UObject* WorldContextObject);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDObserverPlayer
	 * Size -> 0x0040 (FullSize[0x0510] - InheritedSize[0x04D0])
	 */
	class ADBDObserverPlayer : public ACharacter
	{
	public:
		class UDBDPlayerData*                                      _playerData;                                             // 0x04D0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_S3OU[0x38];                                  // 0x04D8(0x0038) MISSED OFFSET (PADDING)

	public:
		void Server_PlayerReady();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDOnlineSessionClient
	 * Size -> 0x0028 (FullSize[0x0228] - InheritedSize[0x0200])
	 */
	class UDBDOnlineSessionClient : public UOnlineSessionClient
	{
	public:
		unsigned char                                              UnknownData_3KJT[0x28];                                  // 0x0200(0x0028) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDOutlineComponent
	 * Size -> 0x00D8 (FullSize[0x0380] - InheritedSize[0x02A8])
	 */
	class UDBDOutlineComponent : public UBatchMeshCommands
	{
	public:
		unsigned char                                              UnknownData_5UX9[0x7];                                   // 0x02A8(0x0007) Fix Super Size
		bool                                                       FadeOutAsClosingIn;                                      // 0x02AF(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsAlwaysVisible;                                         // 0x02B0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UYZM[0x3];                                   // 0x02B1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      minimumOutlineDistance;                                  // 0x02B4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              OutlineName;                                             // 0x02B8(0x0010) Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_GMGV[0x58];                                  // 0x02C8(0x0058) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDBDOutlineRenderStrategySelector                   _renderStrategySelector;                                 // 0x0320(0x0040) Transient, NativeAccessSpecifierPrivate
		class UBatchMeshCommands*                                  _batchMeshCommands;                                      // 0x0360(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_DKIE[0x10];                                  // 0x0368(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBaseOutlineRenderStrategy*                          _renderingStrategy;                                      // 0x0378(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void SetTargetColor(const struct FLinearColor& Color);
		void SetOutlineIntensity(float outlineIntensity);
		void SetMinimumOutlineDistance(float distance);
		void SetMaterialCopyTarget(class UMaterialInterface* inMaterialToCopy);
		void SetIsOccludingOutlines(bool isOccluding);
		void SetFadeTexture(class UTexture* inFadeTexture);
		void SetFadeIntensity(float fadeIntensity);
		void ResetToTransparent();
		void RefreshOutlineComponent();
		void OnLevelReadyToPlay();
		void InitBatcher();
		struct FLinearColor GetTargetColor();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDOutlineComponentConfiguration
	 * Size -> 0x00B0 (FullSize[0x00E8] - InheritedSize[0x0038])
	 */
	class UDBDOutlineComponentConfiguration : public UDataAsset
	{
	public:
		unsigned char                                              OutlineConfigs[0x50];                                    // 0x0038(0x0050) UNKNOWN PROPERTY: MapProperty
		TMap<class FName, struct FOutlineColourConfiguration>      OutlineColours;                                          // 0x0088(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
		unsigned char                                              TranslucencyDefaultMaterials[0x10];                      // 0x00D8(0x0010) UNKNOWN PROPERTY: ArrayProperty

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDOutlineComponentCustomDepthConfiguration
	 * Size -> 0x0000 (FullSize[0x00E8] - InheritedSize[0x00E8])
	 */
	class UDBDOutlineComponentCustomDepthConfiguration : public UDBDOutlineComponentConfiguration
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDOutlineComponentStencilConfiguration
	 * Size -> 0x0000 (FullSize[0x00E8] - InheritedSize[0x00E8])
	 */
	class UDBDOutlineComponentStencilConfiguration : public UDBDOutlineComponentConfiguration
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDOutlineComponentTranslucentConfiguration
	 * Size -> 0x0000 (FullSize[0x00E8] - InheritedSize[0x00E8])
	 */
	class UDBDOutlineComponentTranslucentConfiguration : public UDBDOutlineComponentConfiguration
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDParadiseGameMode
	 * Size -> 0x0000 (FullSize[0x0360] - InheritedSize[0x0360])
	 */
	class ADBDParadiseGameMode : public ADBDBaseGameMode
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDPartyFacade
	 * Size -> 0x0010 (FullSize[0x04D8] - InheritedSize[0x04C8])
	 */
	class UDBDPartyFacade : public UPartyFacade
	{
	public:
		unsigned char                                              UnknownData_CCZI[0x10];                                  // 0x04C8(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDPawnSensingComponent
	 * Size -> 0x0008 (FullSize[0x0108] - InheritedSize[0x0100])
	 */
	class UDBDPawnSensingComponent : public UPawnSensingComponent
	{
	public:
		bool                                                       bSenseEverywhere;                                        // 0x0100(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0LKH[0x3];                                   // 0x0101(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PartiallyHiddenSensingDistance;                          // 0x0104(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDPersistentData
	 * Size -> 0x1018 (FullSize[0x1048] - InheritedSize[0x0030])
	 */
	class UDBDPersistentData : public UObject
	{
	public:
		struct FGamePersistentData                                 _gamePersistentData;                                     // 0x0030(0x0108) Transient, NativeAccessSpecifierPrivate
		TArray<class FString>                                      _keepDataIDs;                                            // 0x0138(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		TMap<class FString, struct FPlayerPersistentData>          _playerIdToPersistentDataMap;                            // 0x0148(0x0050) Transient, NativeAccessSpecifierPrivate
		struct FPlayerPersistentData                               _localPlayerPersistentData;                              // 0x0198(0x0828) Transient, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_Q61U[0x50];                                  // 0x09C0(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FCloudInventoryItem>                         _cloudInventory;                                         // 0x0A10(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_KWMX[0x628];                                 // 0x0A20(0x0628) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDPlayerAudioHandlerComponent
	 * Size -> 0x0080 (FullSize[0x0138] - InheritedSize[0x00B8])
	 */
	class UDBDPlayerAudioHandlerComponent : public UActorComponent
	{
	public:
		class FString                                              _stopMovingRTPC;                                         // 0x00B8(0x0010) Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_KY8R[0x70];                                  // 0x00C8(0x0070) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDPlayerCameraManager
	 * Size -> 0x0020 (FullSize[0x2840] - InheritedSize[0x2820])
	 */
	class ADBDPlayerCameraManager : public APlayerCameraManager
	{
	public:
		float                                                      NormalFOV;                                               // 0x2820(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TargetingFOV;                                            // 0x2824(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              _viewRotationStrategy[0x10];                             // 0x2828(0x0010) UNKNOWN PROPERTY: InterfaceProperty
		unsigned char                                              UnknownData_7RXA[0x8];                                   // 0x2838(0x0008) MISSED OFFSET (PADDING)

	public:
		void StartFadeOutTimeline(float Duration);
		void StartFadeInTimeline(float Duration);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDPlayerControllerBase
	 * Size -> 0x00D8 (FullSize[0x0670] - InheritedSize[0x0598])
	 */
	class ADBDPlayerControllerBase : public APlayerController
	{
	public:
		unsigned char                                              UnknownData_HUS0[0x58];                                  // 0x0598(0x0058) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnPlayerStateChanged;                                    // 0x05F0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U2FF[0x58];                                  // 0x0600(0x0058) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ADBDPlayer*                                          _mainCharacter;                                          // 0x0658(0x0008) Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_UMPO[0x10];                                  // 0x0660(0x0010) MISSED OFFSET (PADDING)

	public:
		void Server_UpdateReplicatedPips(int32_t pipsToAdd);
		void Server_SetConsecutiveMatchStreak(int32_t consecutiveMatch);
		void Server_SendMessage(const class FString& Message);
		void Server_SendClientAuthentication(const class FString& authClientTicket, uint64_t SteamId, uint32_t ticketLength);
		void Server_ReceivePlayerProfile(const struct FPlayerSavedProfileDataShared& savedProfileData, const struct FPlayerLoadoutData& playerLoadout);
		void Server_EACMessageFromClient(TArray<unsigned char> Message);
		void Server(const class FString& commandLine);
		void DBD_UpdateLocalStats();
		void DBD_SetCurrentCharacterPrestigeDatesPast();
		void DBD_SetCurrentCharacterPrestigeDatesNow();
		void DBD_SetCurrentCharacterPrestigeDatesFuture();
		void DBD_FireTestScore(int32_t Category, float value);
		void DBD_FillScoreCategory(int32_t Category);
		void DBD_FillAllScoreCategories();
		void DBD_DebugSendChatMessage(const class FString& Msg);
		void DBD_BuildFromTile(int32_t matrixX, int32_t matrixY, int32_t Rotation, const class FString& Name);
		void DBD_BuildFromSeed(int32_t Seed);
		void DBD_BuildFromPremadeMap(const class FString& Map);
		void DBD_BuildFromPlayerCount(int32_t Count);
		void DBD_BuildFromMap(const class FString& Map);
		void Client_ValidateServer();
		void Client_SendWarning(bool penaltyStarts, float Seconds);
		void Client_SendServerAuthentication(const class FString& authServerTicket, uint64_t SteamId, uint32_t ticketLength);
		void Client_SendLogs(TArray<class FString> ensures);
		void Client_RequestPlayerProfile();
		void Client_GameEnded();
		void Client_FinishedPlaying();
		void Client_EACMessageFromServer(TArray<unsigned char> Message);
		void CallConsoleCmdOnServer_Server(const class FString& commandLine);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDPlayerController
	 * Size -> 0x0218 (FullSize[0x0888] - InheritedSize[0x0670])
	 */
	class ADBDPlayerController : public ADBDPlayerControllerBase
	{
	public:
		class FScriptMulticastDelegate                             OnPawnLeavingGame;                                       // 0x0670(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnLocallyObservedChanged;                                // 0x0680(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TJPA[0x98];                                  // 0x0690(0x0098) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ANetworkFenceActor*                                  _theFence;                                               // 0x0728(0x0008) Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_XRIP[0x8];                                   // 0x0730(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UDBDBaseInputHandler*                                _inputHandler;                                           // 0x0738(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_EKOG[0x130];                                 // 0x0740(0x0130) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class APawn*                                               _aiPawn;                                                 // 0x0870(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_SY6R[0x8];                                   // 0x0878(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EPlayerRole                                                _controllerGameRole;                                     // 0x0880(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_AI93[0x7];                                   // 0x0881(0x0007) MISSED OFFSET (PADDING)

	public:
		void SetShouldMoveInputReplicateToServer(bool ShouldReplicate);
		void ServerViewPlayer(const class FString& playerName);
		void Server_SetSpectatorModeInEditor(bool On, class ADBDPlayerState* spectatingPlayerState);
		void Server_SetSpectatorMode(bool On);
		void Server_SetReadyToTravel();
		void Server_SetHasMoveInputThisFrame(bool hasMoveInputThisFrame);
		void Server_RequestEndGame();
		void Server_LeaveGame(bool joiningLobby);
		void Server_DebugSend(const class FString& Data);
		void Server_ClientTimeSinceLastLoadingProgress(float lastProgression);
		void Server_ActivateAIAll(bool Activate, int32_t PlayerRank, int8_t PlayerRole);
		void Server_ActivateAI(bool Activate, int32_t PlayerRank);
		void OnRep_Fence();
		bool MobileJoystickInput_Pressed(int32_t joystickIndex);
		bool IsSpectating();
		void ImplementRunLockMechanic();
		class ADBDPlayerState* GetSpectatedPlayerState();
		class ADBDPlayer* GetSpectatedPlayer();
		class ADBDPlayer* GetControlledPlayer();
		class APawn* GetAIPawn();
		void Client_SpectateAI(class APawn* aiPawn);
		void Client_SetSpectatorModeInEditor(bool On, class ADBDPlayerState* spectatingPlayerState);
		void Client_SetSpectatorMode(bool On);
		void Client_SetPlayerFinishStats(const struct FPlayerFinishStats& Stats);
		void ActivateAI(bool Activate, int32_t PlayerRank);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDPlayerController_Menu
	 * Size -> 0x0000 (FullSize[0x0670] - InheritedSize[0x0670])
	 */
	class ADBDPlayerController_Menu : public ADBDPlayerControllerBase
	{
	public:
		void TogglePlayerReadyState();
		void SetPlayerReady(bool IsReady);
		void Server_SetReadyToTravel();
		void Server_SetPlayerReady(bool IsReady);
		void Server_SetPlayerLoadout(const struct FPlayerLoadoutData& desiredLoadout);
		void Server_SetEquipedPerks(TArray<class FName> perkIds, TArray<int32_t> perkLevels, bool callOnRep);
		void Server_SetCustomizationMeshes(const struct FCharacterCustomization& Customization);
		void Server_SetCustomizationCharm(const class FName& CharmId, int8_t slotIndex);
		void Server_SetCharacterLevel(int32_t CharacterLevel, int32_t PrestigeLevel, bool callOnRep);
		void Server_SetCharacterData(int32_t characterIndex, const struct FPlayerDataSync& PlayerDataSync);
		void Server_GamePresetDataFromClient(const struct FGamePresetData& GameState);
		void Authority_TogglePlayerReadyState();
		void Authority_SetPlayerReady(bool IsReady);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDPlayerLevelManager
	 * Size -> 0x0168 (FullSize[0x0198] - InheritedSize[0x0030])
	 */
	class UDBDPlayerLevelManager : public UObject
	{
	public:
		unsigned char                                              UnknownData_ENCC[0x168];                                 // 0x0030(0x0168) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDPlayerPositionOffsetComponent
	 * Size -> 0x0008 (FullSize[0x00C0] - InheritedSize[0x00B8])
	 */
	class UDBDPlayerPositionOffsetComponent : public UActorComponent
	{
	public:
		struct FPerPlatformFloat                                   _menuZHeadOffset;                                        // 0x00B8(0x0004) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_SX44[0x4];                                   // 0x00BC(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDPlayerStart
	 * Size -> 0x0008 (FullSize[0x0270] - InheritedSize[0x0268])
	 */
	class ADBDPlayerStart : public APlayerStart
	{
	public:
		unsigned char                                              UnknownData_OLSH[0x8];                                   // 0x0268(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDPlayerState
	 * Size -> 0x03F0 (FullSize[0x0728] - InheritedSize[0x0338])
	 */
	class ADBDPlayerState : public APlayerState
	{
	public:
		unsigned char                                              UnknownData_QMX6[0x8];                                   // 0x0338(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnAIFinishedPlayingEvent;                                // 0x0340(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FString                                              MirrorsId;                                               // 0x0350(0x0010) Net, ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ContentVersion;                                          // 0x0360(0x0010) ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAIDifficultyLevel                                         _difficultyLevel;                                        // 0x0370(0x0001) Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsPlayerReady;                                           // 0x0371(0x0001) Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPlayerRole                                                GameRole;                                                // 0x0372(0x0001) Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4DPE[0x5];                                   // 0x0373(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UDedicatedServerHandlerComponent*                    DedicatedServerHandler;                                  // 0x0378(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FCharacterStateData                                 CamperData;                                              // 0x0380(0x0020) Net, Transient, RepNotify, NativeAccessSpecifierPublic
		struct FCharacterStateData                                 SlasherData;                                             // 0x03A0(0x0020) Net, RepNotify, NativeAccessSpecifierPublic
		struct FPlayerStateData                                    PlayerData;                                              // 0x03C0(0x0038) Net, RepNotify, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IZRP[0x8];                                   // 0x03F8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnPlayerGameplayEvent;                                   // 0x0400(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnPlayerGameStateChanged;                                // 0x0410(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		TMap<class FName, struct FAwardedScores>                   _awardedScoresByType;                                    // 0x0420(0x0050) Protected, NativeAccessSpecifierProtected
		struct FUserGameStats                                      _cachedUserGameStats;                                    // 0x0470(0x00B0) Protected, NativeAccessSpecifierProtected
		TArray<struct FOngoingScoreData>                           _ongoingScoreEvents;                                     // 0x0520(0x0010) ZeroConstructor, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_1WZL[0x9];                                   // 0x0530(0x0009) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       _inParadise;                                             // 0x0539(0x0001) Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _endOfMatchRpcReceived;                                  // 0x053A(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_JFRM[0x5];                                   // 0x053B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FEquippedPlayerCustomization                        _playerCustomization;                                    // 0x0540(0x0038) Net, RepNotify, Protected, NativeAccessSpecifierProtected
		int32_t                                                    _selectedCamperIndex;                                    // 0x0578(0x0004) Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                    _selectedSlasherIndex;                                   // 0x057C(0x0004) Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UGameplayNotificationManager*                        _gameplayNotificationManager;                            // 0x0580(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UCharacterStatsHandlerComponent*                     _characterStatsHandler;                                  // 0x0588(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UPlayerScoreComponent*                               _playerScoreComponent;                                   // 0x0590(0x0008) Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_VJRW[0x20];                                  // 0x0598(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              _platformAccountId;                                      // 0x05B8(0x0010) Net, ZeroConstructor, Transient, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_ML5J[0x104];                                 // 0x05C8(0x0104) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EPlatformFlag                                              _platform;                                               // 0x06CC(0x0001) ELEMENT_SIZE_MISMATCH Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_PB6X[0x3];                                   // 0x06CD(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		EProviderFlag                                              _provider;                                               // 0x06D0(0x0001) ELEMENT_SIZE_MISMATCH Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_KW84[0x3];                                   // 0x06D1(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		bool                                                       _crossplayAllowed;                                       // 0x06D4(0x0001) Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _offNetworkFlag;                                         // 0x06D5(0x0001) Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_Z83B[0x2];                                   // 0x06D6(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FStreamerModePlayerData                             _streamerModePlayerData;                                 // 0x06D8(0x0008) Net, Transient, RepNotify, NoDestructor, NativeAccessSpecifierPrivate
		bool                                                       _gameLevelLoaded;                                        // 0x06E0(0x0001) Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_0MLF[0x37];                                  // 0x06E1(0x0037) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       _showPortraitBorder;                                     // 0x0718(0x0001) Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_3FJA[0x2];                                   // 0x0719(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       _hasActiveSubscription;                                  // 0x071B(0x0001) Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		uint32_t                                                   _matchmakingIncentive;                                   // 0x071C(0x0004) Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _pktLossPercentage;                                      // 0x0720(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_RAG0[0x4];                                   // 0x0724(0x0004) MISSED OFFSET (PADDING)

	public:
		void UpdateOngoingScores();
		void Server_CheatSelectSurvivor(int32_t camperIndex);
		void Server_CheatSelectKiller(int32_t slasherIndex);
		void OnRep_DisplayData();
		void OnRep_CustomizationData();
		void OnRep_BotDifficultyLevel();
		void Multicast_SetPlayerGameState(EGameState newGameState, bool isEscapeHatch);
		void Multicast_SetInParadise();
		void Multicast_SetAsLeftMatch();
		void Multicast_SetAsDisconnected();
		void Multicast_FireGameplayEventWithScore(EDBDScoreTypes playerGameplayEventType, float Amount, class AActor* effector, class AActor* Target, const struct FAwardedScore& AwardedScore);
		void Multicast_FireGameplayEvent(EDBDScoreTypes playerGameplayEventType, float Amount, class AActor* effector, class AActor* Target);
		bool IsInFinishedPlayingState();
		bool HasEscaped();
		EGameState GetPlayerGameState();
		EPlayerRole GetGameRole();
		class UGameplayNotificationManager* GetGameplayNotificationManager();
		void FireScoreEvent(EDBDScoreTypes scoreType, float PercentToAward);
		void FireActiveStatusViewEvent(const class FName& StatusViewID, const class FName& uniqueSourceID, const struct FStatusViewSource& StatusViewSource);
		void FireActiveStatusEffectEvent(const class FName& statusEffectID, float Percentage, int32_t iconFilePathIndex, int32_t levelToDisplay);
		void Client_UpdateWallet(const class FString& currencyId, int32_t Amount);
		void Client_SetInParadise();
		void Client_SetGameRole(EPlayerRole newRole);
		void Client_RemoveItemFromInventory(const class FName& toRemove, bool UpdateLoadout);
		void Client_RemotelyDispatchGameEventWithScore(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData, const struct FAwardedScore& AwardedScore);
		void Client_RemotelyDispatchGameEvent(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
		void Client_InvalidateIncentives();
		void Client_HandleEscapeScoreEvent();
		void Client_HandleEndOfMatch(bool success, const struct FEndOfMatchRPCData& Response);
		void Client_FetchCoreRituals(bool hasClaimableRitual);
		void Client_AtlantaUpdateInventoryItem(const class FName& ItemId, int32_t newCount);
		void ChangeStartingGameRole(EPlayerRole GameRole);
		void Authority_SetPlayerGameState(EGameState newGameState, bool isEscapeHatch);
		void Authority_HandleScoreEvent(const struct FGameplayTag& scoreTypeTag, const struct FScoreEventData& ScoreEventData);
		void Authority_EndOngoingScoreEvent(const struct FGameplayTag& scoreTypeTag);
		void Authority_CancelOngoingScoreEvent(const struct FGameplayTag& scoreTypeTag);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDPlayerState_Menu
	 * Size -> 0x0000 (FullSize[0x0728] - InheritedSize[0x0728])
	 */
	class ADBDPlayerState_Menu : public ADBDPlayerState
	{
	public:
		void Server_SetSelectedCharacterId(int32_t ID, bool updateDisplayData);
		void Server_SetSelectedCharacterCustomization(EPlayerRole forRole, int32_t ID, const struct FEquippedPlayerCustomization& Customization);
		void Server_SetEquipmentAddons(TArray<class FName> addonItemIds, bool callOnRep);
		void Server_SetEquipment(ELoadoutSlot Slot, const class FName& ItemId, bool callOnRep);
		void Server_NotifyOnRep();
		void Multicast_SetSelectedCharacterId(EPlayerRole forRole, int32_t ID, bool updateDisplayData);
		void Multicast_SetSelectedCharacterCustomization(EPlayerRole forRole, int32_t ID, const struct FEquippedPlayerCustomization& Customization);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDPlayerState_Lobby
	 * Size -> 0x0008 (FullSize[0x0730] - InheritedSize[0x0728])
	 */
	class ADBDPlayerState_Lobby : public ADBDPlayerState_Menu
	{
	public:
		bool                                                       IsOwnershipValidated;                                    // 0x0728(0x0001) Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HPWP[0x7];                                   // 0x0729(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDPrimaryDataAsset
	 * Size -> 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
	 */
	class UDBDPrimaryDataAsset : public UPrimaryDataAsset
	{
	public:
		struct FPrimaryAssetType                                   AssetType;                                               // 0x0038(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SM7N[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDProjectileUtilities
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UDBDProjectileUtilities : public UBlueprintFunctionLibrary
	{
	public:
		class UAuthoritativePoolProjectileProviderAdapter* STATIC_CreateProjectilePoolAdapter(class UObject* Outer, class UAuthoritativeActorPoolComponent* pool);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDRankDesignTunables
	 * Size -> 0x0030 (FullSize[0x0060] - InheritedSize[0x0030])
	 */
	class UDBDRankDesignTunables : public UObject
	{
	public:
		class UCurveFloat*                                         UnbrokenTimeAlivePointsCurve;                            // 0x0030(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         EvaderStealthPointsByDistanceWhileKillerNotChasingCurve; // 0x0038(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         EvaderStealthPointsByDistanceWhileKillerIsChasingCurve;  // 0x0040(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         EvaderChasePointsByDurationCurve;                        // 0x0048(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         EvaderZAxisDistanceScalingCurve;                         // 0x0050(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         ChaserChasePointsByDurationCurve;                        // 0x0058(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDRemotePlayer
	 * Size -> 0x0000 (FullSize[0x1C68] - InheritedSize[0x1C68])
	 */
	class UDBDRemotePlayer : public UIpConnection
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDRichPresenceSubsystem
	 * Size -> 0x0018 (FullSize[0x0050] - InheritedSize[0x0038])
	 */
	class UDBDRichPresenceSubsystem : public UGameInstanceSubsystem
	{
	public:
		ERichPresenceUserType                                      _userType;                                               // 0x0038(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		ERichPresenceStatus                                        _richPresenceStatus;                                     // 0x0039(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_WNX7[0x2];                                   // 0x003A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      _timerRate;                                              // 0x003C(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _timerDelay;                                             // 0x0040(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _isValidSetup;                                           // 0x0044(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_AQNM[0xB];                                   // 0x0045(0x000B) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDHostSettingsParamsBase
	 * Size -> 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
	 */
	class UDBDHostSettingsParamsBase : public UObject
	{
	public:
		unsigned char                                              UnknownData_5V25[0x10];                                  // 0x0030(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDHostSettingsParamsSessionInvalid
	 * Size -> 0x0000 (FullSize[0x0040] - InheritedSize[0x0040])
	 */
	class UDBDHostSettingsParamsSessionInvalid : public UDBDHostSettingsParamsBase
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDHostSettingsParamsJoinabilityPreset
	 * Size -> 0x0008 (FullSize[0x0048] - InheritedSize[0x0040])
	 */
	class UDBDHostSettingsParamsJoinabilityPreset : public UDBDHostSettingsParamsBase
	{
	public:
		unsigned char                                              UnknownData_49YT[0x8];                                   // 0x0040(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDHostSettingsParamsRanking
	 * Size -> 0x0008 (FullSize[0x0048] - InheritedSize[0x0040])
	 */
	class UDBDHostSettingsParamsRanking : public UDBDHostSettingsParamsBase
	{
	public:
		unsigned char                                              UnknownData_AL27[0x8];                                   // 0x0040(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDServerInstance
	 * Size -> 0x0080 (FullSize[0x00B0] - InheritedSize[0x0030])
	 */
	class UDBDServerInstance : public UObject
	{
	public:
		unsigned char                                              UnknownData_7BGA[0x68];                                  // 0x0030(0x0068) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UDBDHostSettingsParamsBase*>                  _pendingSessionUpdates;                                  // 0x0098(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		TWeakObjectPtr<class UDBDGameInstance>                     _gameInstance;                                           // 0x00A8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDSignificanceStrategy
	 * Size -> 0x01E0 (FullSize[0x0210] - InheritedSize[0x0030])
	 */
	class UDBDSignificanceStrategy : public USignificanceStrategy
	{
	public:
		struct FBHVRPerDetailModeFloat                             _farDistance;                                            // 0x0030(0x00A0) Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate
		struct FBHVRPerDetailModeFloat                             _auraRevealedMultiplier;                                 // 0x00D0(0x00A0) Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate
		struct FBHVRPerDetailModeFloat                             _auraRevealedMinimumSignificance;                        // 0x0170(0x00A0) Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDSlasherData
	 * Size -> 0x0008 (FullSize[0x0150] - InheritedSize[0x0148])
	 */
	class UDBDSlasherData : public UDBDPlayerData
	{
	public:
		unsigned char                                              UnknownData_3768[0x8];                                   // 0x0148(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDSocialNotificationFactory
	 * Size -> 0x0040 (FullSize[0x0070] - InheritedSize[0x0030])
	 */
	class UDBDSocialNotificationFactory : public UObject
	{
	public:
		TWeakObjectPtr<class UDBDGameInstance>                     _gameInstance;                                           // 0x0030(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UToastManager*                                       _toastMgr;                                               // 0x0038(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UDBDPartyFacade*                                     _partyFacade;                                            // 0x0040(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UFriendManager*                                      _friendManager;                                          // 0x0048(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UDataTable*                                          _toastTable;                                             // 0x0050(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_2QPL[0x18];                                  // 0x0058(0x0018) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDSpecialEventUtilities
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UDBDSpecialEventUtilities : public UBlueprintFunctionLibrary
	{
	public:
		bool STATIC_DoesPlayerHasEventOffering(class ADBDPlayer* Player, EOfferingEffectType offeringEffectType);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDSpectator
	 * Size -> 0x0020 (FullSize[0x02E0] - InheritedSize[0x02C0])
	 */
	class ADBDSpectator : public ASpectatorPawn
	{
	public:
		unsigned char                                              UnknownData_4635[0x20];                                  // 0x02C0(0x0020) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDSpringArmComponent
	 * Size -> 0x0080 (FullSize[0x0320] - InheritedSize[0x02A0])
	 */
	class UDBDSpringArmComponent : public USpringArmComponent
	{
	public:
		bool                                                       bEnableComponentwiseCameraLag : 1;                       // 0x02A0(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BB0H[0x3];                                   // 0x02A1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             ComponenwiseCameraLagSpeed;                              // 0x02A4(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TargetArmMinLength;                                      // 0x02B0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableDistanceCameraLag : 1;                            // 0x02B4(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_305J[0x3];                                   // 0x02B5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CameraDistanceLagSpeed;                                  // 0x02B8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8N7J[0x4];                                   // 0x02BC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bDrawDebugTraceMarkers : 1;                              // 0x02C0(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UKUF[0x7];                                   // 0x02C1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<TWeakObjectPtr<class AActor>>                       ignoreActors;                                            // 0x02C8(0x0010) ZeroConstructor, Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_0ASY[0x48];                                  // 0x02D8(0x0048) MISSED OFFSET (PADDING)

	public:
		void IgnoreActor(class AActor* Actor, bool bShouldIgnore);
		void ClearIgnoreActors();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDSurfaceTypeName
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UDBDSurfaceTypeName : public UBlueprintFunctionLibrary
	{
	public:
		EPhysicalSurface STATIC_GetSurfaceType(class UPhysicalMaterial* PhysicalMaterial);
		class FString STATIC_GetSurfaceName(class UPhysicalMaterial* PhysicalMaterial);
		class FName STATIC_ConvertFromPhysicalMaterial(class UPhysicalMaterial* Material);
		class FName STATIC_Convert(EPhysicalSurface SurfaceType);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDTags
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UDBDTags : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDTimerComponent
	 * Size -> 0x0030 (FullSize[0x00E8] - InheritedSize[0x00B8])
	 */
	class UDBDTimerComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_IYVA[0x30];                                  // 0x00B8(0x0030) MISSED OFFSET (PADDING)

	public:
		void Update(float DeltaTime);
		void Unpause();
		void Stop();
		void ResetTo(float Time);
		void Reset();
		void Pause();
		bool IsOnPause();
		bool IsDone();
		float GetTimeLeft();
		float GetTimeElapsed();
		float GetStartTime();
		float GetPercentTimeLeft();
		float GetPercentTimeElapsed();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDTunableUtilities
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UDBDTunableUtilities : public UBlueprintFunctionLibrary
	{
	public:
		float STATIC_GetTunableValue(class UObject* WorldContextObject, const class FName& valueName);
		float STATIC_GetTunableRowHandleValue(const struct FDBDTunableRowHandle& rowHandle);
		float STATIC_GetSlasherTunableValue(class UObject* WorldContextObject, const class FName& valueName);
		float STATIC_GetEndGameTunableValue(class UObject* WorldContextObject, const class FName& valueName);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDUtilities
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UDBDUtilities : public UBlueprintFunctionLibrary
	{
	public:
		bool STATIC_WithinRangeExclusive(float Min, float Max, float value);
		bool STATIC_WithinRange(float Min, float Max, float value);
		float STATIC_ToAngle_negative180to180(float Angle);
		bool STATIC_SphereTraceSingle(const struct FVector& Start, const struct FVector& End, class USphereComponent* Sphere, struct FHitResult* outHitResult, TArray<class AActor*> IgnoredActors);
		bool STATIC_SphereTraceAgainstActor(const struct FVector& Start, const struct FVector& End, class USphereComponent* Sphere, class AActor* Actor, struct FHitResult* outHitResult);
		void STATIC_SetComponentCastHiddenShadow(class UPrimitiveComponent* Component, bool CastShadow);
		int32_t STATIC_ResolveCharacterIdFromPlayerState(class ADBDPlayerState* PlayerState);
		void STATIC_PrintStringEmbiggened(class UObject* WorldContextObject, const class FString& inString, const struct FLinearColor& TextColor, float Duration, int32_t Key, float Scale);
		int64_t STATIC_PointerToInt(class UObject* Obj);
		bool STATIC_NormalizeXY(struct FVector* Vector, float Tolerance);
		void STATIC_LogString(const class FString& inStr);
		void STATIC_LogMeshMaterialInfo(const class FString& inStr, class UMeshComponent* Root);
		bool STATIC_IsSteamPIEGame(class UObject* contextObject);
		bool STATIC_IsServer(class UObject* WorldContextObject);
		bool STATIC_IsReplaceDisconnectedPlayersWithBotsActive();
		bool STATIC_IsNonViolent();
		bool STATIC_IsLocallyObservingASurvivor(class UObject* WorldContextObject);
		bool STATIC_IsLocallyObservingAKiller(class UObject* WorldContextObject);
		bool STATIC_IsInTutorialLevel();
		bool STATIC_IsInSurvivorTeam(class UObject* WorldContextObject);
		bool STATIC_IsInKillerTeam(class UObject* WorldContextObject);
		bool STATIC_HasWalkableSurfaceForward(class UObject* WorldContextObject, const struct FVector& Location, const struct FVector& fowardVector, float distance, float raycastStartHeight, float raycastEndHeight, TArray<struct FHitResult>* OutHits, struct FVector* raycastStart);
		bool STATIC_HasLineOfSightToTarget(class UObject* WorldContextObject, const struct FVector& StartPosition, const struct FVector& targetPosition, class AActor* ignoredActor, bool useComplex, bool useDebugLogs);
		bool STATIC_HasFloorForward(class UObject* WorldContextObject, const struct FVector& Location, const struct FVector& fowardVector, float distance, float raycastStartHeight, float raycastEndHeight, TArray<struct FHitResult>* OutHits, struct FVector* raycastStart);
		struct FRotator STATIC_GetYawOnly(const struct FRotator& Rotation);
		struct FVector STATIC_GetXYVector(const struct FVector& Vector);
		float STATIC_GetVelocityXYAngleDegrees(class AActor* Actor);
		struct FTimespan STATIC_GetTotalPlaytime(class UObject* WorldContextObject, bool Update);
		void STATIC_GetTileSpawnPoints(TArray<class UTileSpawnPoint*>* tileSpawnPoints);
		TArray<class AGenerator*> STATIC_GetThreeClosestGenerators(TArray<class AGenerator*> unrevealedGenerators);
		float STATIC_GetSquaredDistanceToKiller(class AActor* Survivor);
		float STATIC_GetSlasherTunableValue(class UObject* WorldContextObject, const class FName& valueName);
		struct FVector STATIC_GetSimilarVector(const struct FVector& Vector, float maximumDeviation);
		float STATIC_GetPlayRateForMontage(class UAnimMontage* Montage, float Time);
		float STATIC_GetPercentOfRange(float Val, float Min, float Max);
		class ASlasherPlayer* STATIC_GetOwningSlasher(class UAnimInstance* AnimInstance);
		class ADBDBasePlayer* STATIC_GetOwningDBDBasePlayer(class UAnimInstance* AnimInstance);
		class ACamperPlayer* STATIC_GetOwningCamper(class UAnimInstance* AnimInstance);
		class AActor* STATIC_GetOuterMostActor(class UAnimInstance* AnimInstance);
		void STATIC_GetNearbyCampers(class UWorld* World, const struct FVector& Center, float Radius, TArray<class ACamperPlayer*>* outNearbyCampers, TArray<class AActor*> ignoredCampers);
		bool STATIC_GetNearbyActorsOfType(class UWorld* World, const struct FVector& Center, float Radius, TArray<class AActor*>* outNearbyActors, class UClass* actorClassType, ECollisionChannel CollisionChannel, class AActor* IgnoreActor);
		float STATIC_GetMontageLength(class UAnimMontage* Montage);
		TArray<class UMaterialHelper*> STATIC_GetMaterialHelpersAttachedToPlayerMesh(class ADBDPlayer* Player);
		class FString STATIC_GetLogStringMaterialInfo(const class FString& inStr, class UMaterialInterface* Root);
		EPlayerRole STATIC_GetLocallyObservedCharacterRole(class UObject* WorldContextObject);
		class ADBDPlayer* STATIC_GetLocallyObservedCharacter(class UObject* WorldContextObject);
		class ACamperPlayer* STATIC_GetLocallyControlledSurvivor(class UObject* WorldContextObject);
		class ASlasherPlayer* STATIC_GetLocallyControlledKiller(class UObject* WorldContextObject);
		EPlayerRole STATIC_GetLocallyControlledCharacterRole(class UObject* WorldContextObject);
		class ADBDPlayer* STATIC_GetLocallyControlledCharacter(class UObject* WorldContextObject);
		class ADBDPlayerControllerBase* STATIC_GetLocalDBDPlayerController(class UObject* WorldContextObject);
		class ADBDPlayerCameraManager* STATIC_GetLocalDBDCameraManager(class UObject* WorldContextObject);
		int32_t STATIC_GetInventoryCountForMultipleCharacters(class UObject* WorldContextObject, TArray<int32_t> characterIndexes, const class FName& ItemId);
		int32_t STATIC_GetInventoryCount(class UObject* WorldContextObject, int32_t characterIndex, const class FName& ItemId);
		struct FCollisionResponseContainer STATIC_GetImpactCollisionResponseContainer(class UPrimitiveComponent* Primitive);
		ECollisionChannel STATIC_GetImpactCollisionObjectType(class UPrimitiveComponent* Primitive);
		class FText STATIC_GetFormattedNumberText(float value, int32_t maxDecimals, int32_t minDecimals, bool leadingZero);
		class FString STATIC_GetFormattedNumberString(float value, int32_t maxDecimals, int32_t minDecimals, bool leadingZero);
		struct FVector STATIC_GetFloorLocationAt(class UObject* WorldContextObject, const struct FVector& Location, float raycastStartHeight, float raycastEndHeight, bool useComplex);
		class AActor* STATIC_GetFirstActorWithTag(const class FName& Tag, TArray<class AActor*> actorsArray);
		float STATIC_GetEndGameTunableValue(class UObject* WorldContextObject, const class FName& valueName);
		float STATIC_GetDistanceToNearestHookedSurvivor(class ADBDPlayer* Player);
		class ADBDGameState* STATIC_GetDBDGameState(class UObject* WorldContextObject);
		class ADBDGameMode* STATIC_GetDBDGameMode(class UObject* WorldContextObject);
		class UDBDGameInstance* STATIC_GetDBDGameInstance(class UObject* WorldContextObject);
		class ADBDAIPlayerController* STATIC_GetDBDAIPlayerController(class ADBDPlayer* Player);
		class FString STATIC_GetComponentOwnerName(class UActorComponent* ActorComponent);
		struct FTransform STATIC_GetClosestSnapTransformOnOrbit(const struct FVector& centerPoint, const struct FVector& orbitterPosition, float distance);
		struct FVector STATIC_GetClosestPointOnOrbit(const struct FVector& centerPoint, const struct FVector& orbitterPosition, float distance);
		class AProceduralLevelBuilder* STATIC_GetBuilder(class UObject* WorldContextObject);
		float STATIC_GetAnimSequenceLength(class UAnimSequence* Sequence);
		void STATIC_GetActorSpawners(TArray<class UActorSpawner*>* actorSpawners);
		class FString STATIC_GetActorOwnerName(class AActor* Actor);
		EShadowSystem STATIC_GetActiveShadowSystem();
		class AActor* STATIC_FindParentOfClass(class AActor* InChild, class UClass* InClass);
		bool STATIC_FindFloorSingle(class UObject* WorldContextObject, const struct FVector& Location, float raycastLength, struct FHitResult* OutHit);
		float STATIC_DistanceFromPointToPane(const struct FVector& Point, const struct FPlane& Plane);
		class UObject* STATIC_DBDLoadAudioBankByAssetPtr(class AActor* caller);
		void STATIC_DBDLoadAudioBankAsync(class UAkAudioBank* Bank, class AActor* caller);
		void STATIC_DBDLoadAudioBank(class UAkAudioBank* Bank, class AActor* caller);
		bool STATIC_DBDCapsuleTraceSingle(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, float Radius, float HalfHeight, ECollisionChannel TraceChannel, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, EDrawDebugTrace DrawDebugType, struct FHitResult* OutHit, bool bIgnoreSelf);
		void STATIC_CrashGameCausingInterrupt();
		bool STATIC_BoxTraceAgainstActor(const struct FVector& Start, const struct FVector& End, class UBoxComponent* Box, class AActor* Actor, struct FHitResult* outHitResult);
		class UActorComponent* STATIC_AddComponentToActor(class UClass* compClass, const class FName& compName, class AActor* Actor);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDUtilTimer
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UDBDUtilTimer : public UBlueprintFunctionLibrary
	{
	public:
		void STATIC_Update(struct FDBDTimer* Timer, float DeltaTime);
		void STATIC_Stop(struct FDBDTimer* Timer);
		void STATIC_ResetTo(struct FDBDTimer* Timer, float Time);
		void STATIC_Reset(struct FDBDTimer* Timer);
		bool STATIC_IsDone(const struct FDBDTimer& Timer);
		float STATIC_GetTimeLeft(const struct FDBDTimer& Timer);
		float STATIC_GetTimeElapsed(const struct FDBDTimer& Timer);
		float STATIC_GetStartTime(const struct FDBDTimer& Timer);
		float STATIC_GetPercentTimeLeft(const struct FDBDTimer& Timer);
		float STATIC_GetPercentTimeElapsed(const struct FDBDTimer& Timer);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DeadByDaylightGameMode
	 * Size -> 0x0000 (FullSize[0x0328] - InheritedSize[0x0328])
	 */
	class ADeadByDaylightGameMode : public AGameMode
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DecalMaskedMaterialsList
	 * Size -> 0x0060 (FullSize[0x0098] - InheritedSize[0x0038])
	 */
	class UDecalMaskedMaterialsList : public UDataAsset
	{
	public:
		class UStaticMesh*                                         decalPlaneStaticMesh;                                    // 0x0038(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      decalPlaneExtent;                                        // 0x0040(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4N78[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class FName, class UMaterialInterface*>               decalMaskedMaterials;                                    // 0x0048(0x0050) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DecalCollection
	 * Size -> 0x0120 (FullSize[0x0150] - InheritedSize[0x0030])
	 */
	class UDecalCollection : public UObject
	{
	public:
		TArray<class UDBDDecalComponent*>                          _decalComponentsArray;                                   // 0x0030(0x0010) ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
		unsigned char                                              _activeDecalComponents[0x50];                            // 0x0040(0x0050) UNKNOWN PROPERTY: SetProperty
		unsigned char                                              _inactiveDecalComponents[0x50];                          // 0x0090(0x0050) UNKNOWN PROPERTY: SetProperty
		TArray<bool>                                               _DeltaZPool;                                             // 0x00E0(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		TMap<class UStaticMeshComponent*, int32_t>                 _deltaZMultipliers;                                      // 0x00F0(0x0050) Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_D9OK[0x8];                                   // 0x0140(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UDecalMaskedMaterialsList*                           _decalProperties;                                        // 0x0148(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DecalSpawner
	 * Size -> 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
	 */
	class UDecalSpawner : public UObject
	{
	public:
		class UDecalCollection*                                    _decalCollection;                                        // 0x0030(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class USpawnerStrategy*                                    _spawnerStrategy;                                        // 0x0038(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_1WGV[0x8];                                   // 0x0040(0x0008) MISSED OFFSET (PADDING)

	public:
		class USpawnerStrategy* GetSpawnerStrategy();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DecalSpawnerCollection
	 * Size -> 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
	 */
	class UDecalSpawnerCollection : public UObject
	{
	public:
		TMap<class FName, class UDecalSpawner*>                    _decalSpawners;                                          // 0x0030(0x0050) Transient, NativeAccessSpecifierPrivate

	public:
		class UDBDDecalComponent* SpawnDecalAtLocation(const class FName& decalSpawnerName, const struct FVector& DecalSize, const struct FVector& Location, const struct FRotator& Rotation, float LifeSpan, const class FName& decalType, int32_t SortOrder);
		void ReleaseDecalSpawner(const class FName& decalSpawnerName);
		class UDecalSpawner* CreateDecalSpawner(class UObject* WorldContextObject, const class FName& decalSpawnerName, class UMaterialInterface* DecalMaterial, int32_t PoolSize, ESpawnerStrategyType spawnerStrateryType);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DedicatedServerHandlerComponent
	 * Size -> 0x0058 (FullSize[0x0110] - InheritedSize[0x00B8])
	 */
	class UDedicatedServerHandlerComponent : public UActorComponent
	{
	public:
		struct FAtlantaRitualSet                                   _atlantaRituals;                                         // 0x00B8(0x0038) NativeAccessSpecifierPrivate
		TArray<struct FDailyRitualInstance>                        _coreRituals;                                            // 0x00F0(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_ZT0L[0x10];                                  // 0x0100(0x0010) MISSED OFFSET (PADDING)

	public:
		void ReceiveGameEvent(EDBDScoreTypes scoreType, float Amount, class AActor* Instigator, class AActor* Target);
		void OnGameEvent(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DedicatedServerManager
	 * Size -> 0x0038 (FullSize[0x0070] - InheritedSize[0x0038])
	 */
	class UDedicatedServerManager : public UGameInstanceSubsystem
	{
	public:
		unsigned char                                              _startupInitializer[0x10];                               // 0x0038(0x0010) UNKNOWN PROPERTY: InterfaceProperty
		class UOnlineSystemHandler*                                _onlineSystemHandler;                                    // 0x0048(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_P8AT[0x20];                                  // 0x0050(0x0020) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DedicatedServerStartupInitializerInterface
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UDedicatedServerStartupInitializerInterface : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DemogorgonAnimProxy
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UDemogorgonAnimProxy : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DestroyBreakableDefinition
	 * Size -> 0x0068 (FullSize[0x0680] - InheritedSize[0x0618])
	 */
	class UDestroyBreakableDefinition : public UInteractionDefinition
	{
	public:
		unsigned char                                              UnknownData_038N[0x8];                                   // 0x0618(0x0008) Fix Super Size
		unsigned char                                              UnknownData_2NAI[0x28];                                  // 0x0620(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ABreakableBase*                                      _breakable;                                              // 0x0648(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FDBDTunableRowHandle                                _fastInteractionAnimThreshold;                           // 0x0650(0x0028) Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_3B1Z[0x8];                                   // 0x0678(0x0008) MISSED OFFSET (PADDING)

	public:
		class ABreakableBase* GetBreakable();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DetectionZoneUtilities
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UDetectionZoneUtilities : public UBlueprintFunctionLibrary
	{
	public:
		bool STATIC_DetectObstruction(class ADBDPlayer* Player, EDetectionZone detectionZoneID, class UPhysicalMaterial** physicalMaterialOut, struct FVector* positionOut, struct FVector* normalOut);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DialogHandlerComponent
	 * Size -> 0x00B0 (FullSize[0x0168] - InheritedSize[0x00B8])
	 */
	class UDialogHandlerComponent : public UActorComponent
	{
	public:
		float                                                      _minimumDelayBetweenDialog;                              // 0x00B8(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      _maxSubtitleDistance;                                    // 0x00BC(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<struct FDialogEventSettings>                        _dialogEvents;                                           // 0x00C0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
		TArray<struct FGameplayTag>                                _stopAudioGameplayEvents;                                // 0x00D0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate
		class UAkAudioEvent*                                       _stopAudioClip;                                          // 0x00E0(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_T78K[0x80];                                  // 0x00E8(0x0080) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DialogHandlerCondition
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UDialogHandlerCondition : public UObject
	{
	public:
		bool IsTrue(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DirectionalMinigameComponent
	 * Size -> 0x0050 (FullSize[0x0108] - InheritedSize[0x00B8])
	 */
	class UDirectionalMinigameComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_4HN8[0x28];                                  // 0x00B8(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ACamperPlayer*                                       _currentlyEngagedSurvivor;                               // 0x00E0(0x0008) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<EDirectionalInputKey>                               _currentSequence;                                        // 0x00E8(0x0010) Net, ZeroConstructor, NativeAccessSpecifierPrivate
		bool                                                       _isInProgress;                                           // 0x00F8(0x0001) Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_5LFK[0x3];                                   // 0x00F9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    _currentKeyIndex;                                        // 0x00FC(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_O41F[0x8];                                   // 0x0100(0x0008) MISSED OFFSET (PADDING)

	public:
		void Server_EnterKey(EDirectionalInputKey enteredKey);
		void Server_CancelMinigame();
		void OnRep_IsInProgress();
		void Authority_StartMinigameForSurvivor(class ACamperPlayer* Survivor);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DirectionalMinigameSurvivorComponent
	 * Size -> 0x0050 (FullSize[0x0108] - InheritedSize[0x00B8])
	 */
	class UDirectionalMinigameSurvivorComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_FHXA[0x50];                                  // 0x00B8(0x0050) MISSED OFFSET (PADDING)

	public:
		void Server_EnterKey(class UDirectionalMinigameComponent* directionalMinigame, EDirectionalInputKey Key);
		void Server_CancelMinigame(class UDirectionalMinigameComponent* directionalMinigame);
		void Client_StopInteraction(class UDirectionalMinigameComponent* directionalMinigame, EDirectionalMinigameResult Result);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DiscordancePerk
	 * Size -> 0x0060 (FullSize[0x0428] - InheritedSize[0x03C8])
	 */
	class UDiscordancePerk : public UPerk
	{
	public:
		TArray<struct FGeneratorQueryHandlePair>                   _generatorQueryHandlePairs;                              // 0x03C8(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_HRQ9[0x30];                                  // 0x03D8(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      _effectRange[0x3];                                       // 0x0408(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _auraLingerDuration;                                     // 0x0414(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    _numSurvivorsRepairingToReveal;                          // 0x0418(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_B2N4[0x1];                                   // 0x041C(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       _isPerkConsideredActive;                                 // 0x041D(0x0001) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_2U96[0xA];                                   // 0x041E(0x000A) MISSED OFFSET (PADDING)

	public:
		void Multicast_AddLingeringGeneratorAura(class AGenerator* Generator);
		void Multicast_AddGeneratorAura(class AGenerator* Generator);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DisplayStandCharmRequesterComponent
	 * Size -> 0x0028 (FullSize[0x00E0] - InheritedSize[0x00B8])
	 */
	class UDisplayStandCharmRequesterComponent : public UActorComponent
	{
	public:
		class UClass*                                              _menuCharmClass;                                         // 0x00B8(0x0008) Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_F874[0x20];                                  // 0x00C0(0x0020) MISSED OFFSET (PADDING)

	public:
		void OnCharmDisplayed(class AActor* Actor);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DisplayStandController
	 * Size -> 0x00F0 (FullSize[0x0120] - InheritedSize[0x0030])
	 */
	class UDisplayStandController : public UObject
	{
	public:
		unsigned char                                              UnknownData_CQYE[0xF0];                                  // 0x0030(0x00F0) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DisplayStandCurrencyRequesterComponent
	 * Size -> 0x0010 (FullSize[0x00C8] - InheritedSize[0x00B8])
	 */
	class UDisplayStandCurrencyRequesterComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_UV8R[0x8];                                   // 0x00B8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              _menuCurrencyDisplayableClass;                           // 0x00C0(0x0008) Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DisplayStandItemRequesterComponent
	 * Size -> 0x0058 (FullSize[0x0110] - InheritedSize[0x00B8])
	 */
	class UDisplayStandItemRequesterComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_8L76[0x58];                                  // 0x00B8(0x0058) MISSED OFFSET (PADDING)

	public:
		void LoadItemsOnCharacter(class AActor* Actor);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DisplayStandMeatHookRequesterComponent
	 * Size -> 0x0018 (FullSize[0x00D0] - InheritedSize[0x00B8])
	 */
	class UDisplayStandMeatHookRequesterComponent : public UActorComponent
	{
	public:
		class UClass*                                              _meatHookClass;                                          // 0x00B8(0x0008) Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_Q6PH[0x10];                                  // 0x00C0(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DlcHelper
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UDlcHelper : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DoctorPowerAnimStateComponent
	 * Size -> 0x0008 (FullSize[0x00C0] - InheritedSize[0x00B8])
	 */
	class UDoctorPowerAnimStateComponent : public UActorComponent
	{
	public:
		EDoctorAbilityType                                         _abilityType;                                            // 0x00B8(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EDoctorAbilityPhase                                        _abilityPhase;                                           // 0x00B9(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OFXJ[0x6];                                   // 0x00BA(0x0006) MISSED OFFSET (PADDING)

	public:
		void SetCurrentAbilityType(EDoctorAbilityType abilityType);
		void SetCurrentAbilityPhase(EDoctorAbilityPhase abilityPhase);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DragDropOperation_Widget
	 * Size -> 0x00B8 (FullSize[0x0148] - InheritedSize[0x0090])
	 */
	class UDragDropOperation_Widget : public UDragDropOperation
	{
	public:
		class UUMGDragWidget*                                      Widget;                                                  // 0x0090(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UPanelWidget*                                        WidgetParent;                                            // 0x0098(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           StartPosition;                                           // 0x00A0(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           WidgetLocalScale;                                        // 0x00A8(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W3KP[0x18];                                  // 0x00B0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      WidgetLocalOpacity;                                      // 0x00C8(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           OnDropOffset;                                            // 0x00CC(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           OnDragOffset;                                            // 0x00D4(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FAnchors                                            WidgetSlotAnchors;                                       // 0x00DC(0x0010) BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FMargin                                             WidgetSlotOffsets;                                       // 0x00EC(0x0010) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVector2D                                           WidgetSlotPosition;                                      // 0x00FC(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           WidgetSlotSize;                                          // 0x0104(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       WidgetSlotAutoSize;                                      // 0x010C(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NWIF[0x3];                                   // 0x010D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector2D                                           WidgetSlotAlignment;                                     // 0x0110(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WidgetSlotZOrder;                                        // 0x0118(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7Y9C[0x4];                                   // 0x011C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UUMGDragWidget*                                      ChildLinkWidget;                                         // 0x0120(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YJFC[0x20];                                  // 0x0128(0x0020) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.VaultableOutlineUpdateStrategy
	 * Size -> 0x0008 (FullSize[0x0140] - InheritedSize[0x0138])
	 */
	class UVaultableOutlineUpdateStrategy : public USourceBasedOutlineUpdateStrategy
	{
	public:
		bool                                                       _canBeRevealedToLocalPlayer;                             // 0x0138(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_YG5I[0x7];                                   // 0x0139(0x0007) MISSED OFFSET (PADDING)

	public:
		void SetCanBeRevealedToLocalPlayer(bool canBeRevealedToLocalPlayer);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PalletOutlineUpdateStrategy
	 * Size -> 0x0010 (FullSize[0x0150] - InheritedSize[0x0140])
	 */
	class UPalletOutlineUpdateStrategy : public UVaultableOutlineUpdateStrategy
	{
	public:
		struct FLinearColor                                        _revealedByPowerColor;                                   // 0x0140(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DreamPalletOutlineUpdateStrategy
	 * Size -> 0x0028 (FullSize[0x0178] - InheritedSize[0x0150])
	 */
	class UDreamPalletOutlineUpdateStrategy : public UPalletOutlineUpdateStrategy
	{
	public:
		struct FLinearColor                                        _revealedByMapColor;                                     // 0x0150(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_W4WE[0x18];                                  // 0x0160(0x0018) MISSED OFFSET (PADDING)

	public:
		void InitializeTunableValues(class ASlasherPlayer* killer);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DreamSnareOutlineUpdateStrategy
	 * Size -> 0x0010 (FullSize[0x00F0] - InheritedSize[0x00E0])
	 */
	class UDreamSnareOutlineUpdateStrategy : public UDefaultOutlineUpdateStrategy
	{
	public:
		unsigned char                                              UnknownData_Q9MY[0x10];                                  // 0x00E0(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ObjectPlacementValidationStrategy
	 * Size -> 0x0000 (FullSize[0x00B8] - InheritedSize[0x00B8])
	 */
	class UObjectPlacementValidationStrategy : public UActorComponent
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DefaultObjectPlacementValidationStrategy
	 * Size -> 0x0028 (FullSize[0x00E0] - InheritedSize[0x00B8])
	 */
	class UDefaultObjectPlacementValidationStrategy : public UObjectPlacementValidationStrategy
	{
	public:
		struct FVector                                             _objectPlacementRaycastStart;                            // 0x00B8(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FVector                                             _objectPlacementRaycastEnd;                              // 0x00C4(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FFloatRange                                         _objectHeightRangeAroundBaseLocation;                    // 0x00D0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DreamSnareTrapPlacementValidationStrategy
	 * Size -> 0x0010 (FullSize[0x00F0] - InheritedSize[0x00E0])
	 */
	class UDreamSnareTrapPlacementValidationStrategy : public UDefaultObjectPlacementValidationStrategy
	{
	public:
		float                                                      NumberOfGroundTest;                                      // 0x00E0(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      TrapRadius;                                              // 0x00E4(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      MaxElevationDifferentialOnTrapEdge;                      // 0x00E8(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_Z9TE[0x4];                                   // 0x00EC(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DreamworldOnlyComponent
	 * Size -> 0x0018 (FullSize[0x0230] - InheritedSize[0x0218])
	 */
	class UDreamworldOnlyComponent : public USceneComponent
	{
	public:
		unsigned char                                              UnknownData_0OGW[0x8];                                   // 0x0218(0x0008) Fix Super Size
		unsigned char                                              UnknownData_PT48[0x10];                                  // 0x0220(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DynamicGrass
	 * Size -> 0x0018 (FullSize[0x0248] - InheritedSize[0x0230])
	 */
	class ADynamicGrass : public AActor
	{
	public:
		class UMaterialParameterCollection*                        _worldSettings;                                          // 0x0230(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_36N0[0x10];                                  // 0x0238(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DynamicGrassEffectorInterface
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UDynamicGrassEffectorInterface : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.EdgeObjectHandlingStrategy
	 * Size -> 0x0128 (FullSize[0x0158] - InheritedSize[0x0030])
	 */
	class UEdgeObjectHandlingStrategy : public UObject
	{
	public:
		TArray<class UActorSpawner*>                               _edgeObjectSpawners;                                     // 0x0030(0x0010) ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
		TArray<class UActorSpawner*>                               _edgeObjectBlockers;                                     // 0x0040(0x0010) ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_ZOCM[0x108];                                 // 0x0050(0x0108) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.EditorActorVisualization
	 * Size -> 0x0068 (FullSize[0x0280] - InheritedSize[0x0218])
	 */
	class UEditorActorVisualization : public USceneComponent
	{
	public:
		unsigned char                                              ActorVisualization[0x30];                                // 0x0218(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              UnknownData_21B0[0x8];                                   // 0x0248(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          RelativeTransform;                                       // 0x0250(0x0030) Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.EditorMeshVisualization
	 * Size -> 0x0068 (FullSize[0x0280] - InheritedSize[0x0218])
	 */
	class UEditorMeshVisualization : public USceneComponent
	{
	public:
		unsigned char                                              MeshVisualization[0x30];                                 // 0x0218(0x0030) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              UnknownData_G1NQ[0x8];                                   // 0x0248(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          RelativeTransform;                                       // 0x0250(0x0030) Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.EffectsLocator
	 * Size -> 0x0068 (FullSize[0x0298] - InheritedSize[0x0230])
	 */
	class AEffectsLocator : public AActor
	{
	public:
		TArray<struct FEffectsLocatorTargets>                      AffectedActors;                                          // 0x0230(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		float                                                      ActorCaptureRadius;                                      // 0x0240(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HLGE[0x4];                                   // 0x0244(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              _encountered[0x50];                                      // 0x0248(0x0050) UNKNOWN PROPERTY: SetProperty

	public:
		void OnLostActor(class AActor* lostActor);
		void OnLeaveCollisionArea(class AActor* OverlappedActor, class AActor* OtherActor);
		void OnFoundActor(class AActor* foundActor);
		void OnEnterCollisionArea(class AActor* OverlappedActor, class AActor* OtherActor);
		void OnActorTick(class UMaterialInstanceDynamic* actorMaterialInstanceDynamic);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.EmblemRankContainer
	 * Size -> 0x0210 (FullSize[0x0248] - InheritedSize[0x0038])
	 */
	class UEmblemRankContainer : public UGameInstanceSubsystem
	{
	public:
		unsigned char                                              UnknownData_V7WV[0x210];                                 // 0x0038(0x0210) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.EmblemRankUtilities
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UEmblemRankUtilities : public UBlueprintFunctionLibrary
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.EmblemTooltipWidget
	 * Size -> 0x0058 (FullSize[0x03C8] - InheritedSize[0x0370])
	 */
	class UEmblemTooltipWidget : public UBaseTooltipWidget
	{
	public:
		class UImage*                                              HeaderBackground;                                        // 0x0370(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          SubTitleLabel;                                           // 0x0378(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              HeaderSmoke;                                             // 0x0380(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UVerticalBox*                                        DataContainer;                                           // 0x0388(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGTallyEmblemProgressBar*                          TallyEmblemProgressBar;                                  // 0x0390(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              ProgressionDataWidgetClass[0x30];                        // 0x0398(0x0030) UNKNOWN PROPERTY: SoftClassProperty

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.EndGameComponent
	 * Size -> 0x00A0 (FullSize[0x0158] - InheritedSize[0x00B8])
	 */
	class UEndGameComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_7I5G[0xA0];                                  // 0x00B8(0x00A0) MISSED OFFSET (PADDING)

	public:
		void UnpauseEndGameTimer();
		void StartEndGame_Cheat();
		void PauseEndGameTimer();
		bool GetHasEndGameBegun();
		void FireEndGameSacrificeScoreEvent(const struct FGameEventData& GameEventData);
		void DisableEndGameScenario();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.EndGameEntity
	 * Size -> 0x0008 (FullSize[0x0238] - InheritedSize[0x0230])
	 */
	class AEndGameEntity : public AActor
	{
	public:
		class UDBDSkeletalMeshComponentBudgeted*                   _skeletalMeshComponent;                                  // 0x0230(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.EndGameEntityAnimInstance
	 * Size -> 0x0010 (FullSize[0x02D0] - InheritedSize[0x02C0])
	 */
	class UEndGameEntityAnimInstance : public UAnimInstance
	{
	public:
		bool                                                       _isFront;                                                // 0x02C0(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _isBack;                                                 // 0x02C1(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_JKSG[0xE];                                   // 0x02C2(0x000E) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.EndGameStateComponent
	 * Size -> 0x0068 (FullSize[0x0120] - InheritedSize[0x00B8])
	 */
	class UEndGameStateComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_BW65[0xC];                                   // 0x00B8(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       _isEndGameOver;                                          // 0x00C4(0x0001) Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_BLX9[0x3];                                   // 0x00C5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      _worldTimeAtLastModification;                            // 0x00C8(0x0004) Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_EC41[0x44];                                  // 0x00CC(0x0044) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      _timeDilation;                                           // 0x0110(0x0004) Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _isTimerPaused;                                          // 0x0114(0x0001) Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_UOXR[0x3];                                   // 0x0115(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      _normalTotalTimeElapsedAtLastTimeModification;           // 0x0118(0x0004) Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		EEndGameScenarioTrigger                                    _endGameScenarioTrigger;                                 // 0x011C(0x0001) Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_8C9C[0x3];                                   // 0x011D(0x0003) MISSED OFFSET (PADDING)

	public:
		void OnRep_WorldTimeAtLastDilationModification();
		void OnRep_TimeDilation();
		void OnRep_IsTimerPaused();
		void OnRep_IsEndGameOver();
		void Multicast_SetIsInEndGameSimulation(bool endGameSimulation);
		bool IsTimerSlowedDown();
		bool IsEndGameOver();
		bool HasEndGameBegun();
		float GetElapsedTimePercent();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.EnduranceVFXComponent
	 * Size -> 0x0020 (FullSize[0x00D8] - InheritedSize[0x00B8])
	 */
	class UEnduranceVFXComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_PU8O[0x20];                                  // 0x00B8(0x0020) MISSED OFFSET (PADDING)

	public:
		void ShowHighlight(class UGameplayModifierContainer* preventKOSource);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.EnergyPoweredInterface
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UEnergyPoweredInterface : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.EnsureLoggingSubsystem
	 * Size -> 0x0038 (FullSize[0x0070] - InheritedSize[0x0038])
	 */
	class UEnsureLoggingSubsystem : public UGameInstanceSubsystem
	{
	public:
		unsigned char                                              UnknownData_ASEC[0x38];                                  // 0x0038(0x0038) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.Entity
	 * Size -> 0x0020 (FullSize[0x0250] - InheritedSize[0x0230])
	 */
	class AEntity : public AActor
	{
	public:
		class UCurveFloat*                                         _dissolveCurve;                                          // 0x0230(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UCurveFloat*                                         _revealsCurve;                                           // 0x0238(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UMaterialHelper*                                     _materialHelper;                                         // 0x0240(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class USkeletalMeshComponent*                              _skeletalMesh;                                           // 0x0248(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void SetAnimationStrugglePercent(float percent);
		void SetAnimationIsStruggling(bool isStruggling);
		void OnReactionStart();
		void InitEntity(class AMeatHook* MeatHook);
		void HideEntity();
		void CompleteSacrifice(bool isBasementHook);
		void ChangeToStruggleState();
		void ChangeToSacrificeState();
		void ChangeToIdleState();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.EnvironmentAnimatedObject
	 * Size -> 0x0000 (FullSize[0x02B8] - InheritedSize[0x02B8])
	 */
	class AEnvironmentAnimatedObject : public ASkeletalMeshActorBudgeted
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PlayerProfileDAL
	 * Size -> 0x0058 (FullSize[0x0088] - InheritedSize[0x0030])
	 */
	class UPlayerProfileDAL : public UObject
	{
	public:
		unsigned char                                              UnknownData_TBSW[0x58];                                  // 0x0030(0x0058) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.EpicProfileDAL
	 * Size -> 0x0000 (FullSize[0x0088] - InheritedSize[0x0088])
	 */
	class UEpicProfileDAL : public UPlayerProfileDAL
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.EscapeBlocker
	 * Size -> 0x0038 (FullSize[0x0268] - InheritedSize[0x0230])
	 */
	class AEscapeBlocker : public AActor
	{
	public:
		unsigned char                                              UnknownData_BOC9[0x8];                                   // 0x0230(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBoxComponent*                                       _camperBlocker;                                          // 0x0238(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UBoxComponent*                                       _playerDetectionZone;                                    // 0x0240(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_Z28Z[0x20];                                  // 0x0248(0x0020) MISSED OFFSET (PADDING)

	public:
		void SetPlayerDetectionZone(class UBoxComponent* playerDetectionZone);
		void SetCamperBlocker(class UBoxComponent* camperBlocker);
		void OnPlayerDetectionZoneEndOverlap(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex);
		void OnPlayerDetectionZoneBeginOverlap(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
		void DeactivatePlayerBlockerFX();
		void ActivatePlayerBlockerFX();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.EscapeDoor
	 * Size -> 0x00F0 (FullSize[0x0418] - InheritedSize[0x0328])
	 */
	class AEscapeDoor : public AInteractable
	{
	public:
		unsigned char                                              UnknownData_T3PC[0x8];                                   // 0x0328(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FVector>                                     EscapePositions;                                         // 0x0330(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class UObject*>                                     EscapeFire;                                              // 0x0340(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		class UChargeableComponent*                                _killerOpenChargeable;                                   // 0x0350(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UChargeableComponent*                                _openChargeable;                                         // 0x0358(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAkComponent*                                        _ak_audio_escape;                                        // 0x0360(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UEscapeDoorAnimInstance*                             _escapeDoorAnimInstance;                                 // 0x0368(0x0008) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USceneComponent*                                     _rootComponent;                                          // 0x0370(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _activated;                                              // 0x0378(0x0001) Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_PD5A[0x7];                                   // 0x0379(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USpotLightComponent*                                 _spotlight;                                              // 0x0380(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_2IOH[0x48];                                  // 0x0388(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<TWeakObjectPtr<class ACamperPlayer>>                _localOverlappingSurvivors;                              // 0x03D0(0x0010) ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_BB7X[0x8];                                   // 0x03E0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAIPerceptionStimuliSourceComponent*                 _perceptionStimuliComponent;                             // 0x03E8(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UBlockableComponent*                                 _doorSwitchBlockableComponent;                           // 0x03F0(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_7COS[0x20];                                  // 0x03F8(0x0020) MISSED OFFSET (PADDING)

	public:
		void StartAtlantaDoorOpeningSound();
		void StartAtlantaDoorBeepingSound();
		void SetIsActivated(bool IsActivated);
		void OnUnblockDoorSwitchCosmetic();
		void OnRep_Activated(bool oldActivated);
		void OnPlayerExitExitArea(class ADBDPlayer* Player);
		void OnPlayerEnterExitArea(class ADBDPlayer* Player);
		void OnExitOpenChanged(bool OPENED);
		void OnExitGateOpened(class ADBDPlayer* Player);
		void OnExitActivationChanged(bool activated);
		void OnEscapeZoneEndOverlap(class AActor* overlappingActor);
		void OnEscapeZoneBeginOverlap(class AActor* overlappingActor);
		void OnCamperStartOpeningExitGate(class ACamperPlayer* Player);
		void OnBlockDoorSwitchCosmetic();
		void LightAllLights();
		bool IsDoorSwitchBlocked();
		bool IsActivated();
		class USceneComponent* GetSwitchSceneComponent();
		struct FVector GetParadiseServerLocation();
		float GetOpenTime();
		class UChargeableInteractionDefinition* GetOpenEscapeInteraction();
		bool GetIsOpen();
		class UBoxComponent* GetExitArea();
		struct FVector GetEscapeSwitchFloorLocation();
		class USkeletalMeshComponent* GetDoorSkeletalMeshComponent();
		bool GetAtlantaExitOpeningIndicatorVisibility();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.EscapeDoorAnimInstance
	 * Size -> 0x0010 (FullSize[0x02E0] - InheritedSize[0x02D0])
	 */
	class UEscapeDoorAnimInstance : public USleepingAnimInstance
	{
	public:
		bool                                                       _isOpen;                                                 // 0x02D0(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _isOpenByKiller;                                         // 0x02D1(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_Y5S9[0xE];                                   // 0x02D2(0x000E) MISSED OFFSET (PADDING)

	public:
		void SetIsOpenByKiller(bool isOpenByKiller);
		void SetIsOpen(bool IsOpen);
		void PlaySound(class UAkAudioEvent* AkEvent);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.EscapeOutlineUpdateStrategy
	 * Size -> 0x0020 (FullSize[0x00E0] - InheritedSize[0x00C0])
	 */
	class UEscapeOutlineUpdateStrategy : public UOutlineUpdateStrategy
	{
	public:
		struct FLinearColor                                        _doorOpenColorForSurvivor;                               // 0x00C0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FLinearColor                                        _doorOpenColorForKiller;                                 // 0x00D0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.EscapeRequirementTracker
	 * Size -> 0x0038 (FullSize[0x0068] - InheritedSize[0x0030])
	 */
	class UEscapeRequirementTracker : public UObject
	{
	public:
		TArray<class AGenerator*>                                  _escapeGenerators;                                       // 0x0030(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		class ADBDGameState*                                       _dbdGameState;                                           // 0x0040(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_Y615[0x20];                                  // 0x0048(0x0020) MISSED OFFSET (PADDING)

	public:
		void OnGameEventDispatched(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.EscapeThroughHatch
	 * Size -> 0x0000 (FullSize[0x0620] - InheritedSize[0x0620])
	 */
	class UEscapeThroughHatch : public UBaseEscapeThroughHatch
	{
	public:
		void OnCamperEscapeThroughHatch(class ACamperPlayer* Player);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.EscapeTile
	 * Size -> 0x0008 (FullSize[0x0350] - InheritedSize[0x0348])
	 */
	class AEscapeTile : public ATile
	{
	public:
		unsigned char                                              UnknownData_6LYG[0x8];                                   // 0x0348(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.EventEntryPopupScreen
	 * Size -> 0x0000 (FullSize[0x0140] - InheritedSize[0x0140])
	 */
	class UEventEntryPopupScreen : public UGenericPopupScreen
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.EventObjectComponent
	 * Size -> 0x0010 (FullSize[0x00C8] - InheritedSize[0x00B8])
	 */
	class UEventObjectComponent : public UActorComponent
	{
	public:
		class FName                                                _eventId;                                                // 0x00B8(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_DZ93[0x4];                                   // 0x00C4(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.EventGeneratorComponent
	 * Size -> 0x0020 (FullSize[0x00E8] - InheritedSize[0x00C8])
	 */
	class UEventGeneratorComponent : public UEventObjectComponent
	{
	public:
		struct FGameplayTag                                        _genCompletedScoreEvent;                                 // 0x00C8(0x000C) Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FGameplayTag                                        _genCompletedNoOfferingScoreEvent;                       // 0x00D4(0x000C) Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		EOfferingEffectType                                        _offeringEffectTypeNeeded;                               // 0x00E0(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _updateOutlineForSurvivor;                               // 0x00E1(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _updateOutlineForSlasher;                                // 0x00E2(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_90AJ[0x5];                                   // 0x00E3(0x0005) MISSED OFFSET (PADDING)

	public:
		void Authority_FireGenCompletedEventScore(bool isAutoCompleted);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.EventHookComponent
	 * Size -> 0x0018 (FullSize[0x00E0] - InheritedSize[0x00C8])
	 */
	class UEventHookComponent : public UEventObjectComponent
	{
	public:
		unsigned char                                              UnknownData_FZ9L[0x10];                                  // 0x00C8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       _updateOutlineForSurvivor;                               // 0x00D8(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _updateOutlineForSlasher;                                // 0x00D9(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_8JE0[0x6];                                   // 0x00DA(0x0006) MISSED OFFSET (PADDING)

	public:
		void SetOutlineCarryingColorToDefault();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.EventsFactory
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UEventsFactory : public UGameInstanceSubsystem
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.EvilWithinComponent
	 * Size -> 0x0080 (FullSize[0x0138] - InheritedSize[0x00B8])
	 */
	class UEvilWithinComponent : public UActorComponent
	{
	public:
		class FScriptMulticastDelegate                             OnTierChange;                                            // 0x00B8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		int32_t                                                    _currentTier;                                            // 0x00C8(0x0004) Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _lastTierTimeStart;                                      // 0x00CC(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_7ZHN[0x58];                                  // 0x00D0(0x0058) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FString>                                      _allowedSurvivorInteractionsForKill;                     // 0x0128(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate

	public:
		void OnRep_CurrentTier(int32_t previousTier);
		void OnLevelReadyToPlay();
		bool IsAtLastTier();
		float GetRequirementForTier(int32_t tier);
		float GetPercentStalkingPointsInCurrentTier();
		int32_t GetMaxTier();
		int32_t GetCurrentTier();
		bool CanStandKill(class ADBDPlayer* Player);
		bool CanBeStandingKilled(class ADBDPlayer* Player);
		void Authority_OnStalkPointsAdded(float stalkPoints);
		void Authority_OnPlayerDisconnect(class ADBDPlayer* Player);
		void Authority_NotifyKill(class ADBDPlayer* killedPlayer);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.RestrictedPlacementAreaStrategy
	 * Size -> 0x0070 (FullSize[0x00A0] - InheritedSize[0x0030])
	 */
	class URestrictedPlacementAreaStrategy : public UObject
	{
	public:
		unsigned char                                              UnknownData_FIBA[0x10];                                  // 0x0030(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDBDTunableRowHandle                                RestrictedRadius;                                        // 0x0040(0x0028) Edit, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_XVM8[0x4];                                   // 0x0068(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       _useTunableForHeight;                                    // 0x006C(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_H11I[0x3];                                   // 0x006D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      _maxHeightRestriction;                                   // 0x0070(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_D9N4[0x4];                                   // 0x0074(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDBDTunableRowHandle                                _maxHeightRestrictionTunable;                            // 0x0078(0x0028) Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ExitGateSwitchesRestrictedPlacementAreaStrategy
	 * Size -> 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
	 */
	class UExitGateSwitchesRestrictedPlacementAreaStrategy : public URestrictedPlacementAreaStrategy
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ExitOpenedIndicatorWidget
	 * Size -> 0x0000 (FullSize[0x0380] - InheritedSize[0x0380])
	 */
	class UExitOpenedIndicatorWidget : public UBaseIndicatorWidget
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ExposerCirclingComponent
	 * Size -> 0x0058 (FullSize[0x0270] - InheritedSize[0x0218])
	 */
	class UExposerCirclingComponent : public USceneComponent
	{
	public:
		unsigned char                                              UnknownData_3DZO[0x4];                                   // 0x0218(0x0004) Fix Super Size
		float                                                      MinHeight;                                               // 0x021C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxHeight;                                               // 0x0220(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinRadius;                                               // 0x0224(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxRadius;                                               // 0x0228(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CirclingSpeed;                                           // 0x022C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DistanceBetweenPoints;                                   // 0x0230(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BezierModifier;                                          // 0x0234(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Samples;                                                 // 0x0238(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7FEO[0x34];                                  // 0x023C(0x0034) MISSED OFFSET (PADDING)

	public:
		void SetIsCircling(bool circling);
		void Reset();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ExposerInteriorZoneComponent
	 * Size -> 0x0018 (FullSize[0x04C0] - InheritedSize[0x04A8])
	 */
	class UExposerInteriorZoneComponent : public UBoxComponent
	{
	public:
		TArray<class USceneComponent*>                             ExposerSpawnPoints;                                      // 0x04A8(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OBO1[0x8];                                   // 0x04B8(0x0008) MISSED OFFSET (PADDING)

	public:
		void AddExposerSpawnPoint(class USceneComponent* Point);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.Fadeable
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UFadeable : public UInterface
	{
	public:
		void OnFadeEnd(class AActor* Other);
		void OnFadeBegin(class AActor* Other);
		void OnAlphaChanged(float newAlpha, class AActor* Other);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.FakeKillerHuskInterface
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UFakeKillerHuskInterface : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.FasterChestSearch
	 * Size -> 0x0000 (FullSize[0x0350] - InheritedSize[0x0350])
	 */
	class UFasterChestSearch : public UStatusEffect
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.FearMarketManager
	 * Size -> 0x00E0 (FullSize[0x0110] - InheritedSize[0x0030])
	 */
	class UFearMarketManager : public UObject
	{
	public:
		struct FFearMarketItemInstance                             PendingPurchaseFearMarketItem;                           // 0x0030(0x0030) NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DGOW[0x48];                                  // 0x0060(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FFearMarketOfferingInstance                         _existingFearMarket;                                     // 0x00A8(0x0020) NativeAccessSpecifierPrivate
		TWeakObjectPtr<class UDBDGameInstance>                     _gameInstance;                                           // 0x00C8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_GPQF[0x40];                                  // 0x00D0(0x0040) MISSED OFFSET (PADDING)

	public:
		void ReceivedFearMarketData(bool success);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.FearMarketPopupScreen
	 * Size -> 0x0000 (FullSize[0x0140] - InheritedSize[0x0140])
	 */
	class UFearMarketPopupScreen : public UGenericPopupScreen
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.FinisherMoriTrackerComponent
	 * Size -> 0x0030 (FullSize[0x00E8] - InheritedSize[0x00B8])
	 */
	class UFinisherMoriTrackerComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_3HBD[0x18];                                  // 0x00B8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class ACamperPlayer*>                               _survivorsDowned;                                        // 0x00D0(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_E83I[0x8];                                   // 0x00E0(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.Firecracker
	 * Size -> 0x0058 (FullSize[0x0380] - InheritedSize[0x0328])
	 */
	class AFirecracker : public AInteractable
	{
	public:
		unsigned char                                              UnknownData_ITCJ[0x18];                                  // 0x0328(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USphereComponent*                                    _effectArea;                                             // 0x0340(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       DebugDisplayEnabled;                                     // 0x0348(0x0001) Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_X3BL[0x7];                                   // 0x0349(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UGameplayModifierContainer*>                  _effectModifiers;                                        // 0x0350(0x0010) BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected
		class ADBDPlayer*                                          _playerOwner;                                            // 0x0360(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _isExploding;                                            // 0x0368(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_NZ15[0x7];                                   // 0x0369(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class AActor*>                                      _actorsInRange;                                          // 0x0370(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate

	public:
		bool ShouldDeafen(class ADBDPlayer* Player, float* outDuration);
		bool ShouldBlind(class ADBDPlayer* Player, float* outDuration);
		void OnFuseBurnUpdate(float DeltaSeconds, float fuseTimeLeftPercent);
		void OnFuseBurnExit();
		void OnFuseBurnEnter();
		void OnExplode();
		void OnEffectsInitialized();
		void Multicast_InitFromSpawner(class ACollectable* spawner);
		bool HasModifierOfType(const struct FGameplayTag& Type);
		bool HasFlag(const struct FGameplayTag& flag);
		float GetModifierValue(const struct FGameplayTag& Type);
		float GetExplosionRange();
		float GetExplosionEffectDuration();
		float GetExplosionDelay();
		bool GetExploded();
		TArray<class UGameplayModifierContainer*> GetEffects();
		float GetDeafnessEffectDuration(class ADBDPlayer* Player);
		float GetBlindnessEffectDuration(class AActor* Player);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.FirecrackerEffectHandlerComponent
	 * Size -> 0x0070 (FullSize[0x0128] - InheritedSize[0x00B8])
	 */
	class UFirecrackerEffectHandlerComponent : public UActorComponent
	{
	public:
		class FScriptMulticastDelegate                             OnFirecrackerInRangeBegin;                               // 0x00B8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnFirecrackerInRangeEnd;                                 // 0x00C8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              _inRangeFirecrackers[0x50];                              // 0x00D8(0x0050) UNKNOWN PROPERTY: SetProperty

	public:
		void OnFirecrackerDestroyed(class AActor* DestroyedActor);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.FirecrackerScoreComponent
	 * Size -> 0x0000 (FullSize[0x00B8] - InheritedSize[0x00B8])
	 */
	class UFirecrackerScoreComponent : public UActorComponent
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.FirecrackerStateMachine
	 * Size -> 0x0000 (FullSize[0x0130] - InheritedSize[0x0130])
	 */
	class UFirecrackerStateMachine : public UStateMachine
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.FirstPersonViewComponent
	 * Size -> 0x0010 (FullSize[0x00C8] - InheritedSize[0x00B8])
	 */
	class UFirstPersonViewComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_LLXB[0x10];                                  // 0x00B8(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.FleeComponent
	 * Size -> 0x0020 (FullSize[0x00D8] - InheritedSize[0x00B8])
	 */
	class UFleeComponent : public UActorComponent
	{
	public:
		class AActor*                                              _threat;                                                 // 0x00B8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_2Q2Y[0x18];                                  // 0x00C0(0x0018) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.FlickeringLight
	 * Size -> 0x03A8 (FullSize[0x0600] - InheritedSize[0x0258])
	 */
	class AFlickeringLight : public AGeneratorDrivenActor
	{
	public:
		EFlickeringLightType                                       _lightComponentType;                                     // 0x0258(0x0001) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_WJEK[0x3];                                   // 0x0259(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		EDetailMode                                                _detailLevelBeforeCastShadows;                           // 0x025C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FPerPlatformBool                                    _castShadow;                                             // 0x025D(0x0001) NoDestructor, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_74MO[0x2];                                   // 0x025E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FBHVRPerDetailModeBool                              _isCastingShadow;                                        // 0x0260(0x00A0) Edit, NativeAccessSpecifierPrivate
		struct FBHVRPerDetailModeFloat                             _maxDrawDistance;                                        // 0x0300(0x00A0) Edit, NativeAccessSpecifierPrivate
		struct FBHVRPerDetailModeFloat                             _maxDistanceFadeRange;                                   // 0x03A0(0x00A0) Edit, NativeAccessSpecifierPrivate
		struct FBHVRPerDetailModeBool                              _castCinematicShadowsOnly;                               // 0x0440(0x00A0) Edit, NativeAccessSpecifierPrivate
		float                                                      _innerConneAngle;                                        // 0x04E0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _outerConneAngle;                                        // 0x04E4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _sourceLength;                                           // 0x04E8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _sourceRadius;                                           // 0x04EC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _intensity;                                              // 0x04F0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _generatorActivated;                                     // 0x04F4(0x0001) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _isTimelineSpeedRandom;                                  // 0x04F5(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_5CJC[0x2];                                   // 0x04F6(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      _maximumTimelimeSpeed;                                   // 0x04F8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _minimumTimelimeSpeed;                                   // 0x04FC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FBHVRPerDetailModeBool                              _secondaryLightVisibility;                               // 0x0500(0x00A0) Edit, NativeAccessSpecifierPrivate
		float                                                      _secondaryLightIntensity;                                // 0x05A0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FVector                                             _secondaryLightTransform;                                // 0x05A4(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FRotator                                            _secondaryLightRotation;                                 // 0x05B0(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate
		float                                                      _secondaryLightAttenuationRadius;                        // 0x05BC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FLinearColor                                        _secondaryLightColor;                                    // 0x05C0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _secondaryLightSpecularScale;                            // 0x05D0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _isAlwaysCapturedAsON : 1;                               // 0x05D4(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_VIUC[0x3];                                   // 0x05D5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ULightIntensityTimelineComponent*                    _lightIntensityTimeline;                                 // 0x05D8(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UPointLightComponent*                                _pointLightComponent;                                    // 0x05E0(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UPointLightComponent*                                _secondaryPointLightComponent;                           // 0x05E8(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class URectLightComponent*                                 _rectLightComponent;                                     // 0x05F0(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class USpotLightComponent*                                 _spotLightComponent;                                     // 0x05F8(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void StopFlickering();
		void StartFlickering();
		void Init();
		bool GetSecondaryLightVisibilty();
		class ULocalLightComponent* GetSecondaryLightComponent();
		class ULocalLightComponent* GetActiveLightComponent();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.FoliageActor
	 * Size -> 0x0008 (FullSize[0x0238] - InheritedSize[0x0230])
	 */
	class AFoliageActor : public AActor
	{
	public:
		class UFoliageDensityHISM*                                 _foliageHISM;                                            // 0x0230(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.FoliageDensityContainer
	 * Size -> 0x00F8 (FullSize[0x0328] - InheritedSize[0x0230])
	 */
	class AFoliageDensityContainer : public AActor
	{
	public:
		TMap<class FName, class AFoliageActor*>                    _foliageActors;                                          // 0x0230(0x0050) NativeAccessSpecifierPrivate
		TMap<class FName, class UFoliageDensityHISM*>              _foliageHISMs;                                           // 0x0280(0x0050) ExportObject, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_4GND[0x50];                                  // 0x02D0(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UDBDMapFoliageDensityTunables*                       _mapFoliageDensityTunables;                              // 0x0320(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.FoliageDensityHISM
	 * Size -> 0x0008 (FullSize[0x06F0] - InheritedSize[0x06E8])
	 */
	class UFoliageDensityHISM : public UHierarchicalInstancedStaticMeshComponent
	{
	public:
		unsigned char                                              UnknownData_CFSY[0x8];                                   // 0x06E8(0x0008) Fix Super Size

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.FranklinsDemiseConsumedByEntityComponent
	 * Size -> 0x0078 (FullSize[0x0130] - InheritedSize[0x00B8])
	 */
	class UFranklinsDemiseConsumedByEntityComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_IEKJ[0x18];                                  // 0x00B8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTimerObject*                                        _consumeTimer;                                           // 0x00D0(0x0008) ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_9ZT4[0x10];                                  // 0x00D8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UStatusEffect*                                       _camperStatus;                                           // 0x00E8(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class ADBDPlayer*                                          _previousOwner;                                          // 0x00F0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class ADBDPlayer*                                          _originatingPerkOwner;                                   // 0x00F8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UChargerComponent*                                   _itemChargerComponent;                                   // 0x0100(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_QYLH[0x28];                                  // 0x0108(0x0028) MISSED OFFSET (PADDING)

	public:
		void OnRep_ConsumeTimer();
		void OnConsumedByEntity();
		void Authority_StartConsume(float Duration, class ADBDPlayer* previousOwner, class ADBDPlayer* Slasher);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.FrenzyData
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UFrenzyData : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.FriendManager
	 * Size -> 0x0238 (FullSize[0x0268] - InheritedSize[0x0030])
	 */
	class UFriendManager : public UObject
	{
	public:
		unsigned char                                              UnknownData_BYRR[0x238];                                 // 0x0030(0x0238) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.FriendSearchPopupScreen
	 * Size -> 0x0060 (FullSize[0x01A0] - InheritedSize[0x0140])
	 */
	class UFriendSearchPopupScreen : public UGenericPopupScreen
	{
	public:
		unsigned char                                              UnknownData_TMYI[0x60];                                  // 0x0140(0x0060) MISSED OFFSET (PADDING)

	public:
		void OnUnblockPlayer(const class FString& friendKrakenID);
		void OnInviteFriend(const class FString& friendKrakenID, bool IsOffNetwork);
		void OnFriendSearchStart(const class FString& SearchText);
		void OnAcceptFriendInvite(const class FString& friendKrakenID);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.FriendsListScreen
	 * Size -> 0x0120 (FullSize[0x0240] - InheritedSize[0x0120])
	 */
	class UFriendsListScreen : public UScreenBase
	{
	public:
		unsigned char                                              UnknownData_F1OU[0x120];                                 // 0x0120(0x0120) MISSED OFFSET (PADDING)

	public:
		void OnViewProfile(const class FString& friendId);
		void OnUnblockPlayer(const class FString& playerID);
		void OnShowNameSelected(const class FString& playerID);
		void OnSendPartyInvite(const class FString& friendId);
		void OnSearchForFriend();
		void OnRemoveFriend(const class FString& friendId);
		void OnPartyJoinRequest(const class FString& friendId);
		void OnHideNameSelected(const class FString& playerID);
		void OnDeclineFriendInvite(const class FString& friendId);
		void OnCancelFriendInvite(const class FString& friendId);
		void OnBlockPlayer(const class FString& playerID);
		void OnAcceptFriendInvite(const class FString& friendId);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.GachaCrateManager
	 * Size -> 0x00A0 (FullSize[0x00D8] - InheritedSize[0x0038])
	 */
	class UGachaCrateManager : public UGameInstanceSubsystem
	{
	public:
		unsigned char                                              UnknownData_96ZX[0xA0];                                  // 0x0038(0x00A0) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.GameAssetLibrary
	 * Size -> 0x0018 (FullSize[0x00C8] - InheritedSize[0x00B0])
	 */
	class UGameAssetLibrary : public UAssetLibrary
	{
	public:
		class UDBDGameInstance*                                    _gameInstance;                                           // 0x00B0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_8CTT[0x10];                                  // 0x00B8(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.OngoingGameEvent
	 * Size -> 0x0070 (FullSize[0x00A0] - InheritedSize[0x0030])
	 */
	class UOngoingGameEvent : public UObject
	{
	public:
		struct FGameEventData                                      _eventData;                                              // 0x0030(0x0028) Transient, NoDestructor, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_378J[0x48];                                  // 0x0058(0x0048) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.GameEventDispatcher
	 * Size -> 0x00B0 (FullSize[0x00E8] - InheritedSize[0x0038])
	 */
	class UGameEventDispatcher : public UGameInstanceSubsystem
	{
	public:
		unsigned char                                              UnknownData_LH2C[0x50];                                  // 0x0038(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UOngoingGameEvent*>                           _ongoingEvents;                                          // 0x0088(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_D9E9[0x50];                                  // 0x0098(0x0050) MISSED OFFSET (PADDING)

	public:
		void UnregisterListener(const struct FGameEventDispatcherHandleBP& GameEventDispatcherHandle);
		void RemotelyDispatch(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
		void RegisterListener(const struct FGameEventDispatcherHandleBP& GameEventDispatcherHandle);
		void LocallyDispatch(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
		void Authority_RemotelyDispatch(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
		void Authority_AccumulateOngoingGameEvent(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData, float OngoingWaitTime);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.GameEventListenerCollectionComponent
	 * Size -> 0x0018 (FullSize[0x00D0] - InheritedSize[0x00B8])
	 */
	class UGameEventListenerCollectionComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_3KTD[0x18];                                  // 0x00B8(0x0018) MISSED OFFSET (PADDING)

	public:
		void UnlistenToGameEvent(const struct FGameplayTag& EventType);
		void UnlistenToAllGameEvents();
		void ListenToGameEvent(const struct FGameplayTag& EventType, const class FScriptDelegate& delegateToBind);
		void AttachGameEventDispatcher(class UGameEventDispatcher* GameEventDispatcher);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.GameEventTracker
	 * Size -> 0x0038 (FullSize[0x0068] - InheritedSize[0x0030])
	 */
	class UGameEventTracker : public UObject
	{
	public:
		class FScriptMulticastDelegate                             OnGameplayEvent;                                         // 0x0030(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnGameflowEvent;                                         // 0x0040(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B7MS[0x18];                                  // 0x0050(0x0018) MISSED OFFSET (PADDING)

	public:
		void FireGameflowEvent(EDBDScoreTypes EventType, float Amount, class ADBDPlayerState* Instigator, const class FName& Data);
		void FireGameEvent(EDBDScoreTypes EventType, float Amount, class AActor* Instigator, class AActor* Target);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.GameFlowContextSystem
	 * Size -> 0x00F0 (FullSize[0x0128] - InheritedSize[0x0038])
	 */
	class UGameFlowContextSystem : public UGameInstanceSubsystem
	{
	public:
		unsigned char                                              UnknownData_BRZK[0xD8];                                  // 0x0038(0x00D8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class URootMovie*                                          m_RootMovie;                                             // 0x0110(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_CX0C[0x10];                                  // 0x0118(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.GameplayModifierContainerDataAsset
	 * Size -> 0x0040 (FullSize[0x0088] - InheritedSize[0x0048])
	 */
	class UGameplayModifierContainerDataAsset : public UDBDPrimaryDataAsset
	{
	public:
		unsigned char                                              ModifierContainerComponent[0x30];                        // 0x0048(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              RequiredModifierContainers[0x10];                        // 0x0078(0x0010) UNKNOWN PROPERTY: ArrayProperty

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.GameplayModifierFunctionLibrary
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UGameplayModifierFunctionLibrary : public UBlueprintFunctionLibrary
	{
	public:
		void STATIC_Authority_SetPlayerGameplayModifier(class ADBDPlayer* TargetPlayer, const struct FGameplayTag& modifierType, float ModifierValue);
		void STATIC_Authority_SetPlayerGameplayFlag(class ADBDPlayer* TargetPlayer, const struct FGameplayTag& flagType);
		void STATIC_Authority_ClearPlayerGameplayModifier(class ADBDPlayer* TargetPlayer, const struct FGameplayTag& modifierType);
		void STATIC_Authority_ClearPlayerGameplayFlag(class ADBDPlayer* TargetPlayer, const struct FGameplayTag& flagType);
		void STATIC_Authority_ClearAllPlayerGameplayModifiers(class ADBDPlayer* TargetPlayer);
		void STATIC_Authority_ClearAllPlayerGameplayFlags(class ADBDPlayer* TargetPlayer);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.GameplayModifierFunctionLibraryStatusEffect
	 * Size -> 0x0000 (FullSize[0x0350] - InheritedSize[0x0350])
	 */
	class UGameplayModifierFunctionLibraryStatusEffect : public UStatusEffect
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.GameplayNotificationManager
	 * Size -> 0x0028 (FullSize[0x00E0] - InheritedSize[0x00B8])
	 */
	class UGameplayNotificationManager : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_4RDI[0x28];                                  // 0x00B8(0x0028) MISSED OFFSET (PADDING)

	public:
		void Multicast_FireGameplayNotification(class UGameplayModifierContainer* modifierContainer, bool addToHistory);
		void FireGameplayNotification(const struct FGameplayNotificationData& notificationData, bool addToHistory);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.GameplayNotificationUtilities
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UGameplayNotificationUtilities : public UBlueprintFunctionLibrary
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.GateFactory
	 * Size -> 0x0000 (FullSize[0x0230] - InheritedSize[0x0230])
	 */
	class AGateFactory : public AActor
	{
	public:
		class AGate* GetGate(EGateType GateType);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CoopRepairTracker
	 * Size -> 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
	 */
	class UCoopRepairTracker : public UObject
	{
	public:
		TArray<class ADBDPlayer*>                                  _coopRepairerHistory;                                    // 0x0030(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate

	public:
		void SetHasEverCoopRepaired(class ADBDPlayer* Player);
		bool HasEverCoopRepaired(class ADBDPlayer* Player);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.Generator
	 * Size -> 0x02B0 (FullSize[0x05D8] - InheritedSize[0x0328])
	 */
	class AGenerator : public AInteractable
	{
	public:
		unsigned char                                              UnknownData_RKUP[0x10];                                  // 0x0328(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       activated;                                               // 0x0338(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsRepaired;                                              // 0x0339(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       WasASMCachePreWarmTriggered;                             // 0x033A(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsPlaySkillcheckAesthetic;                               // 0x033B(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2MFO[0x4];                                   // 0x033C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveLinearColor*                                   KillerOutlineFadeCurve;                                  // 0x0340(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NativePercentComplete;                                   // 0x0348(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1ZM6[0x4];                                   // 0x034C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnGeneratorRepaired;                                     // 0x0350(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnGeneratorRepairedBySurvivor;                           // 0x0360(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnIsDamagedChanged;                                      // 0x0370(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WOMF[0x30];                                  // 0x0380(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       FireLevelScoreEventOnFix;                                // 0x03B0(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_LZ5F[0x7];                                   // 0x03B1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class FName, struct FTransform>                       _activatedTopLightsTransformMap;                         // 0x03B8(0x0050) Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected
		class UAIPerceptionStimuliSourceComponent*                 _perceptionStimuliComponent;                             // 0x0408(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_27W4[0x24];                                  // 0x0410(0x0024) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGameplayTag                                        _repairSemanticTag;                                      // 0x0434(0x000C) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FDamageData                                         _damageData;                                             // 0x0440(0x0020) Net, Transient, RepNotify, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_3QZY[0x8];                                   // 0x0460(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       _isBlocked;                                              // 0x0468(0x0001) Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _isBlockedFromCharging;                                  // 0x0469(0x0001) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_GKRR[0x6];                                   // 0x046A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              _blockingSources[0x50];                                  // 0x0470(0x0050) UNKNOWN PROPERTY: SetProperty
		unsigned char                                              UnknownData_SR97[0x30];                                  // 0x04C0(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UChargeableComponent*                                _generatorCharge;                                        // 0x04F0(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<struct FPlayerFloatTuple>                           _playerStartTimes;                                       // 0x04F8(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_9ICA[0x18];                                  // 0x0508(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       _isAutoCompleted;                                        // 0x0520(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _isOvercharged;                                          // 0x0521(0x0001) Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_YUNU[0x6];                                   // 0x0522(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCoopRepairTracker*                                  _coopRepairTracker;                                      // 0x0528(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_SLRN[0x10];                                  // 0x0530(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      _VFX_LightDistanceDefault;                               // 0x0540(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_MV1C[0x5C];                                  // 0x0544(0x005C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UInteractionDefinition*>                      _damagingInteractions;                                   // 0x05A0(0x0010) ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
		struct FDBDTunableRowHandle                                _intenseImmediateDamageThreshold;                        // 0x05B0(0x0028) Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void VFXClampTopActivationSingleLight(float distance, const class FName& ParameterName);
		void TriggerSkillCheckFailureLoudNoise(class ADBDPlayer* instigatingPlayer);
		void TriggerSkillCheck(class ADBDPlayer* instigatingPlayer);
		void SpawnBloodEffectToSocket(const class FName& Name);
		bool ShouldDoOverchargeSkillcheck();
		void SetIsOvercharged(bool overcharged);
		void SetIsBlockedFromCharging(bool isBlockedFromCharging);
		void SetIsAutoCompleted(bool isAutoCompleted);
		void SetComplete(bool complete);
		void ResetGenerator();
		void RemovePlayerStartTime(class ADBDPlayer* Player);
		int32_t PostAkEvent(class UAkAudioEvent* AkEvent, int32_t CallbackMask, const class FScriptDelegate& PostEventCallback, TArray<struct FAkExternalSourceInfo> ExternalSources, const class FString& in_EventName);
		void PlayFailSparksFX(class ADBDPlayer* interactingPlayer, bool Explode);
		void OnUpdateChargeProgress(float newPercentComplete);
		void OnResetGenerator();
		void OnRepairedBP(bool showGeneratorCloneLoudNoise, bool isAutoCompleted);
		void OnRep_IsBlocked();
		void OnRep_DamageData();
		void OnPreWarmASMCache();
		void OnEscapeDoorActivated();
		void OnDamageCosmetic(bool intense);
		void OnChargeChanged(class UChargeableComponent* ChargeableComponent, float percent);
		void OnChargeApplied(float individualChargeAmount, float totalChargeAmount, class AActor* chargeInstigator, bool wasCoop, float DeltaTime);
		void OnCaptureProbeSecondState();
		void OnBlockingStatusChanged(bool IsBlocked);
		void NotifyRepairStart(class ADBDPlayer* Player);
		void NotifyRepairFinish(class ADBDPlayer* Player, class UInteractor* Interactor);
		void Multicast_PlayFailSparksFX(class ADBDPlayer* Player, bool Explode);
		void Multicast_OnRepaired(bool showGeneratorCloneLoudNoise, bool isAutoCompleted, int32_t updatedRemainingGeneratorCount);
		void Multicast_DamageCosmetic(bool intense);
		bool IsRegressing();
		bool IsIntenseDamage();
		bool IsBlocked();
		bool IsBeingRepaired();
		bool IsBeingDamagedByKiller();
		class USkeletalMeshComponent* GetSkeletalMesh();
		float GetRepairPercentComplete();
		TArray<class ADBDPlayer*> GetRepairers();
		TArray<struct FPlayerFloatTuple> GetPlayerStartTimes();
		float GetPlayerStartTime(class ADBDPlayer* Player);
		bool GetIsBlockedFromCharging();
		bool GetIsAutoCompleted();
		class UChargeableComponent* GetGeneratorChargeComponent();
		float GetChargePercentComplete();
		void DisableInaccessibleInteractors();
		bool CanSurvivorReactToBlockingEntity(class ACamperPlayer* Survivor);
		void BroadcastIsDamagedChangedEvent(class ADBDPlayer* Player);
		void BroadcastGeneratorRepairedBySurvivor(class ADBDPlayer* repairingSurvivor);
		void Authority_SetRepaired(bool showGeneratorCloneLoudNoise, bool isAutoCompleted);
		void Authority_RepairDamage(class ADBDPlayer* repairedBy);
		void Authority_RemoveBlockingSource(class UObject* Source);
		void Authority_OnChargeChanged(class UChargeableComponent* ChargeableComponent, float PercentCompletionChange, float TotalPercentComplete);
		void Authority_OnChargeApplied(float individualChargeAmount, float totalChargeAmount, class AActor* chargeInstigator, bool wasCoop, float DeltaTime);
		bool Authority_HasRepairedDamage(class ADBDPlayer* Player);
		TArray<class ADBDPlayer*> Authority_GetRepairingCampers();
		void Authority_Damage(class ADBDPlayer* damagedBy, float immediateRegressionPercent, bool ignoreBlocked);
		void Authority_CancelRepairInteractions();
		void Authority_AddTimedBlockingSource(class UObject* Source, float blockingTime);
		void Authority_AddBlockingSource(class UObject* Source);
		void AddPlayerStartTime(class ADBDPlayer* Player, float starttime);
		void AddDamagingInteraction(class UInteractionDefinition* Interaction);
		void ActivateTeleportGeneratorIndicator(bool Activate);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDGeneratorDrivenReflectionCaptureActor
	 * Size -> 0x0018 (FullSize[0x0270] - InheritedSize[0x0258])
	 */
	class ADBDGeneratorDrivenReflectionCaptureActor : public AGeneratorDrivenActor
	{
	public:
		class UGenyReflectionCaptureComponent*                     genyReflectionCapture;                                   // 0x0258(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VX82[0x10];                                  // 0x0260(0x0010) MISSED OFFSET (PADDING)

	public:
		void SwapToSecondState();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.GeneratorEntity
	 * Size -> 0x0028 (FullSize[0x0258] - InheritedSize[0x0230])
	 */
	class AGeneratorEntity : public AActor
	{
	public:
		class AGenerator*                                          _associatedGenerator;                                    // 0x0230(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UMontagePlayer*                                      _montagePlayer;                                          // 0x0238(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_HHYH[0x18];                                  // 0x0240(0x0018) MISSED OFFSET (PADDING)

	public:
		void SetSkeletalMeshActive(bool Active);
		void SetAssociatedGenerator(class AGenerator* Generator);
		void PlayMontage(const struct FAnimationMontageDescriptor& animMontageID, float PlayRate, bool isFollower);
		class UMontagePlayer* GetMontagePlayer();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.GeneratorEntityAnimInstance
	 * Size -> 0x0010 (FullSize[0x02D0] - InheritedSize[0x02C0])
	 */
	class UGeneratorEntityAnimInstance : public UAnimInstance
	{
	public:
		bool                                                       IsCorrupted;                                             // 0x02C0(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       IsCorrupted_End;                                         // 0x02C1(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       IsUncorrupted;                                           // 0x02C2(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       IsUncorrupted_End;                                       // 0x02C3(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_OUJR[0xC];                                   // 0x02C4(0x000C) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.GeneratorIndicatorWidget
	 * Size -> 0x0000 (FullSize[0x0380] - InheritedSize[0x0380])
	 */
	class UGeneratorIndicatorWidget : public UBaseIndicatorWidget
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.GeneratorOutlineUpdateStrategy
	 * Size -> 0x0038 (FullSize[0x0170] - InheritedSize[0x0138])
	 */
	class UGeneratorOutlineUpdateStrategy : public USourceBasedOutlineUpdateStrategy
	{
	public:
		struct FLinearColor                                        _unrepairedAuraColor;                                    // 0x0138(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FLinearColor                                        _fullyRepairedAuraColor;                                 // 0x0148(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_SR01[0x18];                                  // 0x0158(0x0018) MISSED OFFSET (PADDING)

	public:
		struct FLinearColor GetYellowColor();
		struct FLinearColor GetWhiteColor();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.GeneratorRepairWithGenericPerksEscapeAchievement
	 * Size -> 0x0028 (FullSize[0x00E0] - InheritedSize[0x00B8])
	 */
	class UGeneratorRepairWithGenericPerksEscapeAchievement : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_T8VI[0x28];                                  // 0x00B8(0x0028) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.GeneratorTrapIconStrategy
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UGeneratorTrapIconStrategy : public UBasePerkIconStrategy
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.GeneratorTrappableComponent
	 * Size -> 0x0040 (FullSize[0x00F8] - InheritedSize[0x00B8])
	 */
	class UGeneratorTrappableComponent : public UActorComponent
	{
	public:
		class FScriptMulticastDelegate                             OnTrapGenerator;                                         // 0x00B8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnRemoveTrap;                                            // 0x00C8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		TArray<EGeneratorTrapType>                                 _trapsOnGenerator;                                       // 0x00D8(0x0010) Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_1TJ5[0x10];                                  // 0x00E8(0x0010) MISSED OFFSET (PADDING)

	public:
		void OnTrapAddedOrRemoved__DelegateSignature(EGeneratorTrapType trapType);
		void OnRep_TrapsOnGenerator();
		bool GetHasTrap(EGeneratorTrapType trapType);
		bool GetHasAnyTrap();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.GeneratorTrapPerk
	 * Size -> 0x00F0 (FullSize[0x04B8] - InheritedSize[0x03C8])
	 */
	class UGeneratorTrapPerk : public UPerk
	{
	public:
		struct FSecondaryInteractionProperties                     _secondaryActionProperties;                              // 0x03C8(0x0038) Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
		float                                                      _secondsToActivatePerk;                                  // 0x0400(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      _generatorTrapDurationLevels[0x3];                       // 0x0404(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      _progressPercentRequirementLevels[0x3];                  // 0x0410(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _onePerGenerator;                                        // 0x041C(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_4PCS[0x3];                                   // 0x041D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AGenerator*                                          _generatorBeingRepaired;                                 // 0x0420(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class AGenerator*                                          _trappedGenerator;                                       // 0x0428(0x0008) Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_GT65[0x10];                                  // 0x0430(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UInteractionDefinition*                              _currentRepairInteractionWithAbility;                    // 0x0440(0x0008) ExportObject, Net, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _progressPercent;                                        // 0x0448(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_39RO[0x6C];                                  // 0x044C(0x006C) MISSED OFFSET (PADDING)

	public:
		void Server_TryTriggerAction();
		void OnRep_TrappedGenerator(class AGenerator* oldGenerator);
		void OnRep_CurrentRepairInteractionWithAbility(class UInteractionDefinition* oldRepairInteraction);
		void Local_TrapDestroyed(class AGenerator* Generator, ETrapRemovedReason Reason);
		void Local_TrapActivated(class AGenerator* Generator);
		float GetSecondsToActivatePerk();
		float GetRequiredRepairProgressForSettingTrap();
		float GetRepairProgressPercent();
		float GetGeneratorTrapDuration();
		void Client_OnTrapDestroyed(class AGenerator* Generator, ETrapRemovedReason Reason);
		void Client_OnTrapActivated(class AGenerator* Generator);
		void Authority_OnTrapDamaged(const struct FGameplayTag& GameEventTag, const struct FGameEventData& GameEventData);
		void Authority_OnRepairProgress(float individualChargeAmount, float totalChargeAmount, class AActor* chargeInstigator, bool wasCoop, float DeltaTime);
		void Authority_OnGeneratorCompleted(bool isAutoCompleted);
		void Authority_OnExitGatesPowered(const struct FGameplayTag& GameEventTag, const struct FGameEventData& GameEventData);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.GeneratorUtilities
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UGeneratorUtilities : public UBlueprintFunctionLibrary
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.GenericTextInputPopupScreen
	 * Size -> 0x0018 (FullSize[0x0158] - InheritedSize[0x0140])
	 */
	class UGenericTextInputPopupScreen : public UGenericPopupScreen
	{
	public:
		unsigned char                                              UnknownData_VPHQ[0x18];                                  // 0x0140(0x0018) MISSED OFFSET (PADDING)

	public:
		void OnTextInputChoiceSelected(int32_t selectedButtonType, const class FString& inputText);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.GenyReflectionCaptureComponent
	 * Size -> 0x0018 (FullSize[0x0230] - InheritedSize[0x0218])
	 */
	class UGenyReflectionCaptureComponent : public USceneComponent
	{
	public:
		TArray<struct FReflectionCaptureTwoStates>                 generatorDrivenReflectionCapture;                        // 0x0218(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O31E[0x8];                                   // 0x0228(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.GestureInteractionDefinition
	 * Size -> 0x0008 (FullSize[0x0620] - InheritedSize[0x0618])
	 */
	class UGestureInteractionDefinition : public UInteractionDefinition
	{
	public:
		unsigned char                                              UnknownData_86DE[0x8];                                   // 0x0618(0x0008) Fix Super Size

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.GhostStalkedUIData
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UGhostStalkedUIData : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.GhostStealthUIData
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UGhostStealthUIData : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.GiftManager
	 * Size -> 0x0038 (FullSize[0x0070] - InheritedSize[0x0038])
	 */
	class UGiftManager : public UGameInstanceSubsystem
	{
	public:
		unsigned char                                              UnknownData_HYR5[0x38];                                  // 0x0038(0x0038) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.GlassStaticMesh
	 * Size -> 0x0058 (FullSize[0x05A0] - InheritedSize[0x0548])
	 */
	class UGlassStaticMesh : public UStaticMeshComponent
	{
	public:
		unsigned char                                              UnknownData_T8T9[0x8];                                   // 0x0548(0x0008) Fix Super Size
		unsigned char                                              UnknownData_1P2Y[0x40];                                  // 0x0550(0x0040) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             defaultGlassNormalVector;                                // 0x0590(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FM3D[0x4];                                   // 0x059C(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.GlassCollectionSubsystem
	 * Size -> 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
	 */
	class UGlassCollectionSubsystem : public UGameInstanceSubsystem
	{
	public:
		TArray<class UGlassStaticMesh*>                            _glassCollection;                                        // 0x0038(0x0010) ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.GlyphNavMovementComponent
	 * Size -> 0x0028 (FullSize[0x0168] - InheritedSize[0x0140])
	 */
	class UGlyphNavMovementComponent : public UNavMovementComponent
	{
	public:
		class AActor*                                              _glyphOwner;                                             // 0x0140(0x0008) ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UPathFollowingComponent*                             _pathFollowingComponent;                                 // 0x0148(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bPositionCorrected : 1;                                  // 0x0150(0x0001) BIT_FIELD Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_IIXZ[0x3];                                   // 0x0151(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      _maxSpeed;                                               // 0x0154(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _acceleration;                                           // 0x0158(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _deceleration;                                           // 0x015C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _brakingDeceleration;                                    // 0x0160(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_1VAG[0x4];                                   // 0x0164(0x0004) MISSED OFFSET (PADDING)

	public:
		void SetMaxSpeed(float MaxSpeed);
		void SetDeceleration(float Deceleration);
		void SetAcceleration(float Acceleration);
		class AActor* GetGlyphOwner();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PS4GRDKBaseProfileDAL
	 * Size -> 0x0000 (FullSize[0x0088] - InheritedSize[0x0088])
	 */
	class UPS4GRDKBaseProfileDAL : public UPlayerProfileDAL
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.GRDKProfileDAL
	 * Size -> 0x0000 (FullSize[0x0088] - InheritedSize[0x0088])
	 */
	class UGRDKProfileDAL : public UPS4GRDKBaseProfileDAL
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.HalloweenEventComponent
	 * Size -> 0x0088 (FullSize[0x0140] - InheritedSize[0x00B8])
	 */
	class UHalloweenEventComponent : public UActorComponent
	{
	public:
		class USectionnedChargeableComponent*                      _toxinVialComponent;                                     // 0x00B8(0x0008) Edit, ExportObject, Net, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_WLUO[0x80];                                  // 0x00C0(0x0080) MISSED OFFSET (PADDING)

	public:
		void Server_SpawnVial(float initialCharge);
		void OnRep_Vial();
		void OnFinishedPlaying(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
		bool IsVialFull();
		class USectionnedChargeableComponent* GetVial();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.HangDiagnosticSubsystem
	 * Size -> 0x0040 (FullSize[0x0078] - InheritedSize[0x0038])
	 */
	class UHangDiagnosticSubsystem : public UGameInstanceSubsystem
	{
	public:
		unsigned char                                              UnknownData_BWEF[0x40];                                  // 0x0038(0x0040) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.HasTokenOrActivationTimerElapsedIconStrategy
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UHasTokenOrActivationTimerElapsedIconStrategy : public UBasePerkIconStrategy
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.HasTokenOrCooldownTimerRemainingActivationElapsedIconStrategy
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UHasTokenOrCooldownTimerRemainingActivationElapsedIconStrategy : public UBasePerkIconStrategy
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.HasTokenPerkIconStrategy
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UHasTokenPerkIconStrategy : public UBasePerkIconStrategy
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.Hatch
	 * Size -> 0x00B8 (FullSize[0x03E0] - InheritedSize[0x0328])
	 */
	class AHatch : public AInteractable
	{
	public:
		unsigned char                                              UnknownData_WV2O[0x50];                                  // 0x0328(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EHatchState                                                _hatchState;                                             // 0x0378(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_QQRH[0x1];                                   // 0x0379(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       _isEndGameOver;                                          // 0x037A(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _isForceOpen;                                            // 0x037B(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _attemptToCloseHatchOnNextEscape;                        // 0x037C(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_4XQX[0xB];                                   // 0x037D(0x000B) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UPrimitiveComponent*                                 _baseCollision;                                          // 0x0388(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_2NGI[0x18];                                  // 0x0390(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDBDTunableRowHandle                                _hatchOpenDuration;                                      // 0x03A8(0x0028) Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_25P2[0x10];                                  // 0x03D0(0x0010) MISSED OFFSET (PADDING)

	public:
		void OnRep_HatchState(EHatchState oldState);
		void OnHatchStateUnhidden();
		void OnHatchStateModified(EHatchState oldState, EHatchState NewState);
		bool IsOpen();
		EHatchState GetHatchState();
		class USceneComponent* GetHatchCenter();
		class USceneComponent* GetEscapeFocalPoint();
		class UAnimationMontageSlave* GetAnimationMontageSlave();
		void FXOpenHatch();
		void FXEndSmoke();
		void FXCloseHatch();
		void Authority_SetIsForceOpen(bool isForcedOpen);
		void Authority_SetHatchState(EHatchState NewState);
		void Authority_ResetTimer(float Duration);
		void Authority_OnSurvivorsLeftChanged(int32_t survivorRemaining);
		void Authority_OnHatchVisibilityChanged(bool IsVisible);
		void Authority_OnEndGameOver(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
		void Authority_OnCloseTimerComplete();
		void Authority_CheckedOpenHatch();
		void Authority_CheckedOpenForceClosedHatch();
		void Authority_CheckedCloseHatch();
		void Authority_CheckedChangeActiveState();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.HatchOutlineUpdateStrategy
	 * Size -> 0x0000 (FullSize[0x00E0] - InheritedSize[0x00E0])
	 */
	class UHatchOutlineUpdateStrategy : public UDefaultOutlineUpdateStrategy
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.HeldInputInteractionStarter
	 * Size -> 0x00E0 (FullSize[0x0198] - InheritedSize[0x00B8])
	 */
	class UHeldInputInteractionStarter : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_JMQ4[0xE0];                                  // 0x00B8(0x00E0) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PlayerOverlapHISMComponent
	 * Size -> 0x0010 (FullSize[0x0720] - InheritedSize[0x0710])
	 */
	class UPlayerOverlapHISMComponent : public UHISMMaterialHelperComponent
	{
	public:
		TArray<class UMaterialInterface*>                          _playerOverlapOverrides;                                 // 0x0710(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.HitValidationConfigsComponent
	 * Size -> 0x0040 (FullSize[0x00F8] - InheritedSize[0x00B8])
	 */
	class UHitValidationConfigsComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_A2NY[0x40];                                  // 0x00B8(0x0040) MISSED OFFSET (PADDING)

	public:
		void DBD_PrintInGameHitValidationConfigs();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.HitValidatorComponent
	 * Size -> 0x0030 (FullSize[0x00E8] - InheritedSize[0x00B8])
	 */
	class UHitValidatorComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_LA5U[0x28];                                  // 0x00B8(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TWeakObjectPtr<class UHitValidationConfigsComponent>       _hitValidationConfigComponent;                           // 0x00E0(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void Multicast_DrawDebugHit(const struct FHitValidationReport& report);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.HitValidatorConfigurator
	 * Size -> 0x0010 (FullSize[0x00D0] - InheritedSize[0x00C0])
	 */
	class UHitValidatorConfigurator : public UBaseHitValidationConfigurator
	{
	public:
		unsigned char                                              UnknownData_T41P[0x10];                                  // 0x00C0(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.HookableComponent
	 * Size -> 0x00A0 (FullSize[0x0158] - InheritedSize[0x00B8])
	 */
	class UHookableComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_3CCP[0xA0];                                  // 0x00B8(0x00A0) MISSED OFFSET (PADDING)

	public:
		void Multicast_SetDrainTimerPercentLeft(float percentTime);
		void Multicast_DebugSetHookDrainStage(int32_t DrainStage);
		int32_t GetHookedCount();
		float GetDrainTimerPercentLeft();
		void Authority_SetDrainTimerPercentLeft(float percentTime);
		void Authority_DebugSetHookEscapeAutoSuccess(bool success);
		void Authority_DebugSetHookEscapeAutoFail(bool fail);
		void Authority_DebugSetHookDrainStage(int32_t DrainStage);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.HookAntiCampingComponent
	 * Size -> 0x00D8 (FullSize[0x0190] - InheritedSize[0x00B8])
	 */
	class UHookAntiCampingComponent : public UActorComponent
	{
	public:
		bool                                                       IsAntiCampingFeatureEnabled;                             // 0x00B8(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8D0G[0x3];                                   // 0x00B9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      _detectionRange;                                         // 0x00BC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_YSKI[0x4];                                   // 0x00C0(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      _killerGracePeriodTime;                                  // 0x00C4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_D4PK[0x4];                                   // 0x00C8(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      _timeToActivate;                                         // 0x00CC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      _enduranceEffectActiveTime;                              // 0x00D0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_RWG5[0x4];                                   // 0x00D4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveFloat*                                         _chargeSpeedCurve;                                       // 0x00D8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_D4LU[0x81];                                  // 0x00E0(0x0081) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       _addEnduranceEffectAfterSelfUnhook;                      // 0x0161(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_ZHTR[0x6];                                   // 0x0162(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              _enduranceEffectClass;                                   // 0x0168(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UClass*                                              _selfUnhookAlwaysSucceedEffectClass;                     // 0x0170(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UStatusEffect*                                       _selfUnhookAlwaysSucceedEffect;                          // 0x0178(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _chargeSpeed;                                            // 0x0180(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _timerPercent;                                           // 0x0184(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _unhookingSelfAllowedDuringStrugglePhase;                // 0x0188(0x0001) Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_BQAK[0x7];                                   // 0x0189(0x0007) MISSED OFFSET (PADDING)

	public:
		void OnRep_UnhookingSelfAllowedDuringStrugglePhase();
		float GetCurrentChargeSpeed();
		float GetCampTimerCompletionPercent();
		bool CanUnhookWithAutoSuccess();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.HookedIndicatorWidget
	 * Size -> 0x0010 (FullSize[0x0390] - InheritedSize[0x0380])
	 */
	class UHookedIndicatorWidget : public UBaseIndicatorWidget
	{
	public:
		float                                                      HookedIndicatorDuration;                                 // 0x0380(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_LST1[0xC];                                   // 0x0384(0x000C) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.HooksWithSurvivorRestrictedPlacementAreaStrategy
	 * Size -> 0x0098 (FullSize[0x0138] - InheritedSize[0x00A0])
	 */
	class UHooksWithSurvivorRestrictedPlacementAreaStrategy : public URestrictedPlacementAreaStrategy
	{
	public:
		struct FDBDTunableRowHandle                                RestrictedSphericalRadius;                               // 0x00A0(0x0028) Edit, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _isRestrictionLingeringEnabled;                          // 0x00C8(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_OUDY[0x7];                                   // 0x00C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDBDTunableRowHandle                                _restrictionLingerTime;                                  // 0x00D0(0x0028) Edit, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_KZTM[0x4];                                   // 0x00F8(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       _useSphericalZoneForBasementHooks;                       // 0x00FC(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_8DT3[0x1B];                                  // 0x00FD(0x001B) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FVector>                                     RestrictedSphericalLocations;                            // 0x0118(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_3WEX[0x10];                                  // 0x0128(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.HudScreen
	 * Size -> 0x05C8 (FullSize[0x06E8] - InheritedSize[0x0120])
	 */
	class UHudScreen : public UScreenBase
	{
	public:
		unsigned char                                              UnknownData_69KV[0xD8];                                  // 0x0120(0x00D8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCoreHudRootWidget*                                  _rootWidget;                                             // 0x01F8(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_YGE7[0xE0];                                  // 0x0200(0x00E0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ATutorialsUtilities*                                 _tutorialsUtilities;                                     // 0x02E0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              _playerStatusInterfaces[0x10];                           // 0x02E8(0x0010) UNKNOWN PROPERTY: ArrayProperty
		struct FInteractionProgressViewData                        _interactionProgressViewData;                            // 0x02F8(0x0068) Transient, NativeAccessSpecifierPrivate
		struct FItemBundleViewData                                 _itemBundleViewData;                                     // 0x0360(0x0160) Transient, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_NOTL[0x50];                                  // 0x04C0(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPowerBundleViewData                                _powerBundleViewData;                                    // 0x0510(0x0158) Transient, NativeAccessSpecifierPrivate
		TArray<struct FPlayerStatusViewData>                       _playerStatusViewData;                                   // 0x0668(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_W8PT[0x70];                                  // 0x0678(0x0070) MISSED OFFSET (PADDING)

	public:
		void OnTutorialHudFadeOutTriggered();
		void OnTutorialHudFadeInTriggered();
		void OnHUDWidgetFadeOutCompleted();
		void OnHUDWidgetDelayCompleted();
		void OnHideStartSequenceCompleted();
		void OnHemorrhageAnimationComplete();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.HudUIUtilities
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UHudUIUtilities : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ButtonPromptSource
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UButtonPromptSource : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CannibalChainsawPower
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UCannibalChainsawPower : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ChainLinkable
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UChainLinkable : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ChargeableProgressSource
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UChargeableProgressSource : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.IdentityValidation
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UIdentityValidation : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.Ethereal
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UEthereal : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.IgnorePlayersCollisionsComponent
	 * Size -> 0x0068 (FullSize[0x0120] - InheritedSize[0x00B8])
	 */
	class UIgnorePlayersCollisionsComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_X1BS[0x68];                                  // 0x00B8(0x0068) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.Highlightable
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UHighlightable : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.KillerControls
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UKillerControls : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.MovementSettings
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UMovementSettings : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.InactiveCooldownTimerPerkIconStrategy
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UInactiveCooldownTimerPerkIconStrategy : public UBasePerkIconStrategy
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.InboxScreen
	 * Size -> 0x00D0 (FullSize[0x01F0] - InheritedSize[0x0120])
	 */
	class UInboxScreen : public UScreenBase
	{
	public:
		class UUMGInboxScreen*                                     _umgScreen;                                              // 0x0120(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<struct FInboxMessageUIData>                         _newsMessages;                                           // 0x0128(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		TArray<struct FInboxMessageUIData>                         _rewardsMessages;                                        // 0x0138(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		TArray<struct FInboxMessageUIData>                         _socialMessages;                                         // 0x0148(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_Q6GW[0x98];                                  // 0x0158(0x0098) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.InboxUtilities
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UInboxUtilities : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.InfectedInteractableComponent
	 * Size -> 0x00F0 (FullSize[0x01A8] - InheritedSize[0x00B8])
	 */
	class UInfectedInteractableComponent : public UActorComponent
	{
	public:
		class UCurveFloat*                                         VomitAlphaCurve;                                         // 0x00B8(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FName                                                VomitAlphaParameterName;                                 // 0x00C0(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_ZLA2[0x4];                                   // 0x00CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTimelineComponent*                                  _vomitAlphaTimeline;                                     // 0x00D0(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_8BKN[0xD0];                                  // 0x00D8(0x00D0) MISSED OFFSET (PADDING)

	public:
		void SetInteractableMeshAlpha(float alpha);
		void OnVomitAlphaUpdate(float alpha);
		void Multicast_FadeOutVomit();
		void Multicast_FadeInVomit();
		void Multicast_DestroyComponent();
		void Multicast_DebugDisplayLifetime(float RemainingLifeTime);
		class AInteractable* GetOwningInteractable();
		void Authority_OnOwningInteractableBeginOrEndUse(bool InUse, class ADBDPlayer* interactingPlayer);
		void Authority_OnHitWithVomit();
		bool Authority_IsAMaxSicknessSurvivorInteracting();
		class ACamperPlayer* Authority_GetEquippingPlayer();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.InGameAssetPreloaderComponent
	 * Size -> 0x01A8 (FullSize[0x0260] - InheritedSize[0x00B8])
	 */
	class UInGameAssetPreloaderComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_8GL5[0x18];                                  // 0x00B8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              _generalPrimaryAssetIds[0x50];                           // 0x00D0(0x0050) UNKNOWN PROPERTY: SetProperty
		unsigned char                                              _generalRegularAssets[0x50];                             // 0x0120(0x0050) UNKNOWN PROPERTY: SetProperty
		TArray<class UClass*>                                      _assetGathererClasses;                                   // 0x0170(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPrivate
		TArray<class UInGameAssetPreloaderGatherer*>               _assetGatherers;                                         // 0x0180(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_PNBL[0xD0];                                  // 0x0190(0x00D0) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.InGameAssetPreloaderGatherer
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UInGameAssetPreloaderGatherer : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.InGameLoadoutAssetGatherer
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UInGameLoadoutAssetGatherer : public UInGameAssetPreloaderGatherer
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.IniAssetLibrary
	 * Size -> 0x0010 (FullSize[0x00C0] - InheritedSize[0x00B0])
	 */
	class UIniAssetLibrary : public UAssetLibrary
	{
	public:
		unsigned char                                              UnknownData_C5YT[0x10];                                  // 0x00B0(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.InteractableTransformOptimizer
	 * Size -> 0x0008 (FullSize[0x00C0] - InheritedSize[0x00B8])
	 */
	class UInteractableTransformOptimizer : public UActorComponent
	{
	public:
		bool                                                       _optimizeTransformUpdate;                                // 0x00B8(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_NC29[0x7];                                   // 0x00B9(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.InteractionAnimNotify
	 * Size -> 0x0010 (FullSize[0x0050] - InheritedSize[0x0040])
	 */
	class UInteractionAnimNotify : public UAnimNotify
	{
	public:
		class FName                                                NotifyId;                                                // 0x0040(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PBWO[0x4];                                   // 0x004C(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.InteractionDetectorComponent
	 * Size -> 0x00F8 (FullSize[0x01B0] - InheritedSize[0x00B8])
	 */
	class UInteractionDetectorComponent : public UActorComponent
	{
	public:
		class UPrimitiveComponent*                                 _detectionPrimitive;                                     // 0x00B8(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              _overlappingInteractables[0x50];                         // 0x00C0(0x0050) UNKNOWN PROPERTY: SetProperty
		unsigned char                                              _overlappingPrimitiveComponents[0x50];                   // 0x0110(0x0050) UNKNOWN PROPERTY: SetProperty
		unsigned char                                              _ignoredActors[0x50];                                    // 0x0160(0x0050) UNKNOWN PROPERTY: SetProperty

	public:
		void SetDetectionPrimitive(class UPrimitiveComponent* detectionPrimitive);
		void OnLocallyObservedChanged(class ADBDPlayer* Player);
		class UPrimitiveComponent* GetDetectionPrimitive();
		void EndOverlapCallback(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex);
		void BeginOverlapCallback(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool fromSweep, const struct FHitResult& SweepResult);
		void AddIgnoredActor(class AActor* ignored);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.InteractionProficiency
	 * Size -> 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
	 */
	class UInteractionProficiency : public UObject
	{
	public:
		TArray<class FString>                                      InteractionIds;                                          // 0x0030(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_B7SW[0x8];                                   // 0x0040(0x0008) MISSED OFFSET (PADDING)

	public:
		float GetValue(class UChargeableInteractionDefinition* chargeableInteraction, class ADBDPlayer* Player);
		EStatusEffectType GetType(float value);
		int32_t GetLevel(class UChargeableInteractionDefinition* chargeableInteraction, class ADBDPlayer* Player);
		bool GetIsActive(class UChargeableInteractionDefinition* chargeableInteraction, class ADBDPlayer* Player);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.Interactor
	 * Size -> 0x0078 (FullSize[0x0290] - InheritedSize[0x0218])
	 */
	class UInteractor : public USceneComponent
	{
	public:
		class FString                                              InteractorName;                                          // 0x0218(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QU8M[0x30];                                  // 0x0228(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       IsUsable;                                                // 0x0258(0x0001) Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_YW1L[0x3];                                   // 0x0259(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FObjectLock                                         _lock;                                                   // 0x025C(0x0008) Transient, NoDestructor, NativeAccessSpecifierPrivate
		struct FObjectLock                                         _reservation;                                            // 0x0264(0x0008) Transient, NoDestructor, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_LMW1[0x4];                                   // 0x026C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UInteractionDefinition*                              _currentInteraction;                                     // 0x0270(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<class UInteractionDefinition*>                      _interactionDefinitions;                                 // 0x0278(0x0010) ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_20H1[0x8];                                   // 0x0288(0x0008) MISSED OFFSET (PADDING)

	public:
		void SetIsUsable(bool isUsableParam);
		void Multicast_ReservationStatus(class ADBDPlayer* Player, bool lock);
		void Multicast_LockStatus(class ADBDPlayer* Player, class UInteractionDefinition* currentInteraction, bool lock);
		bool IsInterruptionPossible(class ADBDPlayer* interruptor, class ADBDPlayer* interruptee, class UInteractionDefinition* definition, class UInterruptionDefinition* interruption);
		bool IsInteracting();
		bool GetIsUsable();
		TArray<class UInteractionDefinition*> GetInteractionDefinitions();
		class ADBDPlayer* GetInteractingPlayerRaw();
		class AInteractable* GetInteractable();
		class UInteractionDefinition* GetCurrentInteraction();
		bool CanPerformInteraction(class ADBDPlayer* Player, class UInteractionDefinition* definition);
		void BPPostInitializeComponents();
		class ADBDPlayer* Authority_GetInteractingPlayer();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.InterruptionDefinition
	 * Size -> 0x00C8 (FullSize[0x02E0] - InheritedSize[0x0218])
	 */
	class UInterruptionDefinition : public USceneComponent
	{
	public:
		class FName                                                InterruptionID;                                          // 0x0218(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       _usesWorldCoordinates;                                   // 0x0224(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _snapInterruptor;                                        // 0x0225(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_TKPM[0xA];                                   // 0x0226(0x000A) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          _interruptionSnapPointForInterruptor;                    // 0x0230(0x0030) Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate
		struct FAnimationMontageDescriptor                         _animationMontageToPlayOnInterruptionEnterForInterruptor; // 0x0260(0x0020) Edit, NativeAccessSpecifierPrivate
		struct FAnimationMontageDescriptor                         _animationMontageToPlayOnInterruptionForInterruptorNew;  // 0x0280(0x0020) Edit, NativeAccessSpecifierPrivate
		struct FAnimationMontageDescriptor                         _animationMontageToPlayOnInterruptionForInterrupteeNew;  // 0x02A0(0x0020) Edit, NativeAccessSpecifierPrivate
		bool                                                       _pickUpOnInterrupt;                                      // 0x02C0(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _canInterruptWhileCarrying;                              // 0x02C1(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _useMontageFollower;                                     // 0x02C2(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_RCUG[0x1];                                   // 0x02C3(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      _maxHeightDeltaBetweenCharacters;                        // 0x02C4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FGameplayTag                                        _interruptionScoreEvent;                                 // 0x02C8(0x000C) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_I41I[0xC];                                   // 0x02D4(0x000C) MISSED OFFSET (PADDING)

	public:
		void SetInterruptorSnapPoint(const struct FTransform& Point);
		void OnInterruptionUpdateStart(class ADBDPlayer* interruptor, class ADBDPlayer* interruptee);
		void OnInterruptionExitEnd(class ADBDPlayer* interruptor, class ADBDPlayer* interruptee);
		void OnInterruptionEnterStart(class ADBDPlayer* interruptor, class ADBDPlayer* interruptee);
		bool IsUsingMontageFollower();
		bool IsUsingAttack();
		bool IsInterruptionPossible(class ADBDPlayer* interruptor, class ADBDPlayer* interruptee);
		bool InteractionCheckHeightDelta(class ADBDPlayer* interruptor, class ADBDPlayer* interruptee);
		struct FRotator GetInterruptionSnapPointRotationForInterruptor(class ADBDPlayer* interruptor, class ADBDPlayer* interruptee);
		struct FVector GetInterruptionSnapPointPositionForInterruptor(class ADBDPlayer* interruptor, class ADBDPlayer* interruptee);
		class UInteractionDefinition* GetInteractionDefinition();
		class AInteractable* GetInteractable();
		bool CanInterruptWhileCarrying();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.InventoryHandler
	 * Size -> 0x0060 (FullSize[0x0090] - InheritedSize[0x0030])
	 */
	class UInventoryHandler : public UObject
	{
	public:
		unsigned char                                              UnknownData_QG8C[0x60];                                  // 0x0030(0x0060) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PalletPulldownBlockable
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UPalletPulldownBlockable : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.IsMaximumInfected
	 * Size -> 0x0000 (FullSize[0x00D0] - InheritedSize[0x00D0])
	 */
	class UIsMaximumInfected : public UGameplayModifierCondition
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.IsNotSightedByAnyCharacter
	 * Size -> 0x0008 (FullSize[0x00F0] - InheritedSize[0x00E8])
	 */
	class UIsNotSightedByAnyCharacter : public UEventDrivenModifierCondition
	{
	public:
		unsigned char                                              UnknownData_2TGN[0x8];                                   // 0x00E8(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.SpectatingActorLinker
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class USpectatingActorLinker : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.StruggleSkillCheck
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UStruggleSkillCheck : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ItemAddonDataAsset
	 * Size -> 0x0000 (FullSize[0x0088] - InheritedSize[0x0088])
	 */
	class UItemAddonDataAsset : public UGameplayModifierContainerDataAsset
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ItemDataAsset
	 * Size -> 0x0040 (FullSize[0x0088] - InheritedSize[0x0048])
	 */
	class UItemDataAsset : public UDBDPrimaryDataAsset
	{
	public:
		unsigned char                                              ActorClass[0x30];                                        // 0x0048(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              RequiredModifierContainers[0x10];                        // 0x0078(0x0010) UNKNOWN PROPERTY: ArrayProperty

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ItemPerformedInteraction
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UItemPerformedInteraction : public UInterface
	{
	public:
		bool IsInteractionPerformedWithItem(class ADBDPlayer* Instigator);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.RecommendationsFilter
	 * Size -> 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
	 */
	class URecommendationsFilter : public UObject
	{
	public:
		unsigned char                                              UnknownData_9LMA[0x8];                                   // 0x0030(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ItemRecommendationsFilter
	 * Size -> 0x0028 (FullSize[0x0060] - InheritedSize[0x0038])
	 */
	class UItemRecommendationsFilter : public URecommendationsFilter
	{
	public:
		unsigned char                                              UnknownData_DEM6[0x28];                                  // 0x0038(0x0028) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ItemTooltipWidget
	 * Size -> 0x0020 (FullSize[0x0390] - InheritedSize[0x0370])
	 */
	class UItemTooltipWidget : public UBaseTooltipWidget
	{
	public:
		class UTextBlock*                                          RarityLabel;                                             // 0x0370(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGHtmlRichText*                                    WarningText;                                             // 0x0378(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              HeaderSmoke;                                             // 0x0380(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              HeaderBackground;                                        // 0x0388(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ItemVfx
	 * Size -> 0x0010 (FullSize[0x0248] - InheritedSize[0x0238])
	 */
	class AItemVfx : public ABaseVFX
	{
	public:
		TArray<class UFXSystemComponent*>                          _particleSystems;                                        // 0x0238(0x0010) ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate

	public:
		class UNiagaraComponent* SpawnNiagaraSystemAttached(class UNiagaraSystem* SystemTemplate, class USceneComponent* AttachToComponent, const class FName& attachPointName, EAttachLocation LocationType, bool AutoDestroy, ENCPoolMethod PoolingMethod, const struct FVector& Location, const struct FRotator& Rotation, const struct FVector& Scale, bool autoActivate, bool preCullCheck, bool absoluteRotation, bool hideInFPV);
		void OnAttackEnd();
		void OnAttackBegin();
		void ClearParticleSystems();
		void AttachToSkeletalMesh(class USkeletalMeshComponent* SkeletonPart);
		void AddParticleSystemComponent(class UParticleSystemComponent* ParticleSystemComponent);
		void AddNiagaraComponent(class UNiagaraComponent* NiagaraComponent);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ViewRotationStrategy
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UViewRotationStrategy : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.K31UIDataInterface
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UK31UIDataInterface : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.KillerAtlantaTutorialLevel
	 * Size -> 0x0040 (FullSize[0x0368] - InheritedSize[0x0328])
	 */
	class AKillerAtlantaTutorialLevel : public AAtlantaTutorialLevel
	{
	public:
		TWeakObjectPtr<class ASlasherPlayer>                       LocallyControllerSlasherPlayer;                          // 0x0328(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class ACamperPlayer>                        ChaseCamper;                                             // 0x0330(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class ACamperPlayer>                        BearTrapCamper;                                          // 0x0338(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class AGenerator>                           KickGenerator;                                           // 0x0340(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class AWindow>                              VaultWindow;                                             // 0x0348(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class AEscapeDoor>                          EscapeDoor;                                              // 0x0350(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class AHatch>                               Hatch;                                                   // 0x0358(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C1EL[0x8];                                   // 0x0360(0x0008) MISSED OFFSET (PADDING)

	public:
		void TriggerExitGameSetup();
		void TriggerEndGameSequenceAnimation(EKillerTutorialEndGameType camperDeathType);
		void SetVaultWindow(class AWindow* Window);
		void SetupEndGameTutorialPhase();
		void SetHatch(class AHatch* targetHatch);
		void SetGenerator(class AGenerator* Generator);
		void SetEscapeDoor(class AEscapeDoor* targetEscapeDoor);
		void SetControlledSlasherPlayer(class ASlasherPlayer* SlasherPlayer);
		void SetChaseSurvivor(class ACamperPlayer* CamperPlayer);
		void SetBearTrapSurvivor(class ACamperPlayer* CamperPlayer);
		void CompleteEscapeRequirements();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.KillerAudioHandlerComponent
	 * Size -> 0x0080 (FullSize[0x01B8] - InheritedSize[0x0138])
	 */
	class UKillerAudioHandlerComponent : public UDBDPlayerAudioHandlerComponent
	{
	public:
		struct FDBDTunableRowHandle                                _killerMovingShockTime;                                  // 0x0138(0x0028) Edit, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FString                                              _shockEvent;                                             // 0x0160(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FGameplayTagQuery                                   _movingShockCondition;                                   // 0x0170(0x0048) Edit, NativeAccessSpecifierPrivate

	public:
		void TriggerSurvivorDamageHitAudioSFX(class ACamperPlayer* camper, EAttackType attackType, bool CausedKO, bool IsWeaponHit, bool isLightHit);
		void TriggerKillerReactionSpecificSurvivorSFX(class ADBDPlayer* camper);
		void OnChaseStart(class ADBDPlayer* chasedSurvivor);
		void HitImpactOnSurvivorSFX(class ACamperPlayer* camper, EAttackType attackType, bool IsWeaponHit);
		void ChaseTriggerKillerReactionSpecificSurvivorSFX(class ADBDPlayer* camper);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.KillerAudioMenuReactionComponent
	 * Size -> 0x0010 (FullSize[0x00C8] - InheritedSize[0x00B8])
	 */
	class UKillerAudioMenuReactionComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_6AB4[0x10];                                  // 0x00B8(0x0010) MISSED OFFSET (PADDING)

	public:
		void OnLobbyTimeChanged();
		void LobbyKillerReactionSpecificSurvivorSFX(TArray<class ADBDMenuPlayer*> menuPlayers);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.KillerBlindingFXComponent
	 * Size -> 0x0048 (FullSize[0x0150] - InheritedSize[0x0108])
	 */
	class UKillerBlindingFXComponent : public UBlindingFXComponent
	{
	public:
		unsigned char                                              UnknownData_9EQT[0x18];                                  // 0x0108(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       _blindedSound;                                           // 0x0120(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_U1PT[0x28];                                  // 0x0128(0x0028) MISSED OFFSET (PADDING)

	public:
		void Multicast_OnBlindedByPlayersCosmetic(TArray<class ADBDPlayer*> Players);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.KillerBloodFXComponent
	 * Size -> 0x0018 (FullSize[0x00D0] - InheritedSize[0x00B8])
	 */
	class UKillerBloodFXComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_JS28[0x18];                                  // 0x00B8(0x0018) MISSED OFFSET (PADDING)

	public:
		void StopBloodSplatter();
		void PlayBloodSplatter();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.KillerBloodFXInterface
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UKillerBloodFXInterface : public UInterface
	{
	public:
		void StopBloodSplatter();
		void PlayBloodSplatter();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.KillerHitCosmeticHandler
	 * Size -> 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
	 */
	class UKillerHitCosmeticHandler : public UBaseReversibleInstantActionHandler
	{
	public:
		unsigned char                                              UnknownData_CRYX[0x18];                                  // 0x0030(0x0018) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.KillerInstinctInterface
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UKillerInstinctInterface : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.KillerIntroComponent
	 * Size -> 0x0030 (FullSize[0x00E8] - InheritedSize[0x00B8])
	 */
	class UKillerIntroComponent : public UActorComponent
	{
	public:
		float                                                      _percentOfCameraPanInProgressRequiredToHideKiller;       // 0x00B8(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _cameraPanInAmountToSquish;                              // 0x00BC(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		EFPVTransitionStrategy                                     _cameraPanInHidingStrategy;                              // 0x00C0(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_Z43D[0x3];                                   // 0x00C1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      _startKillerIntroDelay;                                  // 0x00C4(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_2O0Q[0x20];                                  // 0x00C8(0x0020) MISSED OFFSET (PADDING)

	public:
		void OnLevelReadyToPlay();
		void OnIntroCompleted();
		void KillerCameraPanInUpdateNative(float killerIntroCompletedPercent);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.NoiseIndicatorWidget
	 * Size -> 0x0000 (FullSize[0x0380] - InheritedSize[0x0380])
	 */
	class UNoiseIndicatorWidget : public UBaseIndicatorWidget
	{
	public:
		void SetIndicatorPanel(class UCanvasPanel* panel);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.KillerNoiseIndicatorWidget
	 * Size -> 0x0000 (FullSize[0x0380] - InheritedSize[0x0380])
	 */
	class UKillerNoiseIndicatorWidget : public UNoiseIndicatorWidget
	{
	public:
		void SetSoundDistancePercentage(float distancePercentage);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.KillerOpenGate
	 * Size -> 0x0050 (FullSize[0x0790] - InheritedSize[0x0740])
	 */
	class UKillerOpenGate : public UChargeableInteractionDefinition
	{
	public:
		struct FAnimationMontageDescriptor                         _openGateMontage;                                        // 0x0740(0x0020) Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_K6QA[0x30];                                  // 0x0760(0x0030) MISSED OFFSET (PADDING)

	public:
		void UpdateSwitch();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.KillerProjectileDodgeComponent
	 * Size -> 0x0038 (FullSize[0x00F0] - InheritedSize[0x00B8])
	 */
	class UKillerProjectileDodgeComponent : public UActorComponent
	{
	public:
		class AKillerProjectile*                                   _killerProjectile;                                       // 0x00B8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<class ACamperPlayer*>                               _proximitySurvivors;                                     // 0x00C0(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_9L3S[0x20];                                  // 0x00D0(0x0020) MISSED OFFSET (PADDING)

	public:
		void OnKillerProjectileLaunched();
		void OnKillerProjectileFinishedWithoutCollision();
		void OnKillerProjectileFinished(class AActor* survivorHit);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.KillerProjectileLauncher
	 * Size -> 0x0000 (FullSize[0x0180] - InheritedSize[0x0180])
	 */
	class UKillerProjectileLauncher : public UBaseProjectileLauncher
	{
	public:
		class ASlasherPlayer* GetOwningKiller();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.KillerRedStainUpdateStrategy
	 * Size -> 0x0038 (FullSize[0x00F0] - InheritedSize[0x00B8])
	 */
	class UKillerRedStainUpdateStrategy : public UActorComponent
	{
	public:
		class UCurveFloat*                                         _stealthRatioToRedStainIntensityCurve;                   // 0x00B8(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FGameplayTagContainer                               _hideRedStainStateTags;                                  // 0x00C0(0x0020) Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_R03R[0x10];                                  // 0x00E0(0x0010) MISSED OFFSET (PADDING)

	public:
		void OnHeadHiddenChanged(bool IsHidden);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.KillerSoundCuesComponent
	 * Size -> 0x0010 (FullSize[0x00C8] - InheritedSize[0x00B8])
	 */
	class UKillerSoundCuesComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_KQUA[0x10];                                  // 0x00B8(0x0010) MISSED OFFSET (PADDING)

	public:
		void StopTrackingActor(class AActor* actorToStopTracking);
		void StartTrackingActorWithLifetime(class AActor* actorToStartTracking, const class FName& distanceDataID, float trackerLifetime);
		void StartTrackingActor(class AActor* actorToStartTracking, const class FName& distanceDataID);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.KillInteractionDefinition
	 * Size -> 0x0090 (FullSize[0x07D0] - InheritedSize[0x0740])
	 */
	class UKillInteractionDefinition : public UChargeableInteractionDefinition
	{
	public:
		bool                                                       _disableFOVSystemDuringInteraction;                      // 0x0740(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _overrideSlasherFieldOfViewDuringInteraction;            // 0x0741(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _overrideCamperFieldOfViewDuringInteraction;             // 0x0742(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _camperCopySlasherFOVCurve;                              // 0x0743(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FName                                                _cameraFOVCurveName;                                     // 0x0744(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<class FString>                                      _nonOverrideableTargetInteractions;                      // 0x0750(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPrivate
		bool                                                       _chargeCompleted;                                        // 0x0760(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _isKillShownInThirdPerson;                               // 0x0761(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _manuallyManageMeshHiding;                               // 0x0762(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _survivorAnimationLastAfterInteractionEnds;              // 0x0763(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_3MVN[0x34];                                  // 0x0764(0x0034) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      _maximumDelayBeforeSurvivorDeath;                        // 0x0798(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_UWUY[0x4];                                   // 0x079C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAnimationMontageDescriptor                         _exitMontage;                                            // 0x07A0(0x0020) Edit, NativeAccessSpecifierPrivate
		float                                                      _slasherFacingTolerance;                                 // 0x07C0(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_EEP9[0xC];                                   // 0x07C4(0x000C) MISSED OFFSET (PADDING)

	public:
		void OnMoriCancelled();
		void OnKillAudioActivation(bool Active, class ADBDPlayer* interactingPlayer);
		class ACamperPlayer* GetOwningSurvivor();
		struct FAnimationMontageDescriptor GetExitAnimationMontage();
		bool GetChargeCompleted();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.LacerationUIData
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class ULacerationUIData : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.LandingPageTabsDataAsset
	 * Size -> 0x00F0 (FullSize[0x0128] - InheritedSize[0x0038])
	 */
	class ULandingPageTabsDataAsset : public UPrimaryDataAsset
	{
	public:
		TMap<EStorefrontState, struct FLandingPageTabData>         BigButtonsData;                                          // 0x0038(0x0050) Edit, NativeAccessSpecifierPublic
		TMap<EStorefrontState, struct FLandingPageTabData>         MediumButtonsData;                                       // 0x0088(0x0050) Edit, NativeAccessSpecifierPublic
		TMap<EStorefrontState, struct FLandingPageTabData>         SmallButtonsData;                                        // 0x00D8(0x0050) Edit, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.LanternInteractable
	 * Size -> 0x0058 (FullSize[0x0380] - InheritedSize[0x0328])
	 */
	class ALanternInteractable : public AInteractable
	{
	public:
		class FScriptMulticastDelegate                             OnLanternStateChanged;                                   // 0x0328(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnLanternCollectedByPlayerCosmetic;                      // 0x0338(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DUVF[0x20];                                  // 0x0348(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              _collectableClass;                                       // 0x0368(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_OSE6[0x10];                                  // 0x0370(0x0010) MISSED OFFSET (PADDING)

	public:
		void SlasherDestroyLantern(class ADBDPlayer* Player);
		void OnSlasherDestroyedLantern(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
		void OnCamperWasHooked(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
		void OnCamperLeavingHook(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
		void OnBackToCollectableTimerEnd();
		ELanternState GetLanternState();
		void CollectLight(class ADBDPlayer* Player);
		void ChangeLanternState(ELanternState newLanternState);
		bool CanBeDestroyed();
		bool CanBeCollected();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.LanternLightCollectable
	 * Size -> 0x0008 (FullSize[0x04B8] - InheritedSize[0x04B0])
	 */
	class ALanternLightCollectable : public ACollectable
	{
	public:
		class ALanternInteractable*                                _parentLantern;                                          // 0x04B0(0x0008) Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void SetParentLantern(class ALanternInteractable* parentLantern);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.LegalMenuScreen
	 * Size -> 0x0048 (FullSize[0x0168] - InheritedSize[0x0120])
	 */
	class ULegalMenuScreen : public UScreenBase
	{
	public:
		unsigned char                                              UnknownData_2MUP[0x48];                                  // 0x0120(0x0048) MISSED OFFSET (PADDING)

	public:
		void OnOkClick();
		void OnDeclineClick();
		void OnAcceptClick();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.LevelAISetupComponent
	 * Size -> 0x0000 (FullSize[0x00B8] - InheritedSize[0x00B8])
	 */
	class ULevelAISetupComponent : public UActorComponent
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.WorldRunawayMeshComponent
	 * Size -> 0x0024 (FullSize[0x1050] - InheritedSize[0x102C])
	 */
	class UWorldRunawayMeshComponent : public UDBDSkeletalMeshComponentBudgeted
	{
	public:
		float                                                      _runAwayMustTickDuration;                                // 0x102C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      _returnMustTickDuration;                                 // 0x1030(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_SMEB[0x1C];                                  // 0x1034(0x001C) MISSED OFFSET (PADDING)

	public:
		void SetShouldRunAwayWithRandomDelay(bool should, float delayRange);
		void SetShouldRunAwayWithDelay(bool should, float Delay);
		void SetShouldRunAway(bool should);
		bool GetShouldRunAway();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.LevelCrowWRMeshComponent
	 * Size -> 0x0000 (FullSize[0x1050] - InheritedSize[0x1050])
	 */
	class ULevelCrowWRMeshComponent : public UWorldRunawayMeshComponent
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.LevelParadise
	 * Size -> 0x00F8 (FullSize[0x0328] - InheritedSize[0x0230])
	 */
	class ALevelParadise : public AActor
	{
	public:
		float                                                      LoopStartDistance;                                       // 0x0230(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LoopDistance;                                            // 0x0234(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USceneComponent*                                     MainPlayerSpawnPoint;                                    // 0x0238(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class USceneComponent*>                             OtherSurvivorSpawnPoints;                                // 0x0240(0x0010) Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		TArray<class USceneComponent*>                             ParadiseTiles;                                           // 0x0250(0x0010) Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		class AActor*                                              ParadiseViewTarget;                                      // 0x0260(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UG3L[0xA8];                                  // 0x0268(0x00A8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ADBDPlayer*                                          _spawnedMainPawn;                                        // 0x0310(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class USceneComponent*                                     _runnerComponent;                                        // 0x0318(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _fadeOutDuration;                                        // 0x0320(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _fadeInDuration;                                         // 0x0324(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void ParadiseEntered(const struct FParadiseData& PlayerData);
		void OnInterpolationDone();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.LevelReadyToPlayPlayerComponent
	 * Size -> 0x0050 (FullSize[0x0108] - InheritedSize[0x00B8])
	 */
	class ULevelReadyToPlayPlayerComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_VWEL[0x20];                                  // 0x00B8(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FLevelReadyToPlayRequirements>               _levelReadyToPlayRequirementsTarget;                     // 0x00D8(0x0010) Net, ZeroConstructor, Transient, RepNotify, NativeAccessSpecifierPrivate
		TArray<struct FLevelReadyToPlayRequirements>               _levelReadyToPlayRequirementState;                       // 0x00E8(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_FS67[0x10];                                  // 0x00F8(0x0010) MISSED OFFSET (PADDING)

	public:
		void Server_SetIsReadyToPlay(uint32_t readyToPlay);
		void OnRep_LevelReadyToPlayRequirementsTarget();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.LightFollower
	 * Size -> 0x0030 (FullSize[0x00E8] - InheritedSize[0x00B8])
	 */
	class ULightFollower : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_CX7G[0x30];                                  // 0x00B8(0x0030) MISSED OFFSET (PADDING)

	public:
		void SetLeader(class ULightComponent* Leader, float maxIntensity);
		void AddFollower(class ULightComponent* Follower);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.LightFunctionActorSpawner
	 * Size -> 0x0010 (FullSize[0x02E0] - InheritedSize[0x02D0])
	 */
	class ULightFunctionActorSpawner : public UActorSpawner
	{
	public:
		class UTexture*                                            LightFunctionTexture;                                    // 0x02D0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_GCXH[0x8];                                   // 0x02D8(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.LightingData
	 * Size -> 0x00A0 (FullSize[0x00D8] - InheritedSize[0x0038])
	 */
	class ULightingData : public UDataAsset
	{
	public:
		unsigned char                                              DefaultLighting[0x30];                                   // 0x0038(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              DefaultAtlantaLighting[0x30];                            // 0x0068(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		TArray<struct FSceneLightingDescription>                   Descriptions;                                            // 0x0098(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPrivate
		unsigned char                                              AdaptiveShadowMapControllersActor[0x30];                 // 0x00A8(0x0030) UNKNOWN PROPERTY: SoftClassProperty

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.LightingFactory
	 * Size -> 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
	 */
	class ULightingFactory : public UObject
	{
	public:
		class ULightingData*                                       _data;                                                   // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.LightingHelper
	 * Size -> 0x00C0 (FullSize[0x00F0] - InheritedSize[0x0030])
	 */
	class ULightingHelper : public UObject
	{
	public:
		unsigned char                                              UnknownData_FTMU[0x18];                                  // 0x0030(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ABaseSky*                                            _levelLighting;                                          // 0x0048(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class ABaseSky*                                            _levelLightingFixed;                                     // 0x0050(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class ABaseSky*                                            _levelLightingSpawned;                                   // 0x0058(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class ABaseSky*                                            _levelLightingWithoutExposure;                           // 0x0060(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class AActor*                                              _adaptiveShadowMapControllersActor;                      // 0x0068(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class ULightingInterpolator*                               _lightingInterpolator;                                   // 0x0070(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class ULightingFactory*                                    _lightingFactory;                                        // 0x0078(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UPostProcessComponent*                               _postProcessCache;                                       // 0x0080(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _bIsDreamworldActive;                                    // 0x0088(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_X3MW[0x67];                                  // 0x0089(0x0067) MISSED OFFSET (PADDING)

	public:
		void ToggleDreamworldLighting(bool bActivateDreamworld);
		class UTextureCube* GetTextureCube(const class FName& mapTheme);
		class UClass* GetSourceLevelLightingClass();
		class UActorComponent* GetInitialComponentState(const class FName& ComponentName);
		void DBD_ModifyExposure(float value);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.LightingInterpolator
	 * Size -> 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
	 */
	class ULightingInterpolator : public UObject
	{
	public:
		class FScriptMulticastDelegate                             OnInterpolationDone;                                     // 0x0030(0x0010) ZeroConstructor, Transient, InstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8ALK[0x38];                                  // 0x0040(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ABaseSky*                                            _targetLighting;                                         // 0x0078(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void STATIC_LerpSkylight(class USkyLightComponent* Target, class USkyLightComponent* A, class USkyLightComponent* B, float alpha);
		void STATIC_LerpLight(class ULightComponent* Target, class ULightComponent* A, class ULightComponent* B, float alpha);
		void STATIC_LerpHeightFog(class UExponentialHeightFogComponent* Target, class UExponentialHeightFogComponent* A, class UExponentialHeightFogComponent* B, float alpha, float thresholdBeforeSwitchingtoB);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.SpawnerStrategy
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class USpawnerStrategy : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.LimitAccumulationSpawnerStrategy
	 * Size -> 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
	 */
	class ULimitAccumulationSpawnerStrategy : public USpawnerStrategy
	{
	public:
		unsigned char                                              UnknownData_KHY9[0x10];                                  // 0x0030(0x0010) MISSED OFFSET (PADDING)

	public:
		void SetRecycleThresholdPercentage(float recycleThresholdPercentage);
		void SetRecycleDistancePercentage(float recycleDistancePercentage);
		void SetMaxOverlapping(int32_t maxOverlapping);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.LoadingScreen
	 * Size -> 0x0018 (FullSize[0x0138] - InheritedSize[0x0120])
	 */
	class ULoadingScreen : public UScreenBase
	{
	public:
		unsigned char                                              UnknownData_Q85K[0x18];                                  // 0x0120(0x0018) MISSED OFFSET (PADDING)

	public:
		void OnLoadingTextTimerComplete();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.LoadingUtilities
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class ULoadingUtilities : public UBlueprintFunctionLibrary
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.LoadoutControllerSubsystem
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class ULoadoutControllerSubsystem : public UGameInstanceSubsystem
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.LoadoutPresetController
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class ULoadoutPresetController : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.LoadoutSlotFloatingWidget
	 * Size -> 0x0008 (FullSize[0x0378] - InheritedSize[0x0370])
	 */
	class ULoadoutSlotFloatingWidget : public UBaseTooltipWidget
	{
	public:
		class UTextBlock*                                          Message;                                                 // 0x0370(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.LobbyControllerSubsystem
	 * Size -> 0x0078 (FullSize[0x00B0] - InheritedSize[0x0038])
	 */
	class ULobbyControllerSubsystem : public UGameInstanceSubsystem
	{
	public:
		TWeakObjectPtr<class ULobbyDisplayStandController>         _localPlayerDisplayStandController;                      // 0x0038(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TMap<class FString, class ULobbyDisplayStandController*>   _displayStandControllers;                                // 0x0040(0x0050) NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_BFL4[0x20];                                  // 0x0090(0x0020) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.LobbyDialogueSubsystem
	 * Size -> 0x0058 (FullSize[0x0090] - InheritedSize[0x0038])
	 */
	class ULobbyDialogueSubsystem : public UGameInstanceSubsystem
	{
	public:
		unsigned char                                              UnknownData_U6OU[0x58];                                  // 0x0038(0x0058) MISSED OFFSET (PADDING)

	public:
		void STATIC_NotifyDialogueInterrupted();
		void STATIC_NotifyCharacterPlayedDialogueForThisLobby(const class FString& characterName, int32_t dialogueId);
		bool STATIC_IsLobbyFullForRole(EPlayerRole Role);
		bool STATIC_HasCharacterPlayedDialogueForThisLobby(const class FString& characterName, int32_t dialogueId);
		TArray<class ADBDMenuPlayer*> STATIC_GetGuestLobbyMembers();
		void STATIC_CountGuestLobbyMembersWithAudioSwitch(EAudioCustomizationCategory switchCategory, TArray<class FString> audioSwitches, int32_t* numMatching, int32_t* numNotMatching);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.LobbyDisplayStandController
	 * Size -> 0x00A8 (FullSize[0x01C8] - InheritedSize[0x0120])
	 */
	class ULobbyDisplayStandController : public UDisplayStandController
	{
	public:
		unsigned char                                              UnknownData_4BEU[0xA8];                                  // 0x0120(0x00A8) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.LobbyPositionsSubsystem
	 * Size -> 0x00B8 (FullSize[0x00F0] - InheritedSize[0x0038])
	 */
	class ULobbyPositionsSubsystem : public UGameInstanceSubsystem
	{
	public:
		unsigned char                                              UnknownData_0OAH[0xB8];                                  // 0x0038(0x00B8) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.LocalEventManager
	 * Size -> 0x1758 (FullSize[0x1790] - InheritedSize[0x0038])
	 */
	class ULocalEventManager : public UGameInstanceSubsystem
	{
	public:
		unsigned char                                              UnknownData_HWF9[0x1758];                                // 0x0038(0x1758) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.LocalPlayerTrackerComponent
	 * Size -> 0x0010 (FullSize[0x00C8] - InheritedSize[0x00B8])
	 */
	class ULocalPlayerTrackerComponent : public UActorComponent
	{
	public:
		class FScriptMulticastDelegate                             TrackerOnLocallyObservedChanged;                         // 0x00B8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic

	public:
		void TriggerOnLocallyObservedChanged();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.LocalPlayerUtilities
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class ULocalPlayerUtilities : public UBlueprintFunctionLibrary
	{
	public:
		class ADBDPlayerState* STATIC_GetLocalHumanPlayerState(class UObject* WorldContextObject);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.Locker
	 * Size -> 0x0138 (FullSize[0x0460] - InheritedSize[0x0328])
	 */
	class ALocker : public AInteractable
	{
	public:
		unsigned char                                              UnknownData_KY49[0x18];                                  // 0x0328(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnPlayerInLockerChanged;                                 // 0x0340(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		float                                                      FastDoorActivationAudibleRange;                          // 0x0350(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NormalDoorActivationAudibleRange;                        // 0x0354(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBoxComponent*                                       _boxComponent;                                           // 0x0358(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAnimationMontageSlave*                              _montageFollower;                                        // 0x0360(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UMontagePlayer*                                      _montagePlayer;                                          // 0x0368(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class ADBDPlayer*                                          _playerOpeningLocker;                                    // 0x0370(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class ADBDPlayer*                                          _playerInLocker;                                         // 0x0378(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UInteractor*                                         _mainInteractor;                                         // 0x0380(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UPrimitiveComponent*                                 _frontInteractionZone;                                   // 0x0388(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UInteractionDefinition*                              _searchEmpty;                                            // 0x0390(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UInteractionDefinition*                              _searchPlayer;                                           // 0x0398(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UChildActorComponent*                                _killerInteractionActor;                                 // 0x03A0(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class ULockerAnimInstance*                                 _lockerAnimInstance;                                     // 0x03A8(0x0008) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FGameplayTagContainer                               _interactionExitClosetSemantics;                         // 0x03B0(0x0020) Edit, NativeAccessSpecifierPrivate
		class UGameplayTagContainerComponent*                      _lockerObjectState;                                      // 0x03D0(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_8HSI[0x40];                                  // 0x03D8(0x0040) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       _preventAllInteractions;                                 // 0x0418(0x0001) Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _local_preventAllInteractions;                           // 0x0419(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_M85B[0x6];                                   // 0x041A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ABaseLockerItem*                                     _spawnedLockerItem;                                      // 0x0420(0x0008) Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_15PD[0x30];                                  // 0x0428(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAIPerceptionStimuliSourceComponent*                 _perceptionStimuliComponent;                             // 0x0458(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void StopMinNearOutlineDistLerp(class ADBDPlayer* Player);
		void SetSurvivorInLocker(class ACamperPlayer* Survivor);
		void SetPlayerOpeningLocker(class ADBDPlayer* Player);
		void OnSurvivorHealthChanged(ECamperDamageState before, ECamperDamageState after);
		void OnSurvivorEndPlay(class AActor* Actor, EEndPlayReason EndPlayReason);
		void OnRep_PreventAllInteractions();
		void OnPlayerInLockerChanged__DelegateSignature(class ADBDPlayer* playerWhoWasInLocker, class ADBDPlayer* playerNowInLocker);
		void Multicast_EjectSurvivor();
		bool IsOccupied();
		bool IsFacingLocker(class ADBDPlayer* Player, float toleranceDegreeAngle);
		class ACamperPlayer* GetSurvivorInLocker();
		class UPrimitiveComponent* GetStunZone();
		class ADBDPlayer* GetPlayerInLocker();
		class UGameplayTagContainerComponent* GetObjectState();
		class UInteractor* GetInteractor();
		class AActor* GetChildInteractionActor();
		void EjectSurvivor();
		void Authority_ReportOpenLockerNoiseEventToAI(bool fastActivation);
		void Authority_EnableOtherInteractors(class UInteractor* usableInteractor, bool usable);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.LockerAmmoActorOutlineUpdateStrategy
	 * Size -> 0x0000 (FullSize[0x00E0] - InheritedSize[0x00E0])
	 */
	class ULockerAmmoActorOutlineUpdateStrategy : public UDefaultOutlineUpdateStrategy
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.LockerAnimInstance
	 * Size -> 0x0000 (FullSize[0x02D0] - InheritedSize[0x02D0])
	 */
	class ULockerAnimInstance : public USleepingAnimInstance
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.LockerOutlineUpdateStrategy
	 * Size -> 0x0018 (FullSize[0x0150] - InheritedSize[0x0138])
	 */
	class ULockerOutlineUpdateStrategy : public USourceBasedOutlineUpdateStrategy
	{
	public:
		unsigned char                                              UnknownData_EETV[0x18];                                  // 0x0138(0x0018) MISSED OFFSET (PADDING)

	public:
		struct FLinearColor GetRedColor();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.LoudNoise
	 * Size -> 0x0070 (FullSize[0x02A0] - InheritedSize[0x0230])
	 */
	class ALoudNoise : public AActor
	{
	public:
		class UDecalComponent*                                     _toInfinityDecal;                                        // 0x0230(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UParticleSystemComponent*                            _distortionParticleSystem;                               // 0x0238(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAkComponent*                                        _ak_audio_loudNoise;                                     // 0x0240(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USceneComponent*                                     _rootScene;                                              // 0x0248(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      _loudNoiseMinDistance;                                   // 0x0250(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_4K97[0x34];                                  // 0x0254(0x0034) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      _loudNoiseLifetime;                                      // 0x0288(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _heightToAddToLoudNoiseLocation;                         // 0x028C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _loudNoiseDecalDistance;                                 // 0x0290(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _cameraDecalDistance;                                    // 0x0294(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_0UMZ[0x8];                                   // 0x0298(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.LoudNoiseEventSystem
	 * Size -> 0x0070 (FullSize[0x0128] - InheritedSize[0x00B8])
	 */
	class ULoudNoiseEventSystem : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_N0J9[0x70];                                  // 0x00B8(0x0070) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.LoudNoiseHUDIndicator
	 * Size -> 0x0078 (FullSize[0x0290] - InheritedSize[0x0218])
	 */
	class ULoudNoiseHUDIndicator : public USceneComponent
	{
	public:
		class UStaticMesh*                                         MaskMesh;                                                // 0x0218(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMesh*                                         DistortionMesh;                                          // 0x0220(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EdgePadding;                                             // 0x0228(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CornerRoundness;                                         // 0x022C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ScreenFadeOutDistance;                                   // 0x0230(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HHIR[0x4];                                   // 0x0234(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             LoudNoiseAddedEvent;                                     // 0x0238(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9R4C[0x38];                                  // 0x0248(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FLoudNoiseIndicatorData>                     _trackedNoises;                                          // 0x0280(0x0010) ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate

	public:
		void AddTrackedNoise(const struct FVector& Location, float Duration);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.LoudNoiseNotifier
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class ULoudNoiseNotifier : public UBlueprintFunctionLibrary
	{
	public:
		void STATIC_FireWithTimeBudgeter(class UObject* WorldContextObject, class AActor* Instigator, const struct FVector& Location, bool shouldTrack, float audibleRange, class ADBDPlayer* instigatingPlayer, bool isQuickAction);
		void STATIC_Fire(class UObject* WorldContextObject, class AActor* Instigator, const struct FVector& Location, bool shouldTrack, float audibleRange, class ADBDPlayer* instigatingPlayer, bool isQuickAction, bool isDeceivingNoise);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.LoudNoiseUtilities
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class ULoudNoiseUtilities : public UBlueprintFunctionLibrary
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.LunarEventComponent
	 * Size -> 0x0050 (FullSize[0x0108] - InheritedSize[0x00B8])
	 */
	class ULunarEventComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_NXLJ[0x18];                                  // 0x00B8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    _lanternCollectedCount;                                  // 0x00D0(0x0004) Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    _additionalEventProgressCount;                           // 0x00D4(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_QNXU[0x30];                                  // 0x00D8(0x0030) MISSED OFFSET (PADDING)

	public:
		void OnRep_lanternCollectedCount();
		void OnLanternHoldTimerEnd();
		void OnFinishedPlaying(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
		void Multicast_ResetLanternLight(class ALanternInteractable* LanternInteractable);
		void Local_OnCamperLostLantern(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
		void Local_OnCamperEscape(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
		void Authority_OnSlasherDestroysLantern(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
		void Authority_OnPlayerLeaveGame(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
		void Authority_OnPickupLantern(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
		void Authority_OnFixGenerator(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
		void Authority_OnDestroyCamperLightGameEvent(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
		void Authority_OnCamperLostLantern(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
		void Authority_OnCamperEscape(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.MagicFountain
	 * Size -> 0x0018 (FullSize[0x0340] - InheritedSize[0x0328])
	 */
	class AMagicFountain : public AInteractable
	{
	public:
		unsigned char                                              UnknownData_43WF[0x8];                                   // 0x0328(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             AIInteractionOffset;                                     // 0x0330(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q660[0x4];                                   // 0x033C(0x0004) MISSED OFFSET (PADDING)

	public:
		bool IsCorrupted();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.MagicFountainOutlineUpdateStrategy
	 * Size -> 0x0018 (FullSize[0x00D8] - InheritedSize[0x00C0])
	 */
	class UMagicFountainOutlineUpdateStrategy : public UOutlineUpdateStrategy
	{
	public:
		struct FLinearColor                                        _outlineColor;                                           // 0x00C0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_QEGU[0x8];                                   // 0x00D0(0x0008) MISSED OFFSET (PADDING)

	public:
		void SetFountainCorrupted(bool corrupted);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ManualIconStrategy
	 * Size -> 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
	 */
	class UManualIconStrategy : public UBasePerkIconStrategy
	{
	public:
		unsigned char                                              UnknownData_CN01[0x8];                                   // 0x0038(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.MapActorComponent
	 * Size -> 0x0030 (FullSize[0x00E8] - InheritedSize[0x00B8])
	 */
	class UMapActorComponent : public UActorComponent
	{
	public:
		EMapActorCategory                                          Category;                                                // 0x00B8(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9QK9[0x7];                                   // 0x00B9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UPrimitiveComponent*                                 _mapActorCollider;                                       // 0x00C0(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L3AA[0x18];                                  // 0x00C8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       _detectionEnabled;                                       // 0x00E0(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_MNS6[0x7];                                   // 0x00E1(0x0007) MISSED OFFSET (PADDING)

	public:
		void Multicast_SetDetectionEnabled(bool Enabled);
		bool IsKnownBy(class ADBDPlayer* Character);
		bool GetDetectionEnabled();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.MapActorDB
	 * Size -> 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
	 */
	class UMapActorDB : public UObject
	{
	public:
		unsigned char                                              UnknownData_21JT[0x50];                                  // 0x0030(0x0050) MISSED OFFSET (PADDING)

	public:
		TArray<class AActor*> GetUniqueRandom(TArray<EMapActorCategory> Categories, int32_t Count);
		class AActor* GetRandom(EMapActorCategory Category);
		TArray<EMapActorCategory> CopyListMinusCategories(TArray<EMapActorCategory> Categories, TArray<EMapActorCategory> categoriesToRemove);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.MapActorDetectorComponent
	 * Size -> 0x0028 (FullSize[0x00E0] - InheritedSize[0x00B8])
	 */
	class UMapActorDetectorComponent : public UActorComponent
	{
	public:
		class FScriptMulticastDelegate                             OnActorDetected;                                         // 0x00B8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		TArray<EMapActorCategory>                                  CollectedCategories;                                     // 0x00C8(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
		class UPrimitiveComponent*                                 _primitive;                                              // 0x00D8(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void SetDetectionPrimitive(class UPrimitiveComponent* Primitive);
		void OnOverlapEnter(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.MapData
	 * Size -> 0x00B0 (FullSize[0x00E8] - InheritedSize[0x0038])
	 */
	class UMapData : public UDataAsset
	{
	public:
		class FName                                                ThemeName;                                               // 0x0038(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ThemeWeather;                                            // 0x0044(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AudioStateThemes;                                        // 0x0050(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AudioStateWeather;                                       // 0x005C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AudioThemeEvent;                                         // 0x0068(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AudioLimitPointEvent;                                    // 0x0074(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              AudioThemeSoundBank[0x30];                               // 0x0080(0x0030) UNKNOWN PROPERTY: SoftObjectProperty
		int32_t                                                    MapWidth;                                                // 0x00B0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MapHeight;                                               // 0x00B4(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Draft;                                                   // 0x00B8(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_85OC[0x7];                                   // 0x00B9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTileProperties>                             MapTileProperties;                                       // 0x00C0(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		class UBlackboardData*                                     Blackboard;                                              // 0x00D0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Gesture;                                                 // 0x00D8(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AHVM[0x7];                                   // 0x00D9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UProceduralGenerationData*                           _proceduralGenerationData;                               // 0x00E0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.MatchHandler
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UMatchHandler : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.MatchIncentivesManager
	 * Size -> 0x0040 (FullSize[0x0078] - InheritedSize[0x0038])
	 */
	class UMatchIncentivesManager : public UGameInstanceSubsystem
	{
	public:
		unsigned char                                              UnknownData_85UB[0x40];                                  // 0x0038(0x0040) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.MatchmakingFlowSubsystem
	 * Size -> 0x00D0 (FullSize[0x0108] - InheritedSize[0x0038])
	 */
	class UMatchmakingFlowSubsystem : public UGameInstanceSubsystem
	{
	public:
		unsigned char                                              UnknownData_8XJV[0xD0];                                  // 0x0038(0x00D0) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.MatchMakingWidgetScreen
	 * Size -> 0x0000 (FullSize[0x0120] - InheritedSize[0x0120])
	 */
	class UMatchMakingWidgetScreen : public UScreenBase
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.MatchManagementScreen
	 * Size -> 0x00C0 (FullSize[0x01E0] - InheritedSize[0x0120])
	 */
	class UMatchManagementScreen : public UScreenBase
	{
	public:
		unsigned char                                              UnknownData_MC9U[0xC0];                                  // 0x0120(0x00C0) MISSED OFFSET (PADDING)

	public:
		void OnRemoveMap(const class FString& MapId);
		void OnPerksSettingsChange(int32_t value);
		void OnOfferingsSettingsChange(int32_t value);
		void OnItemsAndAddonsSettingsChange(int32_t value);
		void OnBackButtonClick();
		void OnApplyChangesClicked();
		void OnAllowDlcSettingsClick();
		void OnAddMap(const class FString& MapId);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.MeatHook
	 * Size -> 0x02B8 (FullSize[0x05E0] - InheritedSize[0x0328])
	 */
	class AMeatHook : public AInteractable
	{
	public:
		unsigned char                                              UnknownData_SQM9[0x20];                                  // 0x0328(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       WasSurvivorStruggleCancelled;                            // 0x0348(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsSacrificeEnabled;                                      // 0x0349(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IB09[0x2];                                   // 0x034A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             AIInteractionOffset;                                     // 0x034C(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5FJQ[0xA8];                                  // 0x0358(0x00A8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UDBDClipRegionComponent*>                     ClipRegions;                                             // 0x0400(0x0010) BlueprintVisible, ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected
		bool                                                       IsSurvivorStruggling;                                    // 0x0410(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       IsInBasement;                                            // 0x0411(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       IsBreakable;                                             // 0x0412(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       IsSabotageable;                                          // 0x0413(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FGameplayTag                                        HookIdentityTag;                                         // 0x0414(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       SnapHookedCharacter;                                     // 0x0420(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       FullyHooked;                                             // 0x0421(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_3FG8[0x2];                                   // 0x0422(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      _struggleThreshold;                                      // 0x0424(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCharacterPusherComponent*                           _characterPusher;                                        // 0x0428(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCapsuleComponent*                                   _slasherCollisionBlocker;                                // 0x0430(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCapsuleComponent*                                   _conditionalSlasherCollisionBlocker;                     // 0x0438(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FGameplayTagContainer                               _conditionalSlasherCollisionBlockerPresenceTags;         // 0x0440(0x0020) Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
		class UPollableEventListener*                              _eventListener;                                          // 0x0460(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class ACamperPlayer*                                       _hookedSurvivor;                                         // 0x0468(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class ADBDPlayer*                                          _hookBreakerPlayer;                                      // 0x0470(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_7SW7[0x70];                                  // 0x0478(0x0070) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              _campersThatSabotagedMeatHook[0x50];                     // 0x04E8(0x0050) UNKNOWN PROPERTY: SetProperty
		class UInteractor*                                         _mainInteractor;                                         // 0x0538(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UChargeableInteractionDefinition*                    _unhook;                                                 // 0x0540(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class USceneComponent*                                     _camperHookedSnapTransform;                              // 0x0548(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class AEntity*                                             _entity;                                                 // 0x0550(0x0008) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_WMTN[0x1C];                                  // 0x0558(0x001C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       _preventDrainProgression;                                // 0x0574(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_JN9E[0x3];                                   // 0x0575(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAIPerceptionStimuliSourceComponent*                 _perceptionStimuliComponent;                             // 0x0578(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class ADBDPlayer*                                          _interactingPlayer;                                      // 0x0580(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UMapActorComponent*                                  _cachedMapActor;                                         // 0x0588(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_D4ML[0x50];                                  // 0x0590(0x0050) MISSED OFFSET (PADDING)

	public:
		void UpdateSlasherBlockerCollision();
		void SetMapActor(class UMapActorComponent* value);
		void SetIsBeingSabotaged(bool isBeingSabotaged);
		void SetInteractingPlayer(class ADBDPlayer* interactingPlayer);
		void SetEntity(class AEntity* Entity);
		void OnTickStruggle(float DeltaTime);
		void OnStruggleSkillCheckFailed_Cosmetic();
		void OnStruggleExit();
		void OnStruggleEnter();
		void OnStopPushingPlayer(class ACharacter* Character);
		void OnStartPushingPlayer(class ACharacter* Character);
		void OnSacrificeOut();
		void OnSacrificeIn();
		void OnReactionIn();
		void OnReaction();
		void OnOwnerReplicated();
		void OnHookingExit();
		void OnHookingEnter();
		void OnHookedSurvivorChanged(class ACamperPlayer* before, class ACamperPlayer* after);
		void OnHookedSurvivorAttacked();
		void OnHookedIdle();
		void OnHookedExit();
		void OnHookedEnter();
		void OnAutoRepair();
		void Multicast_SetIsSacrificed(bool IsSacrificed);
		void Multicast_SetIsSabotaged(bool setIsSabotaged, class ADBDPlayer* hookBreaker, bool useCamperHookRespawnDurationModifiers, float overrideBaseHookRespawnDuration);
		void Multicast_SetIsBrokenFromUnhook(bool setIsBrokendFromUnhook, class ADBDPlayer* hookBreaker, float overrideBaseHookRespawnDuration);
		void Multicast_SetHookedSurvivor(class ACamperPlayer* Survivor);
		void Multicast_RefreshCharmCustomization();
		void Multicast_EscapeAttemptResult(class ADBDPlayer* Player, bool Result);
		void Local_MoveSurvivorToHook(class ACamperPlayer* Survivor, float Duration);
		struct FAnimationMontageDescriptor GetUnhookOutMontageDescriptor();
		struct FAnimationMontageDescriptor GetUnhookInMontageDescriptor();
		class UChargeableInteractionDefinition* GetUnhookCID();
		float GetStruggleThreshold();
		float GetStrugglePercent();
		class ADBDPlayer* GetSaboteurPlayer();
		float GetSabotageHookRespawnDuration();
		class UMontagePlayer* GetMontagePlayer();
		class UAkComponent* GetMeatHookAkAudioComponent();
		class UInteractor* GetMainInteractor();
		class USphereComponent* GetKickSlasherDetectionZone();
		bool GetIsSacrificed();
		bool GetIsSabotaged();
		bool GetIsInBasement();
		bool GetIsBroken();
		class UBoxComponent* GetInteractorZoneComponent();
		class UPrimitiveComponent* GetInteractorPrimitiveComponent();
		class ADBDPlayer* GetInteractingPlayer();
		struct FVector GetHookPosition();
		class ACamperPlayer* GetHookedSurvivor();
		class UHookableComponent* GetHookableComponentOfHookedActor();
		class UChargeableInteractionDefinition* GetEscapeHookCID();
		class UCharacterPusherComponent* GetCharacterPusher();
		class USceneComponent* GetCamperUnkookFocalPointTransform();
		class USceneComponent* GetCamperHookedSnapTransform();
		void FireHookSoundEvent(const class FName& NoiseRangeTunable, class ADBDPlayer* soundInstigator);
		void DebugHookedSurvivor(class ACamperPlayer* expectedSurvivor);
		void Cosmetic_SetAsScourgeHookStart();
		bool CanUnhookSurvivor(class ACamperPlayer* Survivor);
		bool CanSurvivorStruggle(class ACamperPlayer* Survivor);
		bool CanSurvivorAttemptEscape(class ACamperPlayer* Survivor);
		bool CanHookSurvivor();
		bool CanBeSabotaged();
		void BroadcastUnhook(class ADBDPlayer* rescuer);
		void Authority_SignalUnhookingEnter();
		void Authority_SignalUnhookingCharged();
		void Authority_SignalUnhookingAborted();
		void Authority_SignalSurvivorAttemptingEscapeAborted();
		void Authority_SignalSurvivorAttemptingEscape();
		void Authority_SetIsSacrificed(bool IsSacrificed);
		void Authority_SetIsSabotaged(bool isSabotaged, class ADBDPlayer* Saboteur, bool useCamperHookRespawnDurationModifiers, float overrideBaseHookRespawnDuration);
		void Authority_SetIsBrokenFromUnhook(bool isBrokenFromUnhook, class ADBDPlayer* hookBreaker, float overrideBaseHookRespawnDuration);
		void Authority_SetHookedSurvivor(class ACamperPlayer* Survivor);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.MeatHookAnimInstance
	 * Size -> 0x0010 (FullSize[0x02D0] - InheritedSize[0x02C0])
	 */
	class UMeatHookAnimInstance : public UAnimInstance
	{
	public:
		bool                                                       IsBroken;                                                // 0x02C0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_A84D[0x3];                                   // 0x02C1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Yaw;                                                     // 0x02C4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       IsSurvivorStruggling;                                    // 0x02C8(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_249T[0x7];                                   // 0x02C9(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.MeatHookEntityVisibilityComponent
	 * Size -> 0x0030 (FullSize[0x00E8] - InheritedSize[0x00B8])
	 */
	class UMeatHookEntityVisibilityComponent : public UActorComponent
	{
	public:
		class AEntity*                                             _entity;                                                 // 0x00B8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_6A4A[0x18];                                  // 0x00C0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      _entityReappearSpeed;                                    // 0x00D8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _entityDisappearSpeed;                                   // 0x00DC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_3OYC[0x8];                                   // 0x00E0(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.MeatHookOutlineUpdateStrategy
	 * Size -> 0x0040 (FullSize[0x0178] - InheritedSize[0x0138])
	 */
	class UMeatHookOutlineUpdateStrategy : public USourceBasedOutlineUpdateStrategy
	{
	public:
		struct FLinearColor                                        HookedOutlineColorSlasher;                               // 0x0138(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FLinearColor                                        CarryingOutlineColorSlasher;                             // 0x0148(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FLinearColor                                        DefaultOutlineColorSlasher;                              // 0x0158(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FLinearColor                                        VisibleOutlineColorCamper;                               // 0x0168(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void Local_AddBasementOfferingReveal();
		void Authority_AddBasementHookToPlayerMapItem();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.MeatHookStateMachine
	 * Size -> 0x0000 (FullSize[0x0130] - InheritedSize[0x0130])
	 */
	class UMeatHookStateMachine : public UStateMachine
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.MemoryTracker
	 * Size -> 0x0000 (FullSize[0x0230] - InheritedSize[0x0230])
	 */
	class AMemoryTracker : public AActor
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.MenuAssetLibrary
	 * Size -> 0x0010 (FullSize[0x0130] - InheritedSize[0x0120])
	 */
	class UMenuAssetLibrary : public UItemsAssetLibrary
	{
	public:
		unsigned char                                              UnknownData_FLPP[0x10];                                  // 0x0120(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.MenuForcedLODHandler
	 * Size -> 0x0070 (FullSize[0x0128] - InheritedSize[0x00B8])
	 */
	class UMenuForcedLODHandler : public UActorComponent
	{
	public:
		TArray<EGameFlowStep>                                      _forcedLOD0GameFlowSteps;                                // 0x00B8(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_LFS6[0x60];                                  // 0x00C8(0x0060) MISSED OFFSET (PADDING)

	public:
		void OnMenuPlayerEndPlay(class AActor* menuPlayerActor, EEndPlayReason EndPlayReason);
		void OnCustomizationChanged(ECustomizationCategory Category, const class FName& ItemId, class ADBDMenuPlayer* menuPlayer);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.MenuMeatHook
	 * Size -> 0x0028 (FullSize[0x0258] - InheritedSize[0x0230])
	 */
	class AMenuMeatHook : public AActor
	{
	public:
		unsigned char                                              UnknownData_B65T[0x10];                                  // 0x0230(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCharmSpawnerComponent*                              _charmSpawnerComponent;                                  // 0x0240(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_4IPB[0x10];                                  // 0x0248(0x0010) MISSED OFFSET (PADDING)

	public:
		void OnCharmsUpdated(TArray<struct FCharmIdSlot> charmIDs);
		void BeginDestroySequence_Internal();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.MenuUtilities
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UMenuUtilities : public UBlueprintFunctionLibrary
	{
	public:
		TArray<class ADBDMenuPlayer*> STATIC_GetAllMenuCharacters();
		bool STATIC_AreAllGuestCharactersReady();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.MigrationSubsystem
	 * Size -> 0x0058 (FullSize[0x0090] - InheritedSize[0x0038])
	 */
	class UMigrationSubsystem : public UGameInstanceSubsystem
	{
	public:
		unsigned char                                              UnknownData_4Q3F[0x58];                                  // 0x0038(0x0058) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.MobileProfileDAL
	 * Size -> 0x0000 (FullSize[0x0088] - InheritedSize[0x0088])
	 */
	class UMobileProfileDAL : public UPlayerProfileDAL
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.MontagePlayer
	 * Size -> 0x01A8 (FullSize[0x0260] - InheritedSize[0x00B8])
	 */
	class UMontagePlayer : public UActorComponent
	{
	public:
		class FScriptMulticastDelegate                             OnMontageStarted;                                        // 0x00B8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7165[0x48];                                  // 0x00C8(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnMontageEnded;                                          // 0x0110(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JDYM[0x30];                                  // 0x0120(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             BPOnMontageBlendingOut;                                  // 0x0150(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MXH4[0x30];                                  // 0x0160(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UDataTable*                                          _animationMappingsTable;                                 // 0x0190(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UDataTable*                                          _playerSpecificMappingsTable;                            // 0x0198(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAnimMontage*                                        _currentlyPlayingMontage;                                // 0x01A0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_OS6S[0x18];                                  // 0x01A8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FMontageInstanceInfo>                        _activeMontagesInfo;                                     // 0x01C0(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		class FName                                                _outSectionName;                                         // 0x01D0(0x000C) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _timeBeforeOut;                                          // 0x01DC(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class USkeletalMeshComponent*                              _skeletalMeshComponent;                                  // 0x01E0(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_NQKP[0x28];                                  // 0x01E8(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class UAnimMontage*, class FName>                     _montageToNameMap;                                       // 0x0210(0x0050) Transient, NativeAccessSpecifierPrivate

	public:
		void Stop(float BlendOutTime);
		void SignalAnimInstanceChanged();
		void SetSkeletalMesh(class USkeletalMeshComponent* SkeletalMeshComponent);
		void SetPlayRate(float PlayRate);
		class UAnimMontage* PlayLoopForDuration(const struct FAnimationMontageDescriptor& animMontageID, float Duration, float PlayRate, const class FName& Out);
		class UAnimMontage* Play(const struct FAnimationMontageDescriptor& animMontageID, float PlayRate, bool isFollower);
		void OnMontageEndedInternal(const struct FGuid& Guid, class UAnimMontage* Montage, bool interrupted);
		void OnMontageBlendingOutInternal(const struct FGuid& Guid, class UAnimMontage* Montage, bool interrupted);
		void JumpToSectionEnd(const class FName& SectionName);
		void JumpToSection(const class FName& SectionName);
		bool IsPlayingAnyMontage();
		bool IsPlaying(const struct FAnimationMontageDescriptor& montageDescriptor);
		class UAnimInstance* GetAnimInstance();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.MoriableComponent
	 * Size -> 0x0020 (FullSize[0x00D8] - InheritedSize[0x00B8])
	 */
	class UMoriableComponent : public UActorComponent
	{
	public:
		TArray<class UInteractionDefinition*>                      _moriInteractions;                                       // 0x00B8(0x0010) ExportObject, Net, ZeroConstructor, Transient, RepNotify, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_UOZ2[0x10];                                  // 0x00C8(0x0010) MISSED OFFSET (PADDING)

	public:
		void OnRep_MoriInteractions();
		void OnMoriUpdateStart();
		void OnMoriFinished(bool hasBeenKilledByMori);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.MoriComponent
	 * Size -> 0x0030 (FullSize[0x00E8] - InheritedSize[0x00B8])
	 */
	class UMoriComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_JAOO[0x18];                                  // 0x00B8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UClass*>                                      _moriInteractionClasses;                                 // 0x00D0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_PYIA[0x8];                                   // 0x00E0(0x0008) MISSED OFFSET (PADDING)

	public:
		void OnMoriUpdateStart();
		void OnMoriFinished();
		void OnMoriChargeCompleted();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.MovementModifierActor
	 * Size -> 0x0008 (FullSize[0x0238] - InheritedSize[0x0230])
	 */
	class AMovementModifierActor : public AActor
	{
	public:
		float                                                      maxSpeedMultiplier;                                      // 0x0230(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M7SP[0x4];                                   // 0x0234(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.MultipleLightsFader
	 * Size -> 0x0028 (FullSize[0x0258] - InheritedSize[0x0230])
	 */
	class AMultipleLightsFader : public AActor
	{
	public:
		TArray<class ULightComponent*>                             _affectedLights;                                         // 0x0230(0x0010) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected
		TArray<float>                                              _lightOriginalIntensities;                               // 0x0240(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected
		float                                                      _timeMultiplier;                                         // 0x0250(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_Z8V1[0x4];                                   // 0x0254(0x0004) MISSED OFFSET (PADDING)

	public:
		void SetAffectedLights(TArray<class ULightComponent*> affectedLights);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.NatAudioAmbienceBox
	 * Size -> 0x0018 (FullSize[0x04C0] - InheritedSize[0x04A8])
	 */
	class UNatAudioAmbienceBox : public UAmbienceBoxComponent
	{
	public:
		class UAkAudioEvent*                                       _onBeginOverlapAudioEvent;                               // 0x04A8(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAkAudioEvent*                                       _onEndOverlapAudioEvent;                                 // 0x04B0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_RI6F[0x8];                                   // 0x04B8(0x0008) MISSED OFFSET (PADDING)

	public:
		void OnEndOverlapAudioAmbience(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex);
		void OnBeginOverlapAudioAmbience(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.NatAudioCustomMesh
	 * Size -> 0x0018 (FullSize[0x0560] - InheritedSize[0x0548])
	 */
	class UNatAudioCustomMesh : public UAudioCustomMeshComponent
	{
	public:
		class UAkAudioEvent*                                       _onBeginOverlapAudioEvent;                               // 0x0548(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAkAudioEvent*                                       _onEndOverlapAudioEvent;                                 // 0x0550(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_HIRT[0x8];                                   // 0x0558(0x0008) MISSED OFFSET (PADDING)

	public:
		void OnEndOverlapAudioMesh(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex);
		void OnBeginOverlapAudioMesh(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.NavArea_BearTrap
	 * Size -> 0x0000 (FullSize[0x0050] - InheritedSize[0x0050])
	 */
	class UNavArea_BearTrap : public UNavArea
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.NavArea_Danger
	 * Size -> 0x0000 (FullSize[0x0050] - InheritedSize[0x0050])
	 */
	class UNavArea_Danger : public UNavArea
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.NavArea_Drone
	 * Size -> 0x0000 (FullSize[0x0050] - InheritedSize[0x0050])
	 */
	class UNavArea_Drone : public UNavArea
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.NavArea_Slasher
	 * Size -> 0x0000 (FullSize[0x0050] - InheritedSize[0x0050])
	 */
	class UNavArea_Slasher : public UNavArea
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.NavigationQueryFilter_EvadeLoop
	 * Size -> 0x0238 (FullSize[0x0288] - InheritedSize[0x0050])
	 */
	class UNavigationQueryFilter_EvadeLoop : public UNavigationQueryFilter
	{
	public:
		unsigned char                                              UnknownData_FCOJ[0x238];                                 // 0x0050(0x0238) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.NavigationScreen
	 * Size -> 0x01A8 (FullSize[0x02C8] - InheritedSize[0x0120])
	 */
	class UNavigationScreen : public UScreenBase
	{
	public:
		unsigned char                                              UnknownData_UBJL[0x1A8];                                 // 0x0120(0x01A8) MISSED OFFSET (PADDING)

	public:
		void OnToggleChatVisibility();
		void OnStartButtonClick();
		void OnSettingsClick();
		void OnSendChatMsgButtonClick(const class FString& Message);
		void OnReadyButtonClick();
		void OnPlayerOptionSelected(const class FString& krakenId, const class FString& playerID, unsigned char Option);
		void OnPlayerInfoClick(int32_t playerID);
		void OnMatchManagementButtonClick();
		void OnMatchMakingBanTimeout();
		void OnInviteFriendClick();
		void OnFadeOutEnded();
		void OnDailyRitualsClick();
		void OnCrowdPlayButtonClick();
		void OnChatInputMouseOver(bool IsMouseOver);
		void OnCharacterSwapArrowClick(bool isNext);
		void OnCancelButtonClick();
		void OnAddPlayerClick(int32_t buttonId);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.NewContentPopupScreen
	 * Size -> 0x0000 (FullSize[0x0140] - InheritedSize[0x0140])
	 */
	class UNewContentPopupScreen : public UGenericPopupScreen
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.NewsContentManager
	 * Size -> 0x00D0 (FullSize[0x0100] - InheritedSize[0x0030])
	 */
	class UNewsContentManager : public UObject
	{
	public:
		unsigned char                                              UnknownData_GTX9[0x18];                                  // 0x0030(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TWeakObjectPtr<class UDBDGameInstance>                     _gameInstance;                                           // 0x0048(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_GVF0[0xB0];                                  // 0x0050(0x00B0) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.NoAccumulationSpawnerStrategy
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UNoAccumulationSpawnerStrategy : public USpawnerStrategy
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.NoiseIndicatorEmitterInterface
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UNoiseIndicatorEmitterInterface : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.NotExhaustedActivationTimerElapsedIconStrategy
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UNotExhaustedActivationTimerElapsedIconStrategy : public UBasePerkIconStrategy
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ObjectiveScreenIndicatorWorldMarkerComponent
	 * Size -> 0x0010 (FullSize[0x0240] - InheritedSize[0x0230])
	 */
	class UObjectiveScreenIndicatorWorldMarkerComponent : public UScreenIndicatorWorldMarkerComponent
	{
	public:
		class UTexture2D*                                          IndicatorHudScreenIcon;                                  // 0x0230(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0EA3[0x8];                                   // 0x0238(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ObjectPlacementUpdateStrategy
	 * Size -> 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
	 */
	class UObjectPlacementUpdateStrategy : public UObject
	{
	public:
		unsigned char                                              UnknownData_L8DV[0x20];                                  // 0x0030(0x0020) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AlwaysUseCurrentLocationPlacementStrategy
	 * Size -> 0x0000 (FullSize[0x0050] - InheritedSize[0x0050])
	 */
	class UAlwaysUseCurrentLocationPlacementStrategy : public UObjectPlacementUpdateStrategy
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.BufferLastValidLocationObjectPlacementStrategy
	 * Size -> 0x0008 (FullSize[0x0058] - InheritedSize[0x0050])
	 */
	class UBufferLastValidLocationObjectPlacementStrategy : public UObjectPlacementUpdateStrategy
	{
	public:
		float                                                      _maxDistanceToOwner;                                     // 0x0050(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BM8W[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.NavMeshObjectPlacementValidationStrategy
	 * Size -> 0x0008 (FullSize[0x00E8] - InheritedSize[0x00E0])
	 */
	class UNavMeshObjectPlacementValidationStrategy : public UDefaultObjectPlacementValidationStrategy
	{
	public:
		float                                                      _navPathMaxLength;                                       // 0x00E0(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_IEQM[0x4];                                   // 0x00E4(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ObjectPlacementValidationWithRestrictionStrategy
	 * Size -> 0x0010 (FullSize[0x00F0] - InheritedSize[0x00E0])
	 */
	class UObjectPlacementValidationWithRestrictionStrategy : public UDefaultObjectPlacementValidationStrategy
	{
	public:
		TArray<class URestrictedPlacementAreaStrategy*>            _restrictedAreas;                                        // 0x00E0(0x0010) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, NoClear, ContainsInstancedReference, NativeAccessSpecifierPrivate

	public:
		void OnLevelReadyToPlay();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ObjectPlacerComponent
	 * Size -> 0x0058 (FullSize[0x0270] - InheritedSize[0x0218])
	 */
	class UObjectPlacerComponent : public USceneComponent
	{
	public:
		class UStaticMeshComponent*                                _objectMesh;                                             // 0x0218(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FName                                                _socketName;                                             // 0x0220(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _indicatorOffsetY;                                       // 0x022C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _indicatorOffsetX;                                       // 0x0230(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _meshOffsetZ;                                            // 0x0234(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FName                                                _itemObjectId;                                           // 0x0238(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _showIndicator;                                          // 0x0244(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _stayActiveWhileItemInUse;                               // 0x0245(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _hideIndicatorDuringAttack;                              // 0x0246(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_45N8[0x11];                                  // 0x0247(0x0011) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UObjectPlacementUpdateStrategy*                      _objectPlacementUpdateStrategy;                          // 0x0258(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoClear, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UObjectPlacementValidationStrategy*                  _objectPlacementValidationStrategy;                      // 0x0260(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoClear, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_N45J[0x8];                                   // 0x0268(0x0008) MISSED OFFSET (PADDING)

	public:
		void SetShowIndicator(bool NewValue);
		void SetObjectMesh(class UStaticMeshComponent* objectMesh);
		void SetMeshOffsetZ(float Z);
		void SetIndicatorOffsetY(float Y);
		void SetIndicatorOffsetX(float X);
		void SetHideIndicatorDuringAttack(bool enable);
		bool IsPlacementValid();
		struct FRotator GetObjectPlacementRotation();
		struct FVector GetObjectPlacementLocation();
		void ActivateObjectPlacement(bool Active);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.OfferingCardAnim
	 * Size -> 0x0020 (FullSize[0x02E0] - InheritedSize[0x02C0])
	 */
	class UOfferingCardAnim : public UAnimInstance
	{
	public:
		class FScriptMulticastDelegate                             _onCardDissolved;                                        // 0x02C0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPrivate
		EOfferingAnimState                                         _activeState;                                            // 0x02D0(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _isRevealed;                                             // 0x02D1(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_N3DU[0xE];                                   // 0x02D2(0x000E) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.OfferingCard
	 * Size -> 0x0020 (FullSize[0x0250] - InheritedSize[0x0230])
	 */
	class AOfferingCard : public AActor
	{
	public:
		TArray<struct FRarityTexture>                              _rarityTextures;                                         // 0x0230(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPrivate
		TArray<struct FOfferingTypeTexture>                        _offeringTypeTextures;                                   // 0x0240(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPrivate

	public:
		bool IsRevealed();
		void HandleStateChanged(EOfferingAnimState State);
		void HandleCardDissolved();
		EOfferingAnimState GetState();
		class UOfferingCardAnim* GetCardAnimation();
		void ChangeState(EOfferingAnimState State);
		void ChangeAnimationClass(class UClass* animationClass);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.OfferingEffectCollection
	 * Size -> 0x0050 (FullSize[0x0088] - InheritedSize[0x0038])
	 */
	class UOfferingEffectCollection : public UGameInstanceSubsystem
	{
	public:
		unsigned char                                              UnknownData_IYKM[0x50];                                  // 0x0038(0x0050) MISSED OFFSET (PADDING)

	public:
		bool HasOfferingWithTag(int32_t playerID, const class FName& Tag);
		bool HasOfferingOfType(EOfferingEffectType Type, int32_t playerID, const class FName& Tag);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.OfferingHandler
	 * Size -> 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
	 */
	class UOfferingHandler : public UObject
	{
	public:
		class UDBDGameInstance*                                    _gameInstance;                                           // 0x0030(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<class FName>                                        _levelPerkIDs;                                           // 0x0038(0x0010) Net, ZeroConstructor, Transient, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.OfferingSequenceAssets
	 * Size -> 0x0030 (FullSize[0x0260] - InheritedSize[0x0230])
	 */
	class AOfferingSequenceAssets : public AActor
	{
	public:
		float                                                      SpaceBetweenCards;                                       // 0x0230(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F6EV[0x4];                                   // 0x0234(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              DefaultCardClass;                                        // 0x0238(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              DefaultCardAnimation;                                    // 0x0240(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FOfferingRevealDelays>                       OfferingRevealDelays;                                    // 0x0248(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		class AActor*                                              CardsParent;                                             // 0x0258(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void PlaySmoke();
		void PlayFadeOut();
		void PlayFadeIn();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.OfferingSequenceManager
	 * Size -> 0x00C0 (FullSize[0x02F0] - InheritedSize[0x0230])
	 */
	class AOfferingSequenceManager : public AActor
	{
	public:
		class UDBDGameInstance*                                    _gameInstance;                                           // 0x0230(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class APlayerController*                                   _localPlayerController;                                  // 0x0238(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UOfferingHandler*                                    _offeringHandler;                                        // 0x0240(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class AOfferingSequenceAssets*                             _sequenceAssets;                                         // 0x0248(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class ADBDLobbyHud*                                        _hud;                                                    // 0x0250(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class ACameraActor*                                        _offeringCamera;                                         // 0x0258(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TMap<unsigned char, class AOfferingCard*>                  _spawnedCards;                                           // 0x0260(0x0050) Transient, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_1A4Z[0x10];                                  // 0x02B0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              _defaultCardsClass;                                      // 0x02C0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UClass*                                              _eventCardsClass;                                        // 0x02C8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_3XTH[0x20];                                  // 0x02D0(0x0020) MISSED OFFSET (PADDING)

	public:
		void HandleSequenceStateChanged(EOfferingSequenceState State);
		void HandleSequenceStarted();
		void HandleSequenceEnded();
		EOfferingSequenceState GetCurrentState();
		void FadeInScreen();
		bool ContainsEventCard();
		bool ContainsDefaultCard();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.OfferingUtilities
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UOfferingUtilities : public UBlueprintFunctionLibrary
	{
	public:
		bool STATIC_IsPlayerEquippedWithOfferingWithTag(class ADBDPlayer* Player, const class FName& offeringTag);
		bool STATIC_HasOfferingOfType(class UObject* WorldContextObject, EOfferingEffectType offeringEffectType, int32_t playerID);
		bool STATIC_HasItemLossProtection(class ADBDPlayer* Player);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.OfflineLobbyLevel
	 * Size -> 0x01E8 (FullSize[0x04A8] - InheritedSize[0x02C0])
	 */
	class AOfflineLobbyLevel : public ALobbyLevel
	{
	public:
		struct FVector                                             _partyLobbyInviteButtonOffset;                           // 0x02C0(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AX9X[0x4];                                   // 0x02CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<TWeakObjectPtr<class APlayerStart>>                 _roleSelectionCamperSpawns;                              // 0x02D0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPrivate
		TArray<TWeakObjectPtr<class APlayerStart>>                 _roleSelectionSlasherSpawns;                             // 0x02E0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPrivate
		TWeakObjectPtr<class ADisplayStand>                        _offlineLobbyLocalSlasherSpawn;                          // 0x02F0(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FVector                                             _partyLobbyEmptySlotFxOffset;                            // 0x02F8(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TWeakObjectPtr<class ADisplayStand>                        _offlineLobbyLocalCamperSpawn;                           // 0x0304(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_YVOG[0x4];                                   // 0x030C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FVector>                                     _partyLobbySlasherPOVTrackerOffsets;                     // 0x0310(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate
		unsigned char                                              _partyLobbyEmptySlotSilhouette[0x30];                    // 0x0320(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		TArray<TWeakObjectPtr<class ADisplayStand>>                _partyLobbySlasherDisplayStands;                         // 0x0350(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPrivate
		TArray<TWeakObjectPtr<class ADisplayStand>>                _partyLobbyCamperDisplayStands;                          // 0x0360(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_HAH6[0x10];                                  // 0x0370(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              _meatHookForCustomization[0x30];                         // 0x0380(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		TWeakObjectPtr<class ATargetPoint>                         _meatHookSpawn;                                          // 0x03B0(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              _charmForCustomizationZoom[0x30];                        // 0x03B8(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		TWeakObjectPtr<class ATargetPoint>                         _camperCharmSpawn;                                       // 0x03E8(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TWeakObjectPtr<class ATargetPoint>                         _slasherCharmSpawn;                                      // 0x03F0(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TMap<TWeakObjectPtr<class ADisplayStand>, TWeakObjectPtr<class ADBDMenuSilhouette>> _partyLobbyEmptySlotPawns;                               // 0x03F8(0x0050) Transient, UObjectWrapper, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_HXFO[0x48];                                  // 0x0448(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class AActor*>                                      _destroyingPawns;                                        // 0x0490(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_WGAZ[0x8];                                   // 0x04A0(0x0008) MISSED OFFSET (PADDING)

	public:
		void OnStateChanged(EOfflineLobbyState LobbyState);
		void CheckDestroyingPawns(class AActor* DestroyedActor);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.OnboardingUtilities
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UOnboardingUtilities : public UBlueprintFunctionLibrary
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.OniBasicAttackComponent
	 * Size -> 0x0010 (FullSize[0x00C8] - InheritedSize[0x00B8])
	 */
	class UOniBasicAttackComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_R2J7[0x10];                                  // 0x00B8(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.OniDemonModeAttackStateComponent
	 * Size -> 0x0018 (FullSize[0x00D8] - InheritedSize[0x00C0])
	 */
	class UOniDemonModeAttackStateComponent : public UChargedAttackStateComponent
	{
	public:
		class FScriptMulticastDelegate                             OnChargedAttackReadyChanged;                             // 0x00C0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_810H[0x8];                                   // 0x00D0(0x0008) MISSED OFFSET (PADDING)

	public:
		void Server_ClearChargingState();
		void Multicast_ClearChargingState();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.OnlineLobbyLevel
	 * Size -> 0x0038 (FullSize[0x02F8] - InheritedSize[0x02C0])
	 */
	class AOnlineLobbyLevel : public ALobbyLevel
	{
	public:
		class UProceduralGenerationData*                           ProceduralGenerationData;                                // 0x02C0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FVector>                                     _onlineLobbySlasherPOVTrackerOffsets;                    // 0x02C8(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate
		TArray<TWeakObjectPtr<class ADisplayStand>>                _onlineLobbyCamperDisplayStands;                         // 0x02D8(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPrivate
		TArray<TWeakObjectPtr<class ADisplayStand>>                _onlineLobbySlasherDisplayStands;                        // 0x02E8(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.OnlinePrivilegeManager
	 * Size -> 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
	 */
	class UOnlinePrivilegeManager : public UGameInstanceSubsystem
	{
	public:
		unsigned char                                              UnknownData_V7PI[0x8];                                   // 0x0038(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.OnlineSystemHandler
	 * Size -> 0x04D8 (FullSize[0x0508] - InheritedSize[0x0030])
	 */
	class UOnlineSystemHandler : public UObject
	{
	public:
		unsigned char                                              UnknownData_5IO3[0x1B8];                                 // 0x0030(0x01B8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ULocalPlayer*                                        _cachedLocalPlayer;                                      // 0x01E8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UDBDGameInstance*                                    _gameInstance;                                           // 0x01F0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UGameSessionDS*                                      _gameSessionDS;                                          // 0x01F8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_DRQS[0x270];                                 // 0x0200(0x0270) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UDBDServerInstance*                                  _serverInstance;                                         // 0x0470(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_3CJ4[0x30];                                  // 0x0478(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCrossPlatformManager*                               _crossPlatformManager;                                   // 0x04A8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_UOYX[0x58];                                  // 0x04B0(0x0058) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.OnScreenDebugComponent
	 * Size -> 0x0010 (FullSize[0x00C8] - InheritedSize[0x00B8])
	 */
	class UOnScreenDebugComponent : public UActorComponent
	{
	public:
		TArray<struct FOnScreenDebugInfo>                          _messages;                                               // 0x00B8(0x0010) Net, ZeroConstructor, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.OpenHatch
	 * Size -> 0x0000 (FullSize[0x0620] - InheritedSize[0x0620])
	 */
	class UOpenHatch : public UBaseEscapeThroughHatch
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.OpenSupplyCrateInteraction
	 * Size -> 0x0020 (FullSize[0x0760] - InheritedSize[0x0740])
	 */
	class UOpenSupplyCrateInteraction : public UChargeableInteractionDefinition
	{
	public:
		class ASupplyCrateInteractable*                            _owningSupplyCrate;                                      // 0x0740(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _interactionWasComplete;                                 // 0x0748(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_K4EO[0x7];                                   // 0x0749(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       _successExitTimeAnimSequenceReference;                   // 0x0750(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_E8XV[0x8];                                   // 0x0758(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.OtherCharactersVerticalCollisionsHandler
	 * Size -> 0x0028 (FullSize[0x00E0] - InheritedSize[0x00B8])
	 */
	class UOtherCharactersVerticalCollisionsHandler : public UActorComponent
	{
	public:
		TArray<class AActor*>                                      _ignoreBelowActors;                                      // 0x00B8(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		TArray<class AActor*>                                      _overlappingActors;                                      // 0x00C8(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		class UCapsuleComponent*                                   _pawnDetector;                                           // 0x00D8(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void SetPawnDetector(class UCapsuleComponent* pawnDetector);
		void OnPawnDetectorOverlapExit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex);
		void OnPawnDetectorOverlapEnter(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
		void InitializeOverlapDetection();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.OutfitHelper
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UOutfitHelper : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.OutfitRecommendationsFilter
	 * Size -> 0x0028 (FullSize[0x0060] - InheritedSize[0x0038])
	 */
	class UOutfitRecommendationsFilter : public URecommendationsFilter
	{
	public:
		unsigned char                                              UnknownData_1P9B[0x28];                                  // 0x0038(0x0028) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.OutlineReveal
	 * Size -> 0x0098 (FullSize[0x00C8] - InheritedSize[0x0030])
	 */
	class UOutlineReveal : public UObject
	{
	public:
		unsigned char                                              UnknownData_J7NL[0x60];                                  // 0x0030(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class ADBDPlayer*>                                  _affectedCharacters;                                     // 0x0090(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_YB5J[0x28];                                  // 0x00A0(0x0028) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.OutOfSightMeshRotator
	 * Size -> 0x0028 (FullSize[0x00E0] - InheritedSize[0x00B8])
	 */
	class UOutOfSightMeshRotator : public UActorComponent
	{
	public:
		float                                                      _maxDistance;                                            // 0x00B8(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      _dotProductThreshold;                                    // 0x00BC(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class ADBDPlayer*                                          _locallyObservedPlayer;                                  // 0x00C0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<class UMeshComponent*>                              _meshesToRotate;                                         // 0x00C8(0x0010) ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
		float                                                      _rotationOffset;                                         // 0x00D8(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_NLOL[0x4];                                   // 0x00DC(0x0004) MISSED OFFSET (PADDING)

	public:
		void SetMeshesToRotate(TArray<class UMeshComponent*> meshesToRotate);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.OverlayMenuScreen
	 * Size -> 0x01E0 (FullSize[0x0300] - InheritedSize[0x0120])
	 */
	class UOverlayMenuScreen : public UScreenBase
	{
	public:
		unsigned char                                              UnknownData_B4Y9[0x1E0];                                 // 0x0120(0x01E0) MISSED OFFSET (PADDING)

	public:
		void SetGameType(EGameType GameType, bool isInCustomMatchManagerMode);
		void OnSurvivorCameraSensitivityChanged(int32_t value);
		void OnSettingsOptionIntValueChanged(int32_t ID, int32_t value);
		void OnSettingsOptionCheckboxSelected(int32_t ID, bool IsSelected);
		void OnSettingsOptionButtonClicked(int32_t ID);
		void OnSelectTab(int32_t tabIndex);
		void OnResetDefaultSettings();
		void OnResetDefaultKeybindings();
		void OnRequestKeyBindingInput(int32_t ID, const class FString& Key);
		void OnQuitButtonClick();
		void OnPrivacyPolicyButtonClick();
		void OnPlayerInfoClick(const class FString& playerID);
		void OnLanguageChange(int32_t value);
		void OnKillerCameraSensitivityChanged(int32_t value);
		void OnForumsButtonClick();
		void OnEULAButtonClick();
		void OnCustomerSupportButtonClick();
		void OnBackButtonClick();
		void OnAtlantaSettingButtonClick(int32_t buttonId);
		void OnAimAssistClick(bool value);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.Pallet
	 * Size -> 0x0110 (FullSize[0x0438] - InheritedSize[0x0328])
	 */
	class APallet : public AInteractable
	{
	public:
		unsigned char                                              UnknownData_NC7Y[0x8];                                   // 0x0328(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PalletDownEvadeDoorFrontPointOffset;                     // 0x0330(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_K9H6[0x1C];                                  // 0x0334(0x001C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EPalletState                                               _state;                                                  // 0x0350(0x0001) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _isPendingDestruction;                                   // 0x0351(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _isIllusionaryPalletDown;                                // 0x0352(0x0001) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _isDestroyedByEntity;                                    // 0x0353(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_BUCS[0x4];                                   // 0x0354(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UInteractionDefinition*                              _destroyLeft;                                            // 0x0358(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UInteractionDefinition*                              _destroyRight;                                           // 0x0360(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UBoxComponent*                                       _pushBox;                                                // 0x0368(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _maxDotproductThresholdForPulldownAccross;               // 0x0370(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _fallDuration;                                           // 0x0374(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UBoxComponent*                                       _stunBoxLeft;                                            // 0x0378(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UBoxComponent*                                       _stunBoxRight;                                           // 0x0380(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              _stunnedActors[0x50];                                    // 0x0388(0x0050) UNKNOWN PROPERTY: SetProperty
		class ADBDPlayer*                                          _playerExecutingPulldown;                                // 0x03D8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FPalletPushSettings                                 _pushSettings;                                           // 0x03E0(0x0002) Transient, NoDestructor, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_Z358[0x3E];                                  // 0x03E2(0x003E) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UDBDNavEvadeLoopComponent*                           _navEvadeLoopComponent;                                  // 0x0420(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UPalletPulldownBlockerComponent*                     _palletPulldownBlockerComponent;                         // 0x0428(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _isDreamPallet;                                          // 0x0430(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_GGZ6[0x7];                                   // 0x0431(0x0007) MISSED OFFSET (PADDING)

	public:
		void SetPendingDestruction(bool IsPendingDestruction);
		void SetPalletState(EPalletState State);
		void ResetPallet();
		void PulldownPallet();
		void PullDown(class ADBDPlayer* Player, const struct FPalletPushSettings& pushSettings, EPalletStunZoneSideStrategy stunZoneSideStrategy);
		void OnStunOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
		void OnPalletStunHit();
		void OnPalletPulledUp_BP();
		void OnFallen();
		void Multicast_StunActor(class AActor* Actor, class ACamperPlayer* Survivor, bool stunBreakPallet);
		void Multicast_ResetPallet();
		void Multicast_PulldownPallet();
		void Multicast_EntityExplodePallet(class ADBDPlayer* Player);
		bool IsPulldownBlockedByEntity();
		bool IsPendingDestruction();
		bool IsDestroyedByEntity();
		class ADBDPlayer* GetPlayerDoingPulldown();
		class USkeletalMeshComponent* GetPalletSkeletalMeshComponent();
		bool GetIsPulledDown();
		bool GetIsDreamPallet();
		float GetFallDuration();
		void GetDestructibleAreaPrimitiveComponents(TArray<class UPrimitiveComponent*>* prims);
		void ExplodeStunPallet(class ADBDPlayer* Player);
		void ExplodePallet(class ADBDPlayer* Player);
		void EntityExplodePallet(class ADBDPlayer* Player);
		void Cosmetic_PalletPullDownFXImmediateHide();
		void Cosmetic_OnPalletPulldownBlockedByEntityShow();
		void Cosmetic_OnPalletPulldownBlockedByEntityHide();
		bool CanPulldown(class ADBDPlayer* Player, const struct FVector& interactionAxis, bool isStationary);
		void Authority_OnOverlapPushBox(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PalletPulldownBlockerComponent
	 * Size -> 0x0078 (FullSize[0x0130] - InheritedSize[0x00B8])
	 */
	class UPalletPulldownBlockerComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_DNKE[0x60];                                  // 0x00B8(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       _isPalletPulldownBlockedByEntity;                        // 0x0118(0x0001) Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_2201[0x7];                                   // 0x0119(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UObject*                                             _palletToBlock;                                          // 0x0120(0x0008) Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _blockedDisappearFxTime;                                 // 0x0128(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_DIQ5[0x4];                                   // 0x012C(0x0004) MISSED OFFSET (PADDING)

	public:
		void OnRep_PalletToBlock(class UObject* oldPalletToBlock);
		void Multicast_PalletPulldownBlockedShowCosmetic(class UObject* palletToBlock);
		void Multicast_PalletPulldownBlockedHideCosmetic(class UObject* palletToUnblock);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PalletTracker
	 * Size -> 0x0020 (FullSize[0x0250] - InheritedSize[0x0230])
	 */
	class APalletTracker : public AActor
	{
	public:
		class APallet*                                             _procedurallySpawnedPallet;                              // 0x0230(0x0008) BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class APallet*                                             _dreamPallet;                                            // 0x0238(0x0008) BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USceneComponent*                                     _indicatorLocation;                                      // 0x0240(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_YEQX[0x8];                                   // 0x0248(0x0008) MISSED OFFSET (PADDING)

	public:
		void RevealToLocalPlayerBP(bool shown);
		void InitializeTunableValues(class ASlasherPlayer* Slasher);
		void EnableSelectedEffectToLocalPlayer(bool activated);
		bool CanSpawnDreamPalletAtLocation();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PalletUtilities
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UPalletUtilities : public UObject
	{
	public:
		void STATIC_GetPalletTrackerBP(class UObject* WorldContextObject);
		void STATIC_GetIllusionaryPalletStaticMesh(class UObject* worldContextObjec);
		void STATIC_GetDreamPalletBP(class UObject* WorldContextObject);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PanelScreen
	 * Size -> 0x02E8 (FullSize[0x0408] - InheritedSize[0x0120])
	 */
	class UPanelScreen : public UScreenBase
	{
	public:
		unsigned char                                              UnknownData_8VNQ[0x2E8];                                 // 0x0120(0x02E8) MISSED OFFSET (PADDING)

	public:
		void OnWebNodeSelected(int32_t characterId, int32_t ID, int32_t nodeDepth);
		void OnWebNodeHovered(int32_t ID);
		void OnWebBuilt(int32_t characterId, bool IsEmpty);
		void OnStoreButtonClick();
		void OnSideTabButtonClick(int32_t tabIndex);
		void OnSequenceStepCompleted(int32_t characterId, int32_t ID);
		void OnSelectedEquipableSlotZoomChange(bool zoomIn);
		void OnRotateCharacter(float mouseDistanceChange);
		void OnRoleButtonClick();
		void OnReservedBloodPoints(int32_t characterId, int32_t BloodPoints, bool fullCost);
		void OnRegenerateButtonClick(int32_t characterId);
		void OnPrestigeUp(int32_t characterId);
		void OnPanelsHidden();
		void OnNodeConsumptionAnimDone();
		void OnNodeCollectionAnimDone();
		void OnLoadoutSlotButtonClick(int32_t slotIndex);
		void OnLoadoutPresetClick(int32_t Index);
		void OnItemUnselected(int32_t itemIndex);
		void OnItemSelected(int32_t itemIndex);
		void OnEventButtonClick();
		void OnEquipableSlotClicked(int32_t clickedSlotCategory, int32_t clickedSlotIndex);
		void OnCustomizationPresetClick(int32_t Index);
		void OnCrowdChoiceCharacterClick();
		void OnConfirmCollectSelectedNode(int32_t characterId);
		void OnCharInfoClick();
		void OnCharacterSlotButtonClick(int32_t characterIndex);
		void OnCharacterInfoClick();
		void OnBloodwebCenterButtonSelected();
		void OnBloodwebCenterButtonHovered();
		void OnAvailableItemsSortingChange(int32_t newSorting);
		void OnAvailableItemClicked(int32_t clickedItemIndex);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ParticleSystemDistanceFaderComponent
	 * Size -> 0x0020 (FullSize[0x00D8] - InheritedSize[0x00B8])
	 */
	class UParticleSystemDistanceFaderComponent : public UActorComponent
	{
	public:
		class UParticleSystemComponent*                            ParticleSystemComponent;                                 // 0x00B8(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FName                                                OpacityParameterName;                                    // 0x00C0(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      StartFadeDistance;                                       // 0x00CC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      EndFadeDistance;                                         // 0x00D0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_DHF8[0x4];                                   // 0x00D4(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PartyEventsManager
	 * Size -> 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
	 */
	class UPartyEventsManager : public UGameInstanceSubsystem
	{
	public:
		unsigned char                                              UnknownData_5BCO[0x10];                                  // 0x0038(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGLoadoutItemButton
	 * Size -> 0x0340 (FullSize[0x0678] - InheritedSize[0x0338])
	 */
	class UUMGLoadoutItemButton : public UMobileBaseUserWidget
	{
	public:
		class FScriptMulticastDelegate                             OnLoadoutItemButtonClicked;                              // 0x0338(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnDisabledItemButtonClicked;                             // 0x0348(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnLoadoutItemButtonLongPress;                            // 0x0358(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		bool                                                       HideStackCount;                                          // 0x0368(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ADG0[0x7];                                   // 0x0369(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTextBlock*                                          TextStackCount;                                          // 0x0370(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        EmptyCanvas;                                             // 0x0378(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UButton*                                             EmptyButton;                                             // 0x0380(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UButton*                                             LockedButton;                                            // 0x0388(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        ActionCanvas;                                            // 0x0390(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              ImageRarityBG;                                           // 0x0398(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              ImageGradient;                                           // 0x03A0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              ImagePaint;                                              // 0x03A8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              ImageEventBorder;                                        // 0x03B0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              ImagePaintTop;                                           // 0x03B8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              ImagePaintBottom;                                        // 0x03C0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		ESlateVisibility                                           EmptyCanvasVisibility;                                   // 0x03C8(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		ESlateVisibility                                           ActionCanvasVisibility;                                  // 0x03C9(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		ESlateVisibility                                           PrivateCanvasVisibility;                                 // 0x03CA(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		ESlateVisibility                                           LockIconVisibility;                                      // 0x03CB(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		ESlateVisibility                                           EmptyIconVisibility;                                     // 0x03CC(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		ESlateVisibility                                           SpecialEventVisiblity;                                   // 0x03CD(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		ESlateVisibility                                           LoadoutSelectedVisibility;                               // 0x03CE(0x0001) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		ESlateVisibility                                           LoadoutLockVisibility;                                   // 0x03CF(0x0001) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              ImageIcon;                                               // 0x03D0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              ImageShadow;                                             // 0x03D8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UButton*                                             ActionButton;                                            // 0x03E0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FSlateBrush                                         EmptyBGAsset;                                            // 0x03E8(0x0090) Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
		struct FSlateBrush                                         DisableBGAsset;                                          // 0x0478(0x0090) Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
		struct FInventorySlotData                                  LoadoutItemData;                                         // 0x0508(0x0128) BlueprintVisible, Transient, Protected, NativeAccessSpecifierProtected
		bool                                                       _triggerClickEventForLoadoutWidget;                      // 0x0630(0x0001) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_5752[0x7];                                   // 0x0631(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UVerticalBox*                                        CanvasUnlock;                                            // 0x0638(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          TextUnlockLevel;                                         // 0x0640(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_QP2H[0x30];                                  // 0x0648(0x0030) MISSED OFFSET (PADDING)

	public:
		void UpdateWidgetByState(EInventoryButtonState State);
		void UpdateWidgetByDataBP(const struct FInventorySlotData& SlotData);
		void UpdateWidgetByData(const struct FInventorySlotData& SlotData);
		void UpdateUnlockable(const class FString& nameToDisplay, int32_t UnlockableLevel);
		void UpdateStackCount(int32_t StackCount);
		void UpdateImageColor(EItemRarity Rarity, EStatusEffectType EffectType);
		void ShowClickableOutline(bool clickable);
		void SetIsSelected(bool IsSelected);
		void SetIconImageByPath(const class FString& IconPath);
		void OnLockedButtonClicked();
		void InitializationForLoadoutWidget();
		void InitializationForCharacterInfoWidget();
		class FName GetLoadoutItemID();
		void BroadcastLongPressEvent(const class FName& ItemId);
		void BroadcastClickedEvent(const class FName& ItemId);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PerkActionButton
	 * Size -> 0x0028 (FullSize[0x06A0] - InheritedSize[0x0678])
	 */
	class UPerkActionButton : public UUMGLoadoutItemButton
	{
	public:
		class UTextBlock*                                          TextUnlockLevelTitle;                                    // 0x0678(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Activatable;                                             // 0x0680(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESlateVisibility                                           SelectedImageVisibility;                                 // 0x0681(0x0001) Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESlateVisibility                                           ClickableButtonVisibility;                               // 0x0682(0x0001) Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESlateVisibility                                           ClickableImageVisibility;                                // 0x0683(0x0001) Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESlateVisibility                                           ProgressbarVisibility;                                   // 0x0684(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UYS5[0x3];                                   // 0x0685(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      IdleTime;                                                // 0x0688(0x0004) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B0P3[0x14];                                  // 0x068C(0x0014) MISSED OFFSET (PADDING)

	public:
		void UpdateWidgetPercentage(float Percentage);
		void SetIsActivatable(bool isClickable);
		void SetCanEverBeActivated();
		void CallSetPerkLevel(int32_t Level);
		void CallHidePerkLevel();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PerkCollectionComponent
	 * Size -> 0x0028 (FullSize[0x00E0] - InheritedSize[0x00B8])
	 */
	class UPerkCollectionComponent : public UActorComponent
	{
	public:
		TArray<class UPerk*>                                       _array;                                                  // 0x00B8(0x0010) ExportObject, Net, ZeroConstructor, Transient, RepNotify, ContainsInstancedReference, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_49PW[0x18];                                  // 0x00C8(0x0018) MISSED OFFSET (PADDING)

	public:
		void OnRep_Array(TArray<class UPerk*> oldArray);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PerkDataAsset
	 * Size -> 0x0000 (FullSize[0x0088] - InheritedSize[0x0088])
	 */
	class UPerkDataAsset : public UGameplayModifierContainerDataAsset
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PerkHudWidget
	 * Size -> 0x0138 (FullSize[0x0470] - InheritedSize[0x0338])
	 */
	class UPerkHudWidget : public UMobileBaseUserWidget
	{
	public:
		class UCanvasPanel*                                        PerksClickable;                                          // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCanvasPanel*                                        PerksExternal;                                           // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              AtlantaPerkActionButtonClass[0x30];                      // 0x0348(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		TMap<class FName, class UPerkActionButton*>                _clickablePerksMap;                                      // 0x0378(0x0050) ExportObject, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
		TMap<class FName, class UPerkActionButton*>                _externalPerksMap;                                       // 0x03C8(0x0050) ExportObject, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_AGRA[0x58];                                  // 0x0418(0x0058) MISSED OFFSET (PADDING)

	public:
		void RemoveExistingPerk(const class FName& perkId, bool isExternal);
		void OnPerkClickedHandler(const class FName& perkId);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PerkManager
	 * Size -> 0x02B8 (FullSize[0x0370] - InheritedSize[0x00B8])
	 */
	class UPerkManager : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_307U[0x28];                                  // 0x00B8(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UPerkCollectionComponent*                            _perks;                                                  // 0x00E0(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UStatusEffectCollectionComponent*                    _statusEffects;                                          // 0x00E8(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_XRW7[0x280];                                 // 0x00F0(0x0280) MISSED OFFSET (PADDING)

	public:
		bool HasStatusEffectOfClass(class UClass* Type);
		bool HasStatusEffect(const class FName& statusEffectID);
		bool HasPerkSubFlag(const struct FGameplayTag& subFlag);
		bool HasPerkModifierOfType(const struct FGameplayTag& Type);
		bool HasPerkFlags(TArray<struct FGameplayTag> Flags);
		bool HasPerkFlagFromSource(const struct FGameplayTag& flag, EGameplayModifierSource modifierSource);
		bool HasPerkFlag(const struct FGameplayTag& flag);
		bool HasAnyEffectWithID(const class FName& ID);
		bool HasAnyAddonWithTag(const class FName& Tag);
		bool HasAllCharacterPerksEquipped();
		class UStatusEffect* GetStatusEffect(const class FName& ID);
		class UGameplayModifierContainer* GetSourceWithModifier(const struct FGameplayTag& Type);
		class UGameplayModifierContainer* GetSourceWithFlag(const struct FGameplayTag& flag);
		TArray<class UPerk*> GetPerks();
		float GetPerkModifierMinValueAndSource(const struct FGameplayTag& Type, float startValue, class UGameplayModifierContainer** outSource);
		float GetPerkModifierMinValue(const struct FGameplayTag& Type, float startValue);
		float GetPerkModifierMaxValueAndSource(const struct FGameplayTag& Type, class UGameplayModifierContainer** outSource);
		float GetPerkModifierMaxValue(const struct FGameplayTag& Type);
		float GetPerkModifierAdditiveValue(const struct FGameplayTag& Type, float BaseValue);
		float GetPerkModifier(const struct FGameplayTag& Type);
		class UPerk* GetPerk(const class FName& ID);
		float GetMultiplicativeModifierValueWithCompoundNegative(const struct FGameplayTag& Type);
		float GetMultiplicativeModifierValueOfContainerWithCompoundNegative(const struct FGameplayTagContainer& Container);
		float GetMultiplicativeModifierValue(const struct FGameplayTag& Type);
		float GetCompoundedModifierValue(const struct FGameplayTag& Type);
		TArray<class UStatusEffect*> GetAllStatusEffectsByID(const class FName& ID);
		TArray<class UStatusEffect*> GetAllStatusEffectsByClass(class UClass* Type);
		TArray<class UStatusEffect*> GetAllStatusEffects();
		TArray<class UGameplayModifierContainer*> GetAllSourcesWithModifier(const struct FGameplayTag& Type);
		TArray<class UGameplayModifierContainer*> GetAllSourcesWithFlag(const struct FGameplayTag& flag);
		void Authority_SpawnPerk(const class FName& perkId, int32_t PerkLevel);
		void Authority_RemoveStatusEffectByID(const class FName& statusEffectID, bool bRemoveAllWithID);
		void Authority_RemoveStatusEffect(class UStatusEffect* StatusEffect);
		void Authority_RemovePerks();
		class UStatusEffect* Authority_ImposeStatusEffectOfClass(class UClass* EffectClass, class ADBDPlayer* originatingPlayer, float customParam, class UGameplayModifierContainer* originatingEffect, bool shouldDisplay, float lifetime);
		class UStatusEffect* Authority_ImposeStatusEffect_DEPRECATED(const class FName& statusEffectID, class ADBDPlayer* originatingPlayer, float customParam, class UGameplayModifierContainer* originatingEffect, bool shouldDisplay, float lifetime);
		class UStatusEffect* Authority_ImposeNewStatusEffectOrChangeLifeTime_DEPRECATED(const class FName& statusEffectID, class ADBDPlayer* originatingPlayer, float lifetime, float customParam, class UGameplayModifierContainer* originatingEffect, bool shouldDisplay);
		class UStatusEffect* Authority_ImposeNewStatusEffectOfClassOrChangeLifeTime(class UClass* EffectClass, class ADBDPlayer* originatingPlayer, float lifetime, float customParam, class UGameplayModifierContainer* originatingEffect, bool shouldDisplay);
		class UStatusEffect* Authority_ImposeDynamicStatusEffect_DEPRECATED(const class FName& statusEffectID, class ADBDPlayer* originatingPlayer, float customParam, class UGameplayModifierContainer* originatingEffect);
		void Authority_EndStatusEffectByID(const class FName& statusEffectID, bool bRemoveAllWithID);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PerkManagerOwnerInterface
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UPerkManagerOwnerInterface : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PerkOwnerInterface
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UPerkOwnerInterface : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PerkSelectionSlotWidget
	 * Size -> 0x0080 (FullSize[0x03B8] - InheritedSize[0x0338])
	 */
	class UPerkSelectionSlotWidget : public UMobileBaseUserWidget
	{
	public:
		class UTextBlock*                                          PerkName;                                                // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          TextChoose;                                              // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UPerkActionButton*                                   PerkActionButton;                                        // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              SelectedIcon;                                            // 0x0350(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGHtmlRichText*                                    descriptionText;                                         // 0x0358(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              PictureBackground;                                       // 0x0360(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              PicturePerkBackground;                                   // 0x0368(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              PictureHighlightFrame;                                   // 0x0370(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              PictureTopRightBackground;                               // 0x0378(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              PictureTopRightFrame;                                    // 0x0380(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      HighOpacity;                                             // 0x0388(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      LowOpacity;                                              // 0x038C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      PerkBackgroundLowOpacity;                                // 0x0390(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      DescriptionBackgroundLowOpacity;                         // 0x0394(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_TLNO[0x20];                                  // 0x0398(0x0020) MISSED OFFSET (PADDING)

	public:
		void OnButtonClicked();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PerkSoundHudIcon
	 * Size -> 0x0010 (FullSize[0x0348] - InheritedSize[0x0338])
	 */
	class UPerkSoundHudIcon : public UMobileBaseUserWidget
	{
	public:
		class FName                                                perkId;                                                  // 0x0338(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W9UH[0x4];                                   // 0x0344(0x0004) MISSED OFFSET (PADDING)

	public:
		void ClearPerk();
		void ActivatePerk(float Percentage);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PerkSoundHudIconSporadic
	 * Size -> 0x0038 (FullSize[0x0380] - InheritedSize[0x0348])
	 */
	class UPerkSoundHudIconSporadic : public UPerkSoundHudIcon
	{
	public:
		class UCanvasPanel*                                        SporadicIcon;                                            // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      FadeInRate;                                              // 0x0350(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      FadeOutRate;                                             // 0x0354(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      AnimationStartOpacity;                                   // 0x0358(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                    FadePolynomialOrder;                                     // 0x035C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       DisplayIcon;                                             // 0x0360(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_EVHH[0x1F];                                  // 0x0361(0x001F) MISSED OFFSET (PADDING)

	public:
		void NativeTick(const struct FGeometry& MyGeometry, float DeltaTime);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PerkSoundHudWidget
	 * Size -> 0x0008 (FullSize[0x0340] - InheritedSize[0x0338])
	 */
	class UPerkSoundHudWidget : public UMobileBaseUserWidget
	{
	public:
		class UHorizontalBox*                                      PerkIcons;                                               // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PerkUtilitiesInterface
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UPerkUtilitiesInterface : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PerspectiveEffectActivator
	 * Size -> 0x0070 (FullSize[0x0128] - InheritedSize[0x00B8])
	 */
	class UPerspectiveEffectActivator : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_U2QB[0x10];                                  // 0x00B8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class FName, struct FPerspectiveEffectData>           _perspectiveEffects;                                     // 0x00C8(0x0050) Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_XI7E[0x10];                                  // 0x0118(0x0010) MISSED OFFSET (PADDING)

	public:
		void UnregisterEffect(const class FName& effectName);
		void SetWantsActive(const class FName& effectName, bool WantsActive);
		void RegisterEffect(const class FName& effectName, const struct FPerspectiveEffectData& effectData);
		bool IsEffectActive(const class FName& effectName);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PhaseWalkingInterface
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UPhaseWalkingInterface : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PlagueUtilities
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UPlagueUtilities : public UBlueprintFunctionLibrary
	{
	public:
		bool STATIC_IsPlagueDebugModeActive();
		bool STATIC_IsInfected(class ADBDPlayer* Player);
		bool STATIC_HasMaxLevelSickness(class ADBDPlayer* Player);
		class USurvivorPlagueEffect* STATIC_GetPlagueEffect(class ADBDPlayer* Player);
		void STATIC_Authority_AddSicknessToPlayer(class ADBDPlayer* Player, float sicknessToAdd);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PlayerDataStorageFacade
	 * Size -> 0x0068 (FullSize[0x0098] - InheritedSize[0x0030])
	 */
	class UPlayerDataStorageFacade : public UObject
	{
	public:
		unsigned char                                              UnknownData_4DK7[0x68];                                  // 0x0030(0x0068) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PlayerDebugComponent
	 * Size -> 0x0008 (FullSize[0x00C0] - InheritedSize[0x00B8])
	 */
	class UPlayerDebugComponent : public UActorComponent
	{
	public:
		bool                                                       _disableStartUpdateMontageDuringEnter;                   // 0x00B8(0x0001) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _allowPalletPullUpInteraction;                           // 0x00B9(0x0001) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_X5EC[0x6];                                   // 0x00BA(0x0006) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PlayerGameRelevancyComponent
	 * Size -> 0x0058 (FullSize[0x0110] - InheritedSize[0x00B8])
	 */
	class UPlayerGameRelevancyComponent : public UActorComponent
	{
	public:
		struct FTagStateBool                                       _isRelevantToGameplay;                                   // 0x00B8(0x0030) Net, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_2QSK[0x28];                                  // 0x00E8(0x0028) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PlayerInGameAssetPreloadState
	 * Size -> 0x0018 (FullSize[0x00D0] - InheritedSize[0x00B8])
	 */
	class UPlayerInGameAssetPreloadState : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_41SL[0x18];                                  // 0x00B8(0x0018) MISSED OFFSET (PADDING)

	public:
		void Server_SetPreloadCompleted(const class FString& preloadInfo);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PlayerInteractionHandler
	 * Size -> 0x0598 (FullSize[0x0650] - InheritedSize[0x00B8])
	 */
	class UPlayerInteractionHandler : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_NW45[0x68];                                  // 0x00B8(0x0068) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PriorityConeAngle;                                       // 0x0120(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BotPriorityConeAngle;                                    // 0x0124(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BIDC[0x10];                                  // 0x0128(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             Authority_SecondaryActionDoneDelegate;                   // 0x0138(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             NewInteractionRequestedDelegate;                         // 0x0148(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             ServerValidatedInteractionStartedDelegate;               // 0x0158(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             ServerValidatedInteractionEndedDelegate;                 // 0x0168(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		EInteractionLayer                                          InteractionLayer;                                        // 0x0178(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7JHW[0xF];                                   // 0x0179(0x000F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnDeactivateSkillCheckDelegate;                          // 0x0188(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MTVP[0x68];                                  // 0x0198(0x0068) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       _hasInteractionRequest;                                  // 0x0200(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _hasInteractionRequestInBuffer;                          // 0x0201(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_NZ1E[0x1E];                                  // 0x0202(0x001E) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UInteractionDefinition*                              _interactionToSwapTo;                                    // 0x0220(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_9IKK[0x20];                                  // 0x0228(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UInteractionDefinition*                              _currentInteraction;                                     // 0x0248(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_EFUQ[0xA0];                                  // 0x0250(0x00A0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class ADBDPlayer*>                                  _currentPlayerDependencies;                              // 0x02F0(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		EInputInteractionType                                      _currentInteractionType;                                 // 0x0300(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_M23H[0x7];                                   // 0x0301(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USkillCheck*                                         _skillCheck;                                             // 0x0308(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_LTFP[0x8];                                   // 0x0310(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<float>                                              _progressBasedSkillChecks;                               // 0x0318(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_K3P2[0x60];                                  // 0x0328(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ADBDPlayer*                                          _requestedInterruptionOtherParty;                        // 0x0388(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UInterruptionDefinition*                             _requestedInterruptionDefinition;                        // 0x0390(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _requestedInterruptionIsInterruptor;                     // 0x0398(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_2KSI[0x7];                                   // 0x0399(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ADBDPlayer*                                          _currentInterruptionOtherParty;                          // 0x03A0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UInterruptionDefinition*                             _currentInterruptionDefinition;                          // 0x03A8(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _currentInterruptionIsInterruptor;                       // 0x03B0(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _interactionInProgress;                                  // 0x03B1(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_H2JF[0x36];                                  // 0x03B2(0x0036) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UInteractionDefinition*>                      _interactionsInZone;                                     // 0x03E8(0x0010) ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_89SV[0x28];                                  // 0x03F8(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAvailableInteractionCalculator                     _availableInteractionCalculator;                         // 0x0420(0x01C0) Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_UQ06[0x18];                                  // 0x05E0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class UObject*, struct FGameplayTagContainer>         _disableInteractionSourcesToExceptions;                  // 0x05F8(0x0050) Transient, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_IIFA[0x8];                                   // 0x0648(0x0008) MISSED OFFSET (PADDING)

	public:
		void UnPauseSkillCheckTimer();
		void SetScanForInteractionsEnabled(bool Enabled);
		void Server_StoreInterruption_Interruptor(class ADBDPlayer* interruptionOtherParty, class UInterruptionDefinition* InterruptionDefinition);
		void Server_SetInteractionToSwapTo(class UInteractionDefinition* Interaction);
		void Server_RequestInterruption_Interruptor();
		void Server_DebugRequestInteraction(const class FString& interactionName, const class FString& InteractorName, const class FString& interactableName);
		void Server_Cheat_SetInteractionScanInterval(float Interval);
		void Server_CancelCurrentInteractionByInput();
		void Server_Broadcast_StoreInteraction(const struct FStoredInteraction& interactionToStore);
		void Server_Broadcast_ConfirmChargedCompleted(bool chargeComplete);
		void Server_AnswerInterruption_Interruptee(ERequestState State);
		void ResetSuccessiveSkillCheckCount();
		void RemoveInteraction(class UInteractionDefinition* Interaction);
		void PauseSkillCheckTimer();
		void OnAttachedInteractorOwnerEndPlay(class AActor* Actor, EEndPlayReason EndPlayReason);
		int32_t NumInteractionsInZone();
		void Multicast_StoreInterruption_Interruptor(class ADBDPlayer* interruptionOtherParty, class UInterruptionDefinition* InterruptionDefinition);
		void Multicast_StoreInteraction(const struct FStoredInteraction& interactionToStore);
		void Multicast_SetInteractionToSwapTo(class UInteractionDefinition* Interaction);
		void Multicast_RequestInterruption_Interruptee(class ADBDPlayer* interruptionOtherParty, class UInterruptionDefinition* InterruptionDefinition);
		void Multicast_InterruptionRequestResult_Interruptor(ERequestState State, bool grantInterruptScore);
		void Multicast_InteractionPredictionValidationResult(class UInteractionDefinition* Interaction, EInteractionValidationState State);
		void Multicast_CancelCurrentInteractionByInput();
		void IncrementSuccessiveSkillCheckCount();
		bool HasAvailableInteraction(EInputInteractionType interactionType);
		bool HasActiveSkillCheck();
		class USkillCheck* GetSkillCheck();
		float GetMultiplicativeSkillCheckProbabilityModifier();
		class UInteractionDefinition* GetCurrentInteractionOfType(EInputInteractionType interactionInputType);
		class UInteractionDefinition* GetCurrentInteraction();
		void GetAvailableInteractions(TArray<class UInteractionDefinition*>* Result);
		class UInteractionDefinition* GetAvailableInteractionByID(const class FString& InteractionID);
		class UInteractionDefinition* GetAvailableInteraction(EInputInteractionType interactionType);
		float GetAdditiveSkillCheckProbabilityModifier();
		void Client_StopSkillCheck();
		void Client_NotifyChargeCompleted(class UInteractionDefinition* Interaction);
		void Client_Cheat_SetInteractionScanInterval(float Interval);
		void CleanInteractionArray(class AActor* DestroyedActor);
		bool CanPerformInteraction(const class FString& interactionName);
		void Broadcast_Multicast_ConfirmChargedCompleted(bool chargeComplete);
		void Authority_TriggerCustomSkillCheck(ESkillCheckCustomType Type, float WarningSoundDelay);
		void Authority_ClearPlayerDependency(class ADBDPlayer* playerDependency);
		void Authority_ClearPlayerDependencies();
		void AddInteraction(class UInteractionDefinition* Interaction);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PlayerLevelTooltipWidget
	 * Size -> 0x0008 (FullSize[0x0378] - InheritedSize[0x0370])
	 */
	class UPlayerLevelTooltipWidget : public UBaseTooltipWidget
	{
	public:
		class UUMGTooltipContentPlayerLevelWidget*                 PlayerLevelContent;                                      // 0x0370(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PlayerMoveBackAndForthComponent
	 * Size -> 0x0048 (FullSize[0x0100] - InheritedSize[0x00B8])
	 */
	class UPlayerMoveBackAndForthComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_I22P[0x48];                                  // 0x00B8(0x0048) MISSED OFFSET (PADDING)

	public:
		void OnMoveTimerDone();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PlayerNameRegistration
	 * Size -> 0x0068 (FullSize[0x0098] - InheritedSize[0x0030])
	 */
	class UPlayerNameRegistration : public UObject
	{
	public:
		unsigned char                                              UnknownData_4RRU[0x68];                                  // 0x0030(0x0068) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.SpherePlayerOverlapComponent
	 * Size -> 0x0000 (FullSize[0x04A0] - InheritedSize[0x04A0])
	 */
	class USpherePlayerOverlapComponent : public USphereComponent
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.CapsulePlayerOverlapComponent
	 * Size -> 0x0000 (FullSize[0x04A0] - InheritedSize[0x04A0])
	 */
	class UCapsulePlayerOverlapComponent : public UCapsuleComponent
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.BoxPlayerOverlapComponent
	 * Size -> 0x0008 (FullSize[0x04B0] - InheritedSize[0x04A8])
	 */
	class UBoxPlayerOverlapComponent : public UBoxComponent
	{
	public:
		unsigned char                                              UnknownData_6RRW[0x8];                                   // 0x04A8(0x0008) Fix Super Size

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PlayerPerspectiveComponent
	 * Size -> 0x0078 (FullSize[0x0130] - InheritedSize[0x00B8])
	 */
	class UPlayerPerspectiveComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_7C1H[0x78];                                  // 0x00B8(0x0078) MISSED OFFSET (PADDING)

	public:
		void UpdateLocallyObserved();
		void OnPawnControllerChanged(class APawn* Pawn, class AController* OldController, class AController* NewController);
		bool IsLocallyObserved();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PlayerReportManager
	 * Size -> 0x0060 (FullSize[0x0098] - InheritedSize[0x0038])
	 */
	class UPlayerReportManager : public UGameInstanceSubsystem
	{
	public:
		unsigned char                                              UnknownData_FGKP[0x8];                                   // 0x0038(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UDBDGameInstance*                                    _gameInstance;                                           // 0x0040(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_83FN[0x50];                                  // 0x0048(0x0050) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PlayerScoreComponent
	 * Size -> 0x00A0 (FullSize[0x0158] - InheritedSize[0x00B8])
	 */
	class UPlayerScoreComponent : public UActorComponent
	{
	public:
		unsigned char                                              _scoreEmitterDB[0x30];                                   // 0x00B8(0x0030) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              _emitters[0x50];                                         // 0x00E8(0x0050) UNKNOWN PROPERTY: SetProperty
		unsigned char                                              UnknownData_CJFD[0x20];                                  // 0x0138(0x0020) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PlayerScoreEmitter
	 * Size -> 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
	 */
	class UPlayerScoreEmitter : public UObject
	{
	public:
		unsigned char                                              UnknownData_HDJC[0x8];                                   // 0x0030(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PlayerSkeletalMeshComponentBudgeted
	 * Size -> 0x0004 (FullSize[0x1030] - InheritedSize[0x102C])
	 */
	class UPlayerSkeletalMeshComponentBudgeted : public UDBDSkeletalMeshComponentBudgeted
	{
	public:
		unsigned char                                              UnknownData_837Z[0x4];                                   // 0x102C(0x0004) Fix Super Size

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PlayerStateScoreEmitter
	 * Size -> 0x00B0 (FullSize[0x00E8] - InheritedSize[0x0038])
	 */
	class UPlayerStateScoreEmitter : public UPlayerScoreEmitter
	{
	public:
		struct FGameplayTag                                        _scoreTag;                                               // 0x0038(0x000C) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _scoreUpdateInterval;                                    // 0x0044(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FGameplayTagQuery                                   _tagQuery;                                               // 0x0048(0x0048) Edit, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_FYWB[0x58];                                  // 0x0090(0x0058) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PollableEventListener
	 * Size -> 0x0010 (FullSize[0x00C8] - InheritedSize[0x00B8])
	 */
	class UPollableEventListener : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_USKZ[0x10];                                  // 0x00B8(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PoolableProjectileComponent
	 * Size -> 0x0000 (FullSize[0x00D8] - InheritedSize[0x00D8])
	 */
	class UPoolableProjectileComponent : public UAuthoritativePoolableActorComponent
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PopupFactory
	 * Size -> 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
	 */
	class UPopupFactory : public UObject
	{
	public:
		class UDBDGameInstance*                                    _gameInstance;                                           // 0x0030(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PopupSequencer
	 * Size -> 0x0030 (FullSize[0x0060] - InheritedSize[0x0030])
	 */
	class UPopupSequencer : public UObject
	{
	public:
		unsigned char                                              UnknownData_3EH0[0x8];                                   // 0x0030(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UDBDGameInstance*                                    _gameInstance;                                           // 0x0038(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_E2W3[0x20];                                  // 0x0040(0x0020) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PostProcessUpdate
	 * Size -> 0x0000 (FullSize[0x0230] - InheritedSize[0x0230])
	 */
	class APostProcessUpdate : public AActor
	{
	public:
		void PostProcessToggle(bool toggle);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PowerButton
	 * Size -> 0x0060 (FullSize[0x0398] - InheritedSize[0x0338])
	 */
	class UPowerButton : public UMobileBaseUserWidget
	{
	public:
		class UActionButton*                                       Button;                                                  // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        SwitchIcon;                                              // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        CountContainer;                                          // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        RadialProgressBarContainer;                              // 0x0350(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          CountLabel;                                              // 0x0358(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              TierImage;                                               // 0x0360(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        AddonsContainer;                                         // 0x0368(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGInventoryItemButton*                             FirstAddonSlot;                                          // 0x0370(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGInventoryItemButton*                             SecondAddonSlot;                                         // 0x0378(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UProgressBar*                                        FillPowerChargeProgression;                              // 0x0380(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      DisabledOpacity;                                         // 0x0388(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      EnabledOpacity;                                          // 0x038C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       EnabledLongPressed;                                      // 0x0390(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_T2UQ[0x3];                                   // 0x0391(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    _itemCount;                                              // 0x0394(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void SetSwitchIconActive(bool Active);
		void SetState(EActionButtonState State);
		void SetRadialProgressPercentage(float progression, ERadialProgressBarType ProgressBarType);
		void SetRadialProgressBarActice(bool Active);
		void SetPowerIntensityOpacity(float Opacity);
		void SetFillProgressPercentage(float chargeProgressionPercentage);
		void OnTierChanged(int32_t previousTier, int32_t currentTier, bool IsFirstTime);
		bool IsRadialProgressBarActive();
		class UActionButton* GetActionButton();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PremiumTransactionSubsystem
	 * Size -> 0x0020 (FullSize[0x0058] - InheritedSize[0x0038])
	 */
	class UPremiumTransactionSubsystem : public UGameInstanceSubsystem
	{
	public:
		unsigned char                                              UnknownData_FKRY[0x20];                                  // 0x0038(0x0020) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PresentationPowerFadeComponent
	 * Size -> 0x0000 (FullSize[0x00B8] - InheritedSize[0x00B8])
	 */
	class UPresentationPowerFadeComponent : public UActorComponent
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PresetControllerSubsystem
	 * Size -> 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
	 */
	class UPresetControllerSubsystem : public UGameInstanceSubsystem
	{
	public:
		class ULoadoutPresetController*                            _loadoutController;                                      // 0x0038(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UCustomizationPresetController*                      _customizationController;                                // 0x0040(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.IterativeWeightAdjustmentStrategy
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UIterativeWeightAdjustmentStrategy : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ProceduralGenerationData
	 * Size -> 0x0138 (FullSize[0x0170] - InheritedSize[0x0038])
	 */
	class UProceduralGenerationData : public UDataAsset
	{
	public:
		TArray<struct FQuadrantSpawnTypeProperties>                QuadrantSpawnTypeProperties;                             // 0x0038(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FQuadrantSpawnCategories>                    QuadrantSpawnCategories;                                 // 0x0048(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FThemeProperties>                            ThemeProperties;                                         // 0x0058(0x0010) ZeroConstructor, Deprecated, NativeAccessSpecifierPublic
		int32_t                                                    MaxSurvivorCount;                                        // 0x0068(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_36PW[0x4];                                   // 0x006C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FKillerItemDependencies>                     KillersItemDependencies;                                 // 0x0070(0x0010) ZeroConstructor, Deprecated, NativeAccessSpecifierPublic
		class UCurveFloat*                                         SurvivorItemPopulationProbability;                       // 0x0080(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSurvivorItemProperties>                     SurvivorItemProperty;                                    // 0x0088(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		class UCurveFloat*                                         EscapeStrategyPopulationProbability;                     // 0x0098(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FEscapeStrategyProperty>                     EscapeStrategyProperties;                                // 0x00A0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FEscapeTypeObjects>                          EscapeTypeActors;                                        // 0x00B0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		unsigned char                                              Basements[0x10];                                         // 0x00C0(0x0010) UNKNOWN PROPERTY: ArrayProperty
		TArray<struct FGameplayElementsPopulation>                 ElementsPopulation;                                      // 0x00D0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FManagedGameplayElementsPopulation>          ManagedElementsPopulation;                               // 0x00E0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FSurvivorGroupingProbability>                SurvivorGroupingProbabilities;                           // 0x00F0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FVector                                             ProceduralMapOffset;                                     // 0x0100(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ProceduralTileWidth;                                     // 0x010C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ProceduralTileHeight;                                    // 0x0110(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             ProceduralQuadTileMapOffset;                             // 0x0114(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ProceduralQuadTileCubeWidth;                             // 0x0120(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DifficultyModifier;                                      // 0x0124(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CharacterCameraHeight;                                   // 0x0128(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CharacterCollisionRadius;                                // 0x012C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpawnerCollisionRadius;                                  // 0x0130(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TotemVisualHeight;                                       // 0x0134(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSpecialBehaviourPopulation>                 SpecialBehaviourPopulation;                              // 0x0138(0x0010) ZeroConstructor, Deprecated, NativeAccessSpecifierPrivate
		TArray<struct FEventSubstitionData>                        _eventProperties;                                        // 0x0148(0x0010) ZeroConstructor, Deprecated, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_YDGJ[0x18];                                  // 0x0158(0x0018) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ProceduralLevelBuilder
	 * Size -> 0x0DE0 (FullSize[0x1010] - InheritedSize[0x0230])
	 */
	class AProceduralLevelBuilder : public AActor
	{
	public:
		unsigned char                                              UnknownData_725P[0x20];                                  // 0x0230(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              PathToMapDirectory;                                      // 0x0250(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              PathToTilesDirectory;                                    // 0x0260(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      KillerMinProximityFromCamper;                            // 0x0270(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SurvivorMinProximityFromOtherCamper;                     // 0x0274(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinProximityBetweenGenerators;                           // 0x0278(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinProximityBetweenChests;                               // 0x027C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinProximityBetweenTotems;                               // 0x0280(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SurvivorMinProximityFromGenerator;                       // 0x0284(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SurvivorMinProximityFromTotem;                           // 0x0288(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SurvivorMaxLineOfSightFromTotem;                         // 0x028C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinProximityBetweenSpecialBehaviourItems;                // 0x0290(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpecialBehaviourItemMinProximityFromSurvivor;            // 0x0294(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpecialBehaviourItemMinProximityFromKiller;              // 0x0298(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4074[0x4];                                   // 0x029C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              DebugMap;                                                // 0x02A0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UClass*>                                      DebugTiles;                                              // 0x02A8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
		float                                                      SmallMeatLockerMinProximityFromKillerLair;               // 0x02B8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FactorToAdjustToWhenOutOfProximity;                      // 0x02BC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FactorToAdjustToWhenInLineOfSight;                       // 0x02C0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HeightAmplifier;                                         // 0x02C4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HeightAmplifierActivationHeight;                         // 0x02C8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FNVZ[0x4];                                   // 0x02CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UProceduralGenerationData*                           ProceduralGenerationData;                                // 0x02D0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TileWeightRateOfDecay;                                   // 0x02D8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      QuadTileWeightRateOfDecay;                               // 0x02DC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JOYQ[0x18];                                  // 0x02E0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              _tileClass;                                              // 0x02F8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_AV3C[0x1C0];                                 // 0x0300(0x01C0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMapData*                                            _mapData;                                                // 0x04C0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UAkAudioBank*                                        _ambientAudioBank;                                       // 0x04C8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UObjectLibrary*                                      _availableTilesLibrary;                                  // 0x04D0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_6DD3[0xE8];                                  // 0x04D8(0x00E8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UObjectLibrary*                                      _availableDerivedTileLibrary;                            // 0x05C0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_889K[0x8];                                   // 0x05C8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              DesignTunableClass;                                      // 0x05D0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UDBDDesignTunables*                                  _designTunables;                                         // 0x05D8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FGeneratedLevelData                                 _generatedData;                                          // 0x05E0(0x0310) ContainsInstancedReference, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_Z86E[0x310];                                 // 0x08F0(0x0310) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTileMatrix*                                         _tileMatrix;                                             // 0x0C00(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UTileBank*                                           _tileBank;                                               // 0x0C08(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_XOXT[0x68];                                  // 0x0C10(0x0068) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UActorSpawner*                                       _killerLairSpawner;                                      // 0x0C78(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_HWAW[0x8];                                   // 0x0C80(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSoftObjectPath>                             _preloadAssetReferences;                                 // 0x0C88(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		TArray<class UClass*>                                      _chestItemAssetReferences;                               // 0x0C98(0x0010) ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate
		class UClass*                                              _slasherPawn;                                            // 0x0CA8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_M2K8[0x18];                                  // 0x0CB0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class ATile*>                                       _tilesThatHaveBeenSpawned;                               // 0x0CC8(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_MIZN[0x10];                                  // 0x0CD8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AProceduralLevelData*                                _debugProceduralDatas;                                   // 0x0CE8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class ADBDClientSyncer*                                    _syncer;                                                 // 0x0CF0(0x0008) Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UBlackboardComponent*                                _blackboardComp;                                         // 0x0CF8(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_EIOT[0x50];                                  // 0x0D00(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UEdgeObjectHandlingStrategy*                         _edgeObjectHandlingStrategy;                             // 0x0D50(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_11PD[0x238];                                 // 0x0D58(0x0238) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ATile*                                               _backupKillerLairTile;                                   // 0x0F90(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_IS0O[0x78];                                  // 0x0F98(0x0078) MISSED OFFSET (PADDING)

	public:
		void SyncSeeds();
		void StartGenerationOnSyncerReady();
		class AActor* SpawnActor(class UClass* ActorClass, ETileSpawnPointType spawnPointType);
		void RemoveMist();
		void Multicast_DebugShareGenerationData(const struct FGenerationParams& usedParams);
		void BuildFromSeed();
		void ApplyMist(float Modifier);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ProceduralLevelData
	 * Size -> 0x0388 (FullSize[0x05B8] - InheritedSize[0x0230])
	 */
	class AProceduralLevelData : public AActor
	{
	public:
		unsigned char                                              SelectedPaperMap[0x30];                                  // 0x0230(0x0030) UNKNOWN PROPERTY: SoftObjectProperty
		int32_t                                                    GenerationSeed;                                          // 0x0260(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EKillerMoodInfluence                                       LevelMood;                                               // 0x0264(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JS4K[0x3];                                   // 0x0265(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGeneratedLevelData                                 GeneratedData;                                           // 0x0268(0x0310) Edit, BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic
		TArray<class FName>                                        offerings;                                               // 0x0578(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    PerksLevel;                                              // 0x0588(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RF7W[0x4];                                   // 0x058C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FName>                                        Perks;                                                   // 0x0590(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       SkipGameplayElementGeneration;                           // 0x05A0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LNAY[0x7];                                   // 0x05A1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              _builder;                                                // 0x05A8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UClass*                                              _builderClassDef;                                        // 0x05B0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ProcessingPopupScreen
	 * Size -> 0x0000 (FullSize[0x0120] - InheritedSize[0x0120])
	 */
	class UProcessingPopupScreen : public UBasePopupScreen
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ProgressionSystemInfoPopupScreen
	 * Size -> 0x0000 (FullSize[0x0140] - InheritedSize[0x0140])
	 */
	class UProgressionSystemInfoPopupScreen : public UGenericPopupScreen
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PromoCodeManager
	 * Size -> 0x0018 (FullSize[0x0050] - InheritedSize[0x0038])
	 */
	class UPromoCodeManager : public UGameInstanceSubsystem
	{
	public:
		unsigned char                                              UnknownData_CTT0[0x18];                                  // 0x0038(0x0018) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PromoPackContentDataAsset
	 * Size -> 0x0050 (FullSize[0x0088] - InheritedSize[0x0038])
	 */
	class UPromoPackContentDataAsset : public UPrimaryDataAsset
	{
	public:
		TMap<EPromoPackContentType, struct FPromoPackContentTypeData> Data;                                                    // 0x0038(0x0050) Edit, Protected, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PromoPackPurchaseUIDataUtility
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UPromoPackPurchaseUIDataUtility : public UBlueprintFunctionLibrary
	{
	public:
		void STATIC_SetRemainingTimeFromHours(struct FPromoPackPurchaseUIData* Data, int32_t remainHours);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PromoPackUtilities
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UPromoPackUtilities : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PromptManager
	 * Size -> 0x0048 (FullSize[0x0078] - InheritedSize[0x0030])
	 */
	class UPromptManager : public UObject
	{
	public:
		unsigned char                                              UnknownData_4TFS[0x48];                                  // 0x0030(0x0048) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ProtectionHitComponent
	 * Size -> 0x0070 (FullSize[0x0128] - InheritedSize[0x00B8])
	 */
	class UProtectionHitComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_5U8Y[0x50];                                  // 0x00B8(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class ACamperPlayer*>                               _nearbyInjuredSurvivors;                                 // 0x0108(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_OV0I[0x10];                                  // 0x0118(0x0010) MISSED OFFSET (PADDING)

	public:
		void Authority_HandleProtectionScoringEvents();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PS4ProfileDAL
	 * Size -> 0x0000 (FullSize[0x0088] - InheritedSize[0x0088])
	 */
	class UPS4ProfileDAL : public UPS4GRDKBaseProfileDAL
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PS5ProfileDAL
	 * Size -> 0x0000 (FullSize[0x0088] - InheritedSize[0x0088])
	 */
	class UPS5ProfileDAL : public UPlayerProfileDAL
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PurpleGlyphBloodTrailComponent
	 * Size -> 0x0010 (FullSize[0x0250] - InheritedSize[0x0240])
	 */
	class UPurpleGlyphBloodTrailComponent : public UBloodTrailComponent
	{
	public:
		unsigned char                                              UnknownData_4X63[0x10];                                  // 0x0240(0x0010) MISSED OFFSET (PADDING)

	public:
		void DeactivateGlyphBloodTrail();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.PushableInterface
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UPushableInterface : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.RankManager
	 * Size -> 0x00A8 (FullSize[0x00D8] - InheritedSize[0x0030])
	 */
	class URankManager : public UObject
	{
	public:
		unsigned char                                              UnknownData_7AOZ[0xA8];                                  // 0x0030(0x00A8) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.RankTooltipWidget
	 * Size -> 0x0028 (FullSize[0x0398] - InheritedSize[0x0370])
	 */
	class URankTooltipWidget : public UBaseTooltipWidget
	{
	public:
		class UTextBlock*                                          RankInfoLabel;                                           // 0x0370(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          ResetInfoLabel;                                          // 0x0378(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UGridPanel*                                          RankInfoSlotsContainer;                                  // 0x0380(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGPlayerRankInfo*                                  SurvivorRankInfoWidget;                                  // 0x0388(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGPlayerRankInfo*                                  KillerRankInfoWidget;                                    // 0x0390(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.RBTOutlineUpdateStrategy
	 * Size -> 0x0000 (FullSize[0x00E0] - InheritedSize[0x00E0])
	 */
	class URBTOutlineUpdateStrategy : public UDefaultOutlineUpdateStrategy
	{
	public:
		bool IsRevealedToLocalPlayer_BP(class ADBDPlayer* Player);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.RecentGameEventTracker
	 * Size -> 0x00A0 (FullSize[0x00D8] - InheritedSize[0x0038])
	 */
	class URecentGameEventTracker : public UGameInstanceSubsystem
	{
	public:
		unsigned char                                              UnknownData_GI9P[0xA0];                                  // 0x0038(0x00A0) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.RecommendationsGenerator
	 * Size -> 0x0090 (FullSize[0x00C0] - InheritedSize[0x0030])
	 */
	class URecommendationsGenerator : public UObject
	{
	public:
		TWeakObjectPtr<class Ushopmanager>                         _shopManager;                                            // 0x0030(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TWeakObjectPtr<class UDBDGameInstance>                     _gameInstance;                                           // 0x0038(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TMap<class FString, class URecommendationsFilter*>         _filters;                                                // 0x0040(0x0050) Transient, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_XG71[0x30];                                  // 0x0090(0x0030) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.RedStainComponent
	 * Size -> 0x0010 (FullSize[0x0440] - InheritedSize[0x0430])
	 */
	class URedStainComponent : public USpotLightComponent
	{
	public:
		struct FLinearColor                                        _initialSpotLightColor;                                  // 0x0430(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void UpdateRedStain(bool shouldBeHidden, float alpha);
		void DBD_HideRedStain(bool hideStain);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.RegionFinder
	 * Size -> 0x0078 (FullSize[0x00A8] - InheritedSize[0x0030])
	 */
	class URegionFinder : public UObject
	{
	public:
		TArray<struct FRegion>                                     Regions;                                                 // 0x0030(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		float                                                      TIMEOUT;                                                 // 0x0040(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1HSD[0x64];                                  // 0x0044(0x0064) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.RenderingFeaturesSequencer
	 * Size -> 0x0048 (FullSize[0x0078] - InheritedSize[0x0030])
	 */
	class URenderingFeaturesSequencer : public UObject
	{
	public:
		unsigned char                                              UnknownData_FRSG[0x10];                                  // 0x0030(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ADBDAggregateCullDistanceVolumes*                    _aggregateCullDistanceVolumes;                           // 0x0040(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UWorld*                                              _world;                                                  // 0x0048(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_1S4X[0x28];                                  // 0x0050(0x0028) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ReportPlayerPopupScreen
	 * Size -> 0x0030 (FullSize[0x0170] - InheritedSize[0x0140])
	 */
	class UReportPlayerPopupScreen : public UGenericPopupScreen
	{
	public:
		unsigned char                                              UnknownData_4KP0[0x30];                                  // 0x0140(0x0030) MISSED OFFSET (PADDING)

	public:
		void OnTextInputMouseOver(bool IsMouseOver);
		void OnConfirmReportPlayer(const class FString& Category, const class FString& Comment);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.RestrictedPlacementAreaDefaultStrategy
	 * Size -> 0x0008 (FullSize[0x00A8] - InheritedSize[0x00A0])
	 */
	class URestrictedPlacementAreaDefaultStrategy : public URestrictedPlacementAreaStrategy
	{
	public:
		class UClass*                                              RestrictedActor;                                         // 0x00A0(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ReverseBearTrap
	 * Size -> 0x00C0 (FullSize[0x03E8] - InheritedSize[0x0328])
	 */
	class AReverseBearTrap : public AInteractable
	{
	public:
		unsigned char                                              UnknownData_OWC2[0x8];                                   // 0x0328(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USkeletalMeshComponent*                              _rbtMesh;                                                // 0x0330(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAnimationMontageSlave*                              _animMontageSlave;                                       // 0x0338(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_124B[0x4];                                   // 0x0340(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    _keyID;                                                  // 0x0344(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    _attemptsNeededToDetach;                                 // 0x0348(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_7SG5[0x94];                                  // 0x034C(0x0094) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       _exitGatesPoweredAfterAttachment;                        // 0x03E0(0x0001) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _generatorFixedAfterAttachment;                          // 0x03E1(0x0001) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_MTH5[0x6];                                   // 0x03E2(0x0006) MISSED OFFSET (PADDING)

	public:
		void StopMontage();
		void StopExecutionTimer();
		bool ShouldUpdateExecutionTimer();
		void SetVisible(bool visible);
		void SetGateClosedAtAttachment(bool CLOSED);
		void ResetExecutionTimer(float Time);
		void OnWarningLevelChanged(int32_t previousWarningLevel, int32_t currentWarningLevel);
		void OnGeneratorComplete(int32_t activatedGeneratorCount);
		void OnExitWarningZone();
		void OnEnterWarningZone();
		void OnDetachSurvivor(class ACamperPlayer* Survivor);
		void OnAttachSurvivorBegin(class ACamperPlayer* Survivor);
		void OnAttachSurvivor(class ACamperPlayer* Survivor);
		void NotifyOnAttachSurvivorBegin(class ACamperPlayer* Survivor);
		void NotifyDetachStarted(class ACamperPlayer* Survivor);
		bool IsRBTActivated();
		bool IsInWarningZone();
		bool IsExecutionTimerDone();
		bool IsExecutionTimerActive();
		void IncrementAttemptsMade();
		bool HasDetachStarted();
		bool GetWasGateClosedAtAttachment();
		int32_t GetWarningLevel();
		int32_t GetKeyID();
		bool GetGeneratorFixedAfterAttachment();
		bool GetExitGatesPoweredAfterAttachment();
		float GetExecutionTimerTimeLeft();
		float GetExecutionTimerPercentTimeElapsed();
		int32_t GetAttemptsNeeded();
		int32_t GetAttemptsMade();
		class ACamperPlayer* GetAttachedSurvivor();
		void FastForwardExecutionTimer(float DeltaTime);
		void DetachSurvivor(class ACamperPlayer* Survivor);
		bool CanExecute();
		void Authority_SetKeyID(int32_t KeyId);
		void Authority_GenerateAttemptsNeeded(int32_t remainingAttemptsTotal, int32_t remainingRBTs, int32_t numRemovers);
		void AttachSurvivor(class ACamperPlayer* Survivor);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ReverseBearTrapRemover
	 * Size -> 0x0030 (FullSize[0x0358] - InheritedSize[0x0328])
	 */
	class AReverseBearTrapRemover : public AInteractable
	{
	public:
		unsigned char                                              UnknownData_SPYR[0x8];                                   // 0x0328(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            _keys;                                                   // 0x0330(0x0010) Net, ZeroConstructor, NativeAccessSpecifierPrivate
		TArray<int32_t>                                            _keysSearched;                                           // 0x0340(0x0010) Net, ZeroConstructor, NativeAccessSpecifierPrivate
		class UMapActorComponent*                                  _mapActor;                                               // 0x0350(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void PlayRemoveFailMontage();
		bool HasSearchedForKey(int32_t KeyId);
		bool HasKey(int32_t KeyId);
		class UMapActorComponent* GetMapActor();
		class UPrimitiveComponent* GetInteractorPrimitiveComponent();
		class AReverseBearTrap* GetAttachedRBT(class AActor* Player);
		void AddSearchedKey(int32_t KeyId);
		void AddKey(int32_t KeyId);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ReverseBearTrapUtilities
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UReverseBearTrapUtilities : public UBlueprintFunctionLibrary
	{
	public:
		class AReverseBearTrap* STATIC_GetAttachedRBT(class ADBDPlayer* Player);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.RewardTrackContainer
	 * Size -> 0x01D0 (FullSize[0x0200] - InheritedSize[0x0030])
	 */
	class URewardTrackContainer : public UObject
	{
	public:
		unsigned char                                              UnknownData_0MMS[0x1D0];                                 // 0x0030(0x01D0) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.RewardUtilities
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class URewardUtilities : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.RitualsManager
	 * Size -> 0x0238 (FullSize[0x0270] - InheritedSize[0x0038])
	 */
	class URitualsManager : public UGameInstanceSubsystem
	{
	public:
		unsigned char                                              UnknownData_L5OC[0x90];                                  // 0x0038(0x0090) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDailyRitualContainer                               _cachedRitualContainer;                                  // 0x00C8(0x0028) NativeAccessSpecifierPrivate
		struct FDailyRitualInstance                                _cachedDismissalReplacement;                             // 0x00F0(0x0078) NativeAccessSpecifierPrivate
		struct FDailyRitualInstance                                _cachedClaimedReplacement;                               // 0x0168(0x0078) NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_HYPO[0x70];                                  // 0x01E0(0x0070) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FCoreRitualsContent                                 _s3Content;                                              // 0x0250(0x0018) Transient, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_JTX4[0x8];                                   // 0x0268(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.RoleSelectionScreen
	 * Size -> 0x0048 (FullSize[0x0168] - InheritedSize[0x0120])
	 */
	class URoleSelectionScreen : public UScreenBase
	{
	public:
		unsigned char                                              UnknownData_BQ76[0x48];                                  // 0x0120(0x0048) MISSED OFFSET (PADDING)

	public:
		void OnEventButtonClick();
		void OnChangeUserButtonClick();
		void OnButtonSelected(int32_t buttonId);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.RootMovie
	 * Size -> 0x0068 (FullSize[0x0098] - InheritedSize[0x0030])
	 */
	class URootMovie : public UObject
	{
	public:
		class FString                                              SwfAssetName;                                            // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGFxMoviePlayer*                                     SwfMoviePlayer;                                          // 0x0040(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3YEL[0x10];                                  // 0x0048(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UScreenController*                                   m_ScreenController;                                      // 0x0058(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UUIController*                                       m_UIController;                                          // 0x0060(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UGameInstance*                                       m_GameInstance;                                          // 0x0068(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UDBDInputManager*                                    _inputManager;                                           // 0x0070(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_I3RT[0x20];                                  // 0x0078(0x0020) MISSED OFFSET (PADDING)

	public:
		void SetCursorAsSticky(bool isSticky, bool lockVertical, bool lockHorizontal, float stickinessOverride);
		void RemoveCursorBlockingWidget(const class FString& ID);
		void RegisterView(const class FString& screenId, class UGFxObject* ScreenObject);
		void RegisterUIControl(class UGFxObject* flashObj);
		void RegisterScreenControl(class UGFxObject* flashObj);
		void PlaySound(const class FString& soundId);
		void OpenLinkInBrowser(const class FString& linkAddress);
		void OnScreenReady(const class FString& screenId);
		void OnScreenLeave(const class FString& screenId);
		void OnScreenEnter(const class FString& screenId);
		void OnMovieClosed();
		void OnFlashReady();
		void OnAssert(int32_t Type, const class FString& Message);
		void AddCursorBlockingWidget(const class FString& ID, float X, float Y, float Width, float Height);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.RPCMonitor
	 * Size -> 0x0050 (FullSize[0x0088] - InheritedSize[0x0038])
	 */
	class URPCMonitor : public UGameInstanceSubsystem
	{
	public:
		unsigned char                                              UnknownData_UC14[0x50];                                  // 0x0038(0x0050) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.S3GameConfigs
	 * Size -> 0x0338 (FullSize[0x0370] - InheritedSize[0x0038])
	 */
	class US3GameConfigs : public UGameInstanceSubsystem
	{
	public:
		unsigned char                                              UnknownData_QQLP[0x338];                                 // 0x0038(0x0338) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.S3GameConfigsDS
	 * Size -> 0x0100 (FullSize[0x0138] - InheritedSize[0x0038])
	 */
	class US3GameConfigsDS : public UGameInstanceSubsystem
	{
	public:
		unsigned char                                              UnknownData_OY8M[0x100];                                 // 0x0038(0x0100) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.SafeZoneManagerWidget
	 * Size -> 0x0008 (FullSize[0x0340] - InheritedSize[0x0338])
	 */
	class USafeZoneManagerWidget : public UMobileBaseUserWidget
	{
	public:
		class UCanvasPanel*                                        SafeZonePanel;                                           // 0x0338(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ScourgeHookManagerComponent
	 * Size -> 0x00A0 (FullSize[0x0158] - InheritedSize[0x00B8])
	 */
	class UScourgeHookManagerComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_F24K[0x90];                                  // 0x00B8(0x0090) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<TWeakObjectPtr<class AMeatHook>>                    _scourgeHooks;                                           // 0x0148(0x0010) Net, ZeroConstructor, Transient, RepNotify, UObjectWrapper, NativeAccessSpecifierPrivate

	public:
		void OnRep_ScourgeHooks();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ScreamComponent
	 * Size -> 0x0020 (FullSize[0x00D8] - InheritedSize[0x00B8])
	 */
	class UScreamComponent : public UActorComponent
	{
	public:
		class UPerkManager*                                        _perkManager;                                            // 0x00B8(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UMontagePlayer*                                      _montagePlayer;                                          // 0x00C0(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<struct FGameplayTag>                                _tagsPreventingScream;                                   // 0x00C8(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate

	public:
		bool TriggerScreamEventsIfPossible(bool fireLoudNoiseEvent, float audibleRange);
		bool TriggerScreamEventsAndAndAnimationIfPossible(bool fireLoudNoiseEvent, const struct FMontagePlaybackDefinition& montageDefinition, float audibleRange);
		void OnDamageStateChanged(ECamperDamageState oldDamageState, ECamperDamageState newDamageState);
		bool CanScream();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ScreenController
	 * Size -> 0x02B0 (FullSize[0x02E0] - InheritedSize[0x0030])
	 */
	class UScreenController : public UObject
	{
	public:
		class UDBDGameInstance*                                    _gameInstance;                                           // 0x0030(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UGFxObject*                                          _screenControllerObj;                                    // 0x0038(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UGFxMoviePlayer*                                     _moviePlayer;                                            // 0x0040(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TMap<class FString, class UScreenBase*>                    _screenDictionary;                                       // 0x0048(0x0050) Transient, NativeAccessSpecifierPrivate
		TMap<class FString, EScreenType>                           _screenTypeDictionary;                                   // 0x0098(0x0050) Transient, NativeAccessSpecifierPrivate
		TMap<class UClass*, TWeakObjectPtr<class UUserWidget>>     _cachedUMGScreens;                                       // 0x00E8(0x0050) ExportObject, Transient, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_GSPV[0x1A8];                                 // 0x0138(0x01A8) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ScreenshotOniHook
	 * Size -> 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
	 */
	class UScreenshotOniHook : public UObject
	{
	public:
		unsigned char                                              UnknownData_QU0J[0x8];                                   // 0x0030(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                OniId;                                                   // 0x0038(0x000C) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FName                                                DemonModeTag;                                            // 0x0044(0x000C) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ScreenshotPhysicsWeaponHook
	 * Size -> 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
	 */
	class UScreenshotPhysicsWeaponHook : public UObject
	{
	public:
		unsigned char                                              UnknownData_YNFU[0x8];                                   // 0x0030(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FName>                                        KillersId;                                               // 0x0038(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ScreenshotPreviewWidget
	 * Size -> 0x0000 (FullSize[0x0298] - InheritedSize[0x0298])
	 */
	class UScreenshotPreviewWidget : public UUserWidget
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ScreenshotSpiritHook
	 * Size -> 0x0058 (FullSize[0x0088] - InheritedSize[0x0030])
	 */
	class UScreenshotSpiritHook : public UObject
	{
	public:
		unsigned char                                              UnknownData_C9MN[0x8];                                   // 0x0030(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                SpiritId;                                                // 0x0038(0x000C) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_T8PO[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              MaterialToFind[0x30];                                    // 0x0048(0x0030) UNKNOWN PROPERTY: SoftObjectProperty
		class FName                                                MaterialFieldName;                                       // 0x0078(0x000C) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      MaterialFieldValue;                                      // 0x0084(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ScreenshotToolDataAsset
	 * Size -> 0x01D0 (FullSize[0x0208] - InheritedSize[0x0038])
	 */
	class UScreenshotToolDataAsset : public UDataAsset
	{
	public:
		struct FNamedButton                                        ReloadDBButton;                                          // 0x0038(0x0018) Edit, NativeAccessSpecifierPublic
		struct FScreenshotViewSetting                              SurvivorHeadView;                                        // 0x0050(0x0028) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FScreenshotViewSetting                              SurvivorTorsoView;                                       // 0x0078(0x0028) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FScreenshotViewSetting                              SurvivorLegsView;                                        // 0x00A0(0x0028) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FScreenshotViewSetting                              KillerHeadView;                                          // 0x00C8(0x0028) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FScreenshotViewSetting                              KillerBodyView;                                          // 0x00F0(0x0028) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FScreenshotViewSetting                              KillerWeaponView;                                        // 0x0118(0x0028) Edit, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FGenderViewSetting>                          GenderViewOverrides;                                     // 0x0140(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCharacterItemCategoryViewSetting>           CharacterViewOverrides;                                  // 0x0150(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FItemViewSetting>                            ItemViewOverrides;                                       // 0x0160(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FRoleGenderViewSetting>                      OutfitView;                                              // 0x0170(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCharacterViewSetting>                       OutfitCharacterOverrides;                                // 0x0180(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FRoleGenderViewSetting>                      OutfitTwoPartsView;                                      // 0x0190(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FOutfitViewSetting>                          OutfitOverrides;                                         // 0x01A0(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCharacterAnimation>                         AnimationOverrides;                                      // 0x01B0(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FScreenshotViewSetting                              CharmsView;                                              // 0x01C0(0x0028) Edit, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FCharmCategorySetting>                       CharmsCategoryOverrides;                                 // 0x01E8(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCharmViewSetting>                           CharmOverrides;                                          // 0x01F8(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ScreenshotToolHook
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UScreenshotToolHook : public UInterface
	{
	public:
		void ScreenshotBeginPlay(bool isPIE);
		void PreTakeItemScreenshot(const struct FCharacterToolItemData& Item);
		void PreSpawnCharm(const struct FCustomizationItemData& Item);
		void PreSpawnCharacter(const struct FCharacterDescription& Description, struct FCharacterToolSpawnParameters* spawnParams);
		void PreHookDestruction();
		void PreDestroyCharm(class ACharm* Charm);
		void PreDestroyCharacter(class ADBDMenuPlayer* Character);
		void PreBatchItems();
		void PostUpdateCharacter(class ADBDMenuPlayer* Character);
		void PostTakeItemScreenshot(const struct FCharacterToolItemData& Item, bool success);
		void PostStateChanged(EScreenshotToolState previousState, EScreenshotToolState CurrentState);
		void PostSpawnCharm(class ACharm* Charm);
		void PostSpawnCharacter(class ADBDMenuPlayer* Character);
		void PostHookConstruction();
		void PostBatchItems(TArray<struct FCharacterToolItemData> Items);
		bool IsPIEOnly();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ScreenshotVFXCharmHook
	 * Size -> 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
	 */
	class UScreenshotVFXCharmHook : public UObject
	{
	public:
		unsigned char                                              UnknownData_6RF1[0x8];                                   // 0x0030(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FScreenshotVFXCharmHookCharm>                Charms;                                                  // 0x0038(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ScreenSpaceLocationComponent
	 * Size -> 0x0028 (FullSize[0x0240] - InheritedSize[0x0218])
	 */
	class UScreenSpaceLocationComponent : public USceneComponent
	{
	public:
		unsigned char                                              UnknownData_7OUM[0x4];                                   // 0x0218(0x0004) Fix Super Size
		float                                                      ScreenSpaceY;                                            // 0x021C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                    FrameDelay;                                              // 0x0220(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FVector2D                                           _currentResolution;                                      // 0x0224(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_UR5K[0x4];                                   // 0x022C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTransform>                                  _previousTransforms;                                     // 0x0230(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate

	public:
		bool HasValidPosition();
		struct FVector2D GetCurrentResolution();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.Searchable
	 * Size -> 0x00D0 (FullSize[0x03F8] - InheritedSize[0x0328])
	 */
	class ASearchable : public AInteractable
	{
	public:
		unsigned char                                              UnknownData_8ISS[0x10];                                  // 0x0328(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Weight;                                                  // 0x0338(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemRarity                                                ItemRarity;                                              // 0x033C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TPPI[0x3];                                   // 0x033D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnSearchedChanged;                                       // 0x0340(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		bool                                                       IsSecret;                                                // 0x0350(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N2WU[0x7];                                   // 0x0351(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USearchableSpawnPoint*                               _searchableSpawnPoint;                                   // 0x0358(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FName                                                _itemIdToSpawn;                                          // 0x0360(0x000C) Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _hasBeenSearched;                                        // 0x036C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_Q1BJ[0x3];                                   // 0x036D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ACollectable*                                        _spawnedItem;                                            // 0x0370(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class ACollectable*                                        _itemInsideSearchable;                                   // 0x0378(0x0008) Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TMap<class ADBDPlayer*, unsigned char>                     _numberOfSearchesWhileOpenPerPlayer;                     // 0x0380(0x0050) Transient, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_FR9Q[0x28];                                  // 0x03D0(0x0028) MISSED OFFSET (PADDING)

	public:
		void SetHasBeenSearched(bool newHasBeenSearched);
		void OnSearchedChanged__DelegateSignature(bool searched);
		bool HasBeenSearched();
		class UPrimitiveComponent* GetInteractorPrimitiveComponent();
		bool ContainsSpawnedItem();
		class ACollectable* Authority_SpawnObject(class ADBDPlayer* Player);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.SearchableOutlineUpdateStrategy
	 * Size -> 0x0000 (FullSize[0x0138] - InheritedSize[0x0138])
	 */
	class USearchableOutlineUpdateStrategy : public USourceBasedOutlineUpdateStrategy
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.TileSpawnPoint
	 * Size -> 0x0070 (FullSize[0x0288] - InheritedSize[0x0218])
	 */
	class UTileSpawnPoint : public USceneComponent
	{
	public:
		unsigned char                                              UnknownData_JEZ1[0x8];                                   // 0x0218(0x0008) Fix Super Size
		unsigned char                                              UnknownData_0PYW[0x8];                                   // 0x0220(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		ETileSpawnPointType                                        TileSpawnPointType;                                      // 0x0228(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SUH8[0x3];                                   // 0x0229(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Weight;                                                  // 0x022C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              Visualization[0x30];                                     // 0x0230(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              UnknownData_HAFH[0x8];                                   // 0x0260(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              _spawnedObject;                                          // 0x0268(0x0008) Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<class UClass*>                                      ObjectSpawnModifier;                                     // 0x0270(0x0010) Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate
		int32_t                                                    _spawnPriorityTier;                                      // 0x0280(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _weightInfluenceable;                                    // 0x0284(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _weightInfluencer;                                       // 0x0285(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _activated;                                              // 0x0286(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_E7S0[0x1];                                   // 0x0287(0x0001) Fix size for supers

	public:
		void SetActivated(bool activated);
		void OnRep_SpawnObject();
		bool IsActivated();
		class AActor* GetSpawnedObject();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.SearchableSpawnPoint
	 * Size -> 0x0008 (FullSize[0x0290] - InheritedSize[0x0288])
	 */
	class USearchableSpawnPoint : public UTileSpawnPoint
	{
	public:
		class UClass*                                              ActorToSpawn;                                            // 0x0288(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.SeasonEndPopupScreen
	 * Size -> 0x0000 (FullSize[0x0140] - InheritedSize[0x0140])
	 */
	class USeasonEndPopupScreen : public UGenericPopupScreen
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.SeasonEndRankRewardsPopupScreen
	 * Size -> 0x0000 (FullSize[0x0140] - InheritedSize[0x0140])
	 */
	class USeasonEndRankRewardsPopupScreen : public UGenericPopupScreen
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.SectionnedChargeableComponent
	 * Size -> 0x0008 (FullSize[0x0328] - InheritedSize[0x0320])
	 */
	class USectionnedChargeableComponent : public UChargeableComponent
	{
	public:
		unsigned char                                              _sections;                                               // 0x0320(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_ZO17[0x7];                                   // 0x0321(0x0007) MISSED OFFSET (PADDING)

	public:
		float GetSectionChargeRemaining();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.SelectiveVisibilityComponent
	 * Size -> 0x0008 (FullSize[0x0220] - InheritedSize[0x0218])
	 */
	class USelectiveVisibilityComponent : public USceneComponent
	{
	public:
		unsigned char                                              UnknownData_9N26[0x8];                                   // 0x0218(0x0008) Fix Super Size

	public:
		void Local_SetVisibility(bool bNewVisibility, bool bPropagateToChildren);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ShopCameraManager
	 * Size -> 0x0048 (FullSize[0x0278] - InheritedSize[0x0230])
	 */
	class AShopCameraManager : public AActor
	{
	public:
		struct FNamedButton                                        ReloadDBBtn;                                             // 0x0230(0x0018) Edit, NativeAccessSpecifierPrivate
		TArray<struct FRoleGenderCharacterRotation>                CharacterRotation;                                       // 0x0248(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPrivate
		TArray<struct FCharacterCameraTag>                         CatalogCharactersCamera;                                 // 0x0258(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPrivate
		TArray<struct FCharacterCameraTag>                         StoryCharactersCamera;                                   // 0x0268(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.shopmanager
	 * Size -> 0x09B0 (FullSize[0x09E0] - InheritedSize[0x0030])
	 */
	class Ushopmanager : public UObject
	{
	public:
		unsigned char                                              UnknownData_DN1C[0xA8];                                  // 0x0030(0x00A8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TWeakObjectPtr<class UDBDGameInstance>                     _gameInstance;                                           // 0x00D8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_TJM2[0x6C0];                                 // 0x00E0(0x06C0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBannerDataProcessor*                                _bannerDataProcessor;                                    // 0x07A0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class URecommendationsGenerator*                           _recommendationsGenerator;                               // 0x07A8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_FOM6[0x230];                                 // 0x07B0(0x0230) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.SkillCheck
	 * Size -> 0x01F8 (FullSize[0x02B0] - InheritedSize[0x00B8])
	 */
	class USkillCheck : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_V9SB[0xC8];                                  // 0x00B8(0x00C8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ADBDPlayer*                                          _owner;                                                  // 0x0180(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UChargeableInteractionDefinition*                    _currentInteraction;                                     // 0x0188(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_6AMO[0x48];                                  // 0x0190(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<ESkillCheckCustomType>                              _skillCheckTypesAffectedByWarningModifiers;              // 0x01D8(0x0010) Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_ABF9[0xC8];                                  // 0x01E8(0x00C8) MISSED OFFSET (PADDING)

	public:
		bool ShouldShowWarning();
		void Server_OnSkillCheckSuccess(const struct FSkillCheckResponse& SkillCheckResponse);
		void Server_OnSkillCheckFailure(const struct FSkillCheckResponse& SkillCheckResponse);
		void Server_DeactivateSkillCheck();
		void Server_ActivateSkillCheck(class UChargeableInteractionDefinition* Interaction, ESkillCheckCustomType skillCheckCustomType, const struct FSkillCheckDefinition& definition);
		void OnSkillCheckSuccessTrigger(bool Bonus, bool insane, ESkillCheckCustomType skillCheckCustomType, bool FailedCountedAsGood);
		void OnSkillCheckFailureTrigger(bool hadInput, bool insane, ESkillCheckCustomType skillCheckCustomType);
		void Multicast_SkillCheckResponse(const struct FSkillCheckResponse& SkillCheckResponse, bool executeOnlyOnNotControlled);
		void Multicast_OnTriggerCustomSkillCheck(class UChargeableInteractionDefinition* currentInteraction, ESkillCheckCustomType skillCheckCustomType, const class FString& ID, const class FString& salt, const struct FSkillCheckDefinition& definition);
		void Multicast_OnTriggerContinuousCustomSkillCheck(class UChargeableInteractionDefinition* currentInteraction, ESkillCheckCustomType skillCheckCustomType, const struct FSkillCheckDefinition& definition);
		void Multicast_DeactivateSkillCheck();
		void Multicast_ActivateSkillCheck(class UChargeableInteractionDefinition* Interaction, ESkillCheckCustomType skillCheckCustomType, const struct FSkillCheckDefinition& definition, bool executeOnlyOnNotControlled);
		bool IsOffCenterSkillCheck();
		bool IsHexSkillCheck(class ADBDPlayer* DBDPlayer);
		bool IsDisplayed();
		bool STATIC_CanSkillCheckTypeGrantScore(ESkillCheckCustomType Type);
		void Authority_OnSkillCheckTimeout();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.SlashableActivationSourceCollection
	 * Size -> 0x0040 (FullSize[0x00F8] - InheritedSize[0x00B8])
	 */
	class USlashableActivationSourceCollection : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_PVKM[0x40];                                  // 0x00B8(0x0040) MISSED OFFSET (PADDING)

	public:
		void STATIC_RemoveSource(class UObject* Source);
		void STATIC_ForceActivate(class UObject* WorldContextObject);
		void STATIC_AddSource(class UObject* Source);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.SlashableInterface
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class USlashableInterface : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.SlasherAnimInstance
	 * Size -> 0x0190 (FullSize[0x0450] - InheritedSize[0x02C0])
	 */
	class USlasherAnimInstance : public UAnimInstance
	{
	public:
		class FScriptMulticastDelegate                             OnFootTrapped;                                           // 0x02C0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		EIntroState                                                _introState;                                             // 0x02D0(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _isCrouched;                                             // 0x02D1(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _isRevvingChainsaw;                                      // 0x02D2(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _isAttackSuccessMontagePlaying;                          // 0x02D3(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _isCamOn;                                                // 0x02D4(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _isAttacking;                                            // 0x02D5(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _isAnyMontagePlaying;                                    // 0x02D6(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _isFrenzy;                                               // 0x02D7(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _isFrenzyCD;                                             // 0x02D8(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _isInParadise;                                           // 0x02D9(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _enableArmOverrideTier3;                                 // 0x02DA(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _isRingingBell;                                          // 0x02DB(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _isCarrying;                                             // 0x02DC(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_XQOA[0x3];                                   // 0x02DD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             _firstPersonCarryOffset;                                 // 0x02E0(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FVector                                             _firstPersonCarryOffsetLookingDown;                      // 0x02EC(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _isPassivePhaseWalking;                                  // 0x02F8(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _isActivePhaseWalking;                                   // 0x02F9(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _isInAir;                                                // 0x02FA(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _isVaultingToFall;                                       // 0x02FB(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _isSpectator;                                            // 0x02FC(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _firstPersonView;                                        // 0x02FD(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _isIdle;                                                 // 0x02FE(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _validSlasher;                                           // 0x02FF(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      _animDirection;                                          // 0x0300(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      _animSpeed;                                              // 0x0304(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      _animPitch;                                              // 0x0308(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      _animTurning;                                            // 0x030C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      _animYaw;                                                // 0x0310(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      _pelvisHeight;                                           // 0x0314(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      _idleTime;                                               // 0x0318(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                    _directionSwitch;                                        // 0x031C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FVector                                             _leftClearFrontSpaceVector;                              // 0x0320(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FVector                                             _rightClearFrontSpaceVector;                             // 0x032C(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FVector                                             _velocity;                                               // 0x0338(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FVector                                             _rightFootEffectorLocation;                              // 0x0344(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FVector                                             _leftFootEffectorLocation;                               // 0x0350(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FRotator                                            _meshRotation;                                           // 0x035C(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected
		TArray<class UAnimMontage*>                                _attackSuccessAnimations;                                // 0x0368(0x0010) Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected
		TArray<class UAnimMontage*>                                _camOnAnimations;                                        // 0x0378(0x0010) Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected
		class ASlasherPlayer*                                      _mySlasher;                                              // 0x0388(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FTagStateBool                                       _isVaultingToFallState;                                  // 0x0390(0x0030) Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		EInteractionAnimation                                      _interactionType;                                        // 0x03C0(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_AQUL[0xF];                                   // 0x03C1(0x000F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      _demogorgonTeleportDuration;                             // 0x03D0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_U3LQ[0x4];                                   // 0x03D4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UChargedAttackStateComponent*                        _demogorgonChargedAttackStateComponent;                  // 0x03D8(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _isDemogorgonCharging;                                   // 0x03E0(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_OC2I[0x3];                                   // 0x03E1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      _demogorgonChargingPercent;                              // 0x03E4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UOniDemonModeAttackStateComponent*                   _oniAttackState;                                         // 0x03E8(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _isOniCharging;                                          // 0x03F0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		EOniAttackType                                             _oniAttackType;                                          // 0x03F1(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_HXK2[0x2];                                   // 0x03F2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      _oniChargeDuration;                                      // 0x03F4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		EAttackSubstate                                            _previousAttackSubstate;                                 // 0x03F8(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		EAttackSubstate                                            _attackSubstate;                                         // 0x03F9(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_MF9G[0x6];                                   // 0x03FA(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UEvilWithinComponent*                                _evilWithinComponent;                                    // 0x0400(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_42YT[0x10];                                  // 0x0408(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UArmIKSensorComponent*                               _armIKSensorComponent;                                   // 0x0418(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_KJEC[0x10];                                  // 0x0420(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimEffectHandler*                                  _animEffectHandlerForSFX;                                // 0x0430(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAnimEffectHandler*                                  _animEffectHandlerForVFX;                                // 0x0438(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UClass*                                              _animEffectHandlerClassForSFX;                           // 0x0440(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UClass*                                              _animEffectHandlerClassForVFX;                           // 0x0448(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void SetIsCrouched(bool value);
		void CallOnFootTrapped();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.SlasherAttackPickerComponent
	 * Size -> 0x0000 (FullSize[0x00B8] - InheritedSize[0x00B8])
	 */
	class USlasherAttackPickerComponent : public UActorComponent
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.SlasherHitsWhileCarryingTrackerComponent
	 * Size -> 0x0068 (FullSize[0x0120] - InheritedSize[0x00B8])
	 */
	class USlasherHitsWhileCarryingTrackerComponent : public UActorComponent
	{
	public:
		unsigned char                                              _campersHitDuringLastCarry[0x50];                        // 0x00B8(0x0050) UNKNOWN PROPERTY: SetProperty
		unsigned char                                              UnknownData_SBQP[0x18];                                  // 0x0108(0x0018) MISSED OFFSET (PADDING)

	public:
		void OnPostAttack(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
		void OnPickup(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
		void OnAttack(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.SlasherMovementComponent
	 * Size -> 0x0080 (FullSize[0x0ED0] - InheritedSize[0x0E50])
	 */
	class USlasherMovementComponent : public UDBDCharacterMovementComponent
	{
	public:
		unsigned char                                              UnknownData_F81F[0x10];                                  // 0x0E50(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnHitLedgeEvent;                                         // 0x0E60(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		float                                                      OnHitLedgeEventCooldown;                                 // 0x0E70(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ABD8[0x5C];                                  // 0x0E74(0x005C) MISSED OFFSET (PADDING)

	public:
		void OnHitLedgeEvent__DelegateSignature();
		float GetBaseMaxSpeed();
		void DBD_SimulateHack_LocalKillerMaxSpeedMultiplier(float maxSpeedMultiplier);
		void DBD_KillerMaxSpeedMultiplier(float maxSpeedMultiplier);
		void Client_Debug_SetKillerMaxSpeedMultiplier(float maxSpeedMultiplier);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.SlasherOutlineUpdateStrategy
	 * Size -> 0x0048 (FullSize[0x0108] - InheritedSize[0x00C0])
	 */
	class USlasherOutlineUpdateStrategy : public UOutlineUpdateStrategy
	{
	public:
		class FScriptMulticastDelegate                             OnRevealed;                                              // 0x00C0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		struct FLinearColor                                        _nonRevealedColor;                                       // 0x00D0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                        _revealedColor;                                          // 0x00E0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                        _revealedColorForKiller;                                 // 0x00F0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_RLDT[0x8];                                   // 0x0100(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.SlasherPlayer
	 * Size -> 0x04D8 (FullSize[0x1630] - InheritedSize[0x1158])
	 */
	class ASlasherPlayer : public ADBDPlayer
	{
	public:
		unsigned char                                              UnknownData_BGO9[0x8];                                   // 0x1158(0x0008) Fix Super Size
		unsigned char                                              UnknownData_82G5[0x58];                                  // 0x1160(0x0058) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnOffensiveAction;                                       // 0x11B8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		struct FVector                                             PutDownTraceLocation;                                    // 0x11C8(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                DefaultSlasherPower;                                     // 0x11D4(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LoudNoiseDisplayTime;                                    // 0x11E0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             TargetPriorityFactor;                                    // 0x11E4(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ShouldDisplayAttackZones;                                // 0x11F0(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZAGM[0x7];                                   // 0x11F1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              CamperExposer;                                           // 0x11F8(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EKillerMoodInfluence                                       KillerMoodInfluence;                                     // 0x1200(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0FLC[0x7];                                   // 0x1201(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<EKillerAbilities>                                   KillerAbilities;                                         // 0x1208(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		class UKillerSoundCuesComponent*                           KillerSoundCuesComponent;                                // 0x1218(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ShowKillerPowerDebugInfo;                                // 0x1220(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       HasDamagedGeneratorSinceHook;                            // 0x1221(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RY0Q[0x6];                                   // 0x1222(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnStalkModeChangedEvent;                                 // 0x1228(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DCAN[0x18];                                  // 0x1238(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TWeakObjectPtr<class UAkComponent>                         _audioComponent;                                         // 0x1250(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UDBDNavModifierComponent*                            _terrorNavModifierComponent;                             // 0x1258(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UKillerBloodFXComponent*                             _bloodFXComponent;                                       // 0x1260(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      _slasherLightIntensity;                                  // 0x1268(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      _defaultAmountToSquish;                                  // 0x126C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_HN83[0x8];                                   // 0x1270(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class ADBDPlayer*, struct FTargetFocusTimer>          _stalkTimers;                                            // 0x1278(0x0050) Transient, Protected, NativeAccessSpecifierProtected
		class UStillnessTrackerComponent*                          _stillnessTracker;                                       // 0x12C8(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAimAssistComponent*                                 _aimAssistComponent;                                     // 0x12D0(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FDBDTimer                                           _recentlyCloakedTimer;                                   // 0x12D8(0x0028) Transient, Protected, NativeAccessSpecifierProtected
		struct FDBDTimer                                           _flashlightBlindEvasionScoreTimer;                       // 0x1300(0x0028) Transient, Protected, NativeAccessSpecifierProtected
		struct FDBDTimer                                           _flashlightBurnoutEvasionScoreTimer;                     // 0x1328(0x0028) Transient, Protected, NativeAccessSpecifierProtected
		TMap<class ADBDPlayer*, struct FAnimationMontageDescriptor> _predictedCamperHitMontages;                             // 0x1350(0x0050) Transient, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_Q5TV[0x10];                                  // 0x13A0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ULoudNoiseHUDIndicator*                              _loudNoiseIndicator;                                     // 0x13B0(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class USlasherHitsWhileCarryingTrackerComponent*           _hitsWhileCarryingTracker;                               // 0x13B8(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _stealthIncreaseRate;                                    // 0x13C0(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _stealthDecreaseRate;                                    // 0x13C4(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FDateTime                                           _stillnessStartTime;                                     // 0x13C8(0x0008) ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_7RPT[0x68];                                  // 0x13D0(0x0068) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTagStateBool                                       _isInStalkMode;                                          // 0x1438(0x0030) Net, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_SEIV[0xC0];                                  // 0x1468(0x00C0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       _isKilling;                                              // 0x1528(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int8_t                                                     _allowedKillCount;                                       // 0x1529(0x0001) Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int8_t                                                     _allowedKillAfterStrugglePhase;                          // 0x152A(0x0001) Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _allowedKillLastSurvivor;                                // 0x152B(0x0001) Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_TI4A[0x8];                                   // 0x152C(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    _cachedBloodlustTier;                                    // 0x1534(0x0004) Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_4QK1[0x4];                                   // 0x1538(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint32_t                                                   _killerPowerDebugFlags;                                  // 0x153C(0x0004) Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FGameplayTag                                        _presenceTag;                                            // 0x1540(0x000C) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_72XL[0x4];                                   // 0x154C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGameplayTagContainer                               _persistantStateTags;                                    // 0x1550(0x0020) Edit, NativeAccessSpecifierPrivate
		bool                                                       _enableKillerCrouchInput;                                // 0x1570(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _canStartAttackWhileCrouched;                            // 0x1571(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_SI0R[0x6];                                   // 0x1572(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ACamperPlayer*                                       _carriedCamper;                                          // 0x1578(0x0008) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UMoriComponent*                                      _moriComponent;                                          // 0x1580(0x0008) Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UFinisherMoriTrackerComponent*                       _finisherMoriTrackerComponent;                           // 0x1588(0x0008) Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UHitValidatorComponent*                              _hitValidator;                                           // 0x1590(0x0008) Edit, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UHitValidatorConfigurator*                           _hitValidationConfigurator;                              // 0x1598(0x0008) Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UDBDAttackerComponent*                               _attackerComponent;                                      // 0x15A0(0x0008) Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_NZR4[0x10];                                  // 0x15A8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EAttackType                                                _basicAttackType;                                        // 0x15B8(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_75S1[0x7];                                   // 0x15B9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UArmIKSensorComponent*                               _armIKSensorComponent;                                   // 0x15C0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class ACamperPlayer*                                       _survivorBeingKilled;                                    // 0x15C8(0x0008) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_9PS9[0x18];                                  // 0x15D0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UFirstPersonViewComponent*                           _firstPersonViewComponent;                               // 0x15E8(0x0008) Edit, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UKillerIntroComponent*                               _killerIntroComponent;                                   // 0x15F0(0x0008) Edit, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UKillerBlindingFXComponent*                          _blindingFXComponent;                                    // 0x15F8(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_5NXK[0x8];                                   // 0x1600(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UKillerRedStainUpdateStrategy*                       _redStainUpdateStrategy;                                 // 0x1608(0x0008) Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FName                                                _squishFactorParameter;                                  // 0x1610(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_C603[0x4];                                   // 0x161C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USceneComponent*                                     _attackZonePivot;                                        // 0x1620(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class USlasherStunnableComponent*                          _slasherStunnableComponent;                              // 0x1628(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		bool WasRecentlyCloaked();
		void UpdateRageTierEffect(int32_t previousTier, int32_t currentTier);
		void TriggerPutDownAnimation();
		void TriggerPickUpAnimation();
		void SpawnSlasherPower();
		bool ShouldApplyBloodlustSpeedModifier();
		void SetSurvivorBeingKilled(class ACamperPlayer* Survivor);
		void SetStalkTierWalkSpeedMultiplier(float stalkTierWalkSpeedMultiplier);
		void SetLightIntensity(float Intensity);
		void SetIsKilling(bool IsKilling);
		void SetIsHookingSurvivor(bool value);
		void SetGuidedAction(ESlasherGuidedAction action);
		void SetChainsawSprinting(bool chainsawSprinting);
		void SetCarriedCamper(class ACamperPlayer* camper);
		void SetAttackZonePivot(class USceneComponent* attackZonePivot);
		void SetAttackDetectionZoneSet(EAttackZoneSet attackZoneSet);
		void Server_SendAttackInput(bool Pressed);
		void PlayBloodHitsEffects();
		void OnSurvivorsLeftChanged(int32_t survivorRemaining);
		void OnSurvivorKilled(class ACamperPlayer* playerToKill, bool consumeKill, bool delayedSurvivorDeath);
		void OnSuccessfulInterruption(class ACamperPlayer* interruptedSurvivor);
		void OnStealthChanged(bool stealth);
		void OnStalkModeChangedEvent__DelegateSignature(bool IsInStalkMode);
		void OnStalkModeChangedCosmetic(bool stalkMode);
		void OnStalkModeChanged(bool stalkMode);
		void OnPerformingChargableInteraction(float Progress);
		void OnLoudNoiseTriggered(class AActor* originator, class AActor* instigatingActor, const struct FVector& Location, bool shouldTrack, float* audibleRange, bool isQuickAction, bool isDeceivingNoise);
		void OnLoudNoiseIndicatorDestroyed();
		void OnKillerAbilityUpdateActivate(EKillerAbilities killerAbility, float percent);
		void OnKillerAbilityEndDeactivate(EKillerAbilities killerAbility, bool Forced);
		void OnKillerAbilityEndActivate(EKillerAbilities killerAbility);
		void OnKillerAbilityBeginDeactivate(EKillerAbilities killerAbility, bool Forced);
		void OnKillerAbilityBeginActivate(EKillerAbilities killerAbility);
		void OnIsKillingSurvivorWithMoriUpdated(bool isKillingSurvivorWithMori);
		void OnDropCamperEnd(class ADBDPlayer* camper);
		void OnCamperHit(class ACamperPlayer* camper);
		void OnAttackStart(EAttackType attackType);
		void OnAttackFinish(EAttackType attackType);
		void Multicast_SetGuidedAction(ESlasherGuidedAction action);
		void Multicast_MergeLockOnDamageZones(bool enable);
		void Multicast_DisplayAttackZones(bool Display);
		void Multicast_Cheat_SetAttackDetectionZoneSet(EAttackZoneSet attackZoneSet);
		void MergeLockOnDamageZones(bool enable);
		bool Local_CancelAttack();
		bool IsWalkLocked();
		bool IsUncloaking();
		bool IsStunned();
		bool IsOfferingAllowingKill(class ACamperPlayer* camper);
		bool IsKilling();
		bool IsInterruptBlocked();
		bool IsImmuneToObservingPlayerDetection(class ADBDPlayer* observingPlayer);
		bool IsIdling();
		bool IsHooking();
		bool IsCrouchAvailable_BP();
		bool IsCloaking();
		bool IsChainsawSprinting();
		bool IsCarrying();
		bool IsAllowedToKill(class ACamperPlayer* camper);
		void IncrementInterruptBlock();
		bool HasPreLevelGenerationModifier(const class FName& modifierID);
		bool HasKillerAbility(EKillerAbilities killerAbility);
		class ACamperPlayer* GetSurvivorBeingKilled();
		struct FDateTime GetStillnessStartTime();
		float GetStealthRatio();
		float GetStalkTierWalkSpeedMultiplier();
		class USlasherMovementComponent* GetSlasherMovement();
		int32_t GetRageTier();
		struct FGameplayTag GetPresenceTag();
		struct FVector GetPlayerDropOffPoint();
		class ACamperPlayer* GetObsessionTarget();
		struct FRotator GetLookRotation();
		float GetLightIntensity();
		bool GetIsAttacking();
		ESlasherGuidedAction GetGuidedAction();
		float GetCurrentRotationYaw();
		class UChaserCharacterComponent* GetChaserCharacterComponent();
		TArray<class FName> GetCharacterCustomAnimTags();
		class ACamperPlayer* GetCarriedCamper();
		float GetBlindedPercent();
		float GetAnimDirection();
		void DisplayAttackZones(bool Display);
		void DecrementInterruptBlock();
		void DBD_SetAttackZones(EAttackZoneSet attackZoneSet);
		void DBD_MergeLockOnDamageZones(bool enable);
		void DBD_DisplayAttackZones(bool Display);
		void DBD_AllowKilling();
		void Cosmetic_OnPickUpEnd();
		void Cosmetic_OnDropCamperEnd();
		void Cosmetic_OnCancelCarry();
		void Client_RequestStun(EStunType stunType, class ADBDPlayer* stunner);
		bool CanSlashAttack_BP();
		bool CanPickupSurvivor();
		bool CanPerformKillerAbility(EKillerAbilities killerAbility);
		bool CanGainRage();
		bool CanEscapeCarry(class ACamperPlayer* Player);
		bool CancelAttackByInput();
		bool CanAttack_BP(EAttackType attackType);
		bool CanAttack(EAttackType attackType);
		bool CanAffectLocalPlayer();
		void BroadcastOnInstantTeleport();
		void BroadcastOffensiveAction();
		void Authority_SetInStalkMode(bool stalkMode, bool Forced);
		void Authority_HandleKillerInterruptingSurvivor(class ADBDPlayer* Target);
		void Authority_AttemptEscapeCarry(class ACamperPlayer* Player);
		void Authority_AllowKilling(int32_t numKills);
		void AttackInputReleased();
		void AttackInputPressed();
		void ActionKillerReleased();
		void ActionKillerPressed();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.SlasherStateMachine
	 * Size -> 0x0000 (FullSize[0x0130] - InheritedSize[0x0130])
	 */
	class USlasherStateMachine : public UPlayerStateMachine
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.SlasherStunnableComponent
	 * Size -> 0x0040 (FullSize[0x00F8] - InheritedSize[0x00B8])
	 */
	class USlasherStunnableComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_T0RR[0x40];                                  // 0x00B8(0x0040) MISSED OFFSET (PADDING)

	public:
		void Server_NotifyStunHasBeenProcessed();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.VaultDefinition
	 * Size -> 0x0040 (FullSize[0x0658] - InheritedSize[0x0618])
	 */
	class UVaultDefinition : public UInteractionDefinition
	{
	public:
		struct FGameplayTag                                        _vaultGameEvent;                                         // 0x0618(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FName                                                _feetOffGroundID;                                        // 0x0624(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FName                                                _feetOnGroundID;                                         // 0x0630(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      _allowedHeightDelta;                                     // 0x063C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      _animationPlayRate;                                      // 0x0640(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      _scaledElapsedTime;                                      // 0x0644(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCurveFloat*                                         _vaultSpeedCurve;                                        // 0x0648(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _isFall;                                                 // 0x0650(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_JIJP[0x7];                                   // 0x0651(0x0007) Fix size for supers

	public:
		bool ShouldLaunchCharacter(class ADBDPlayer* Player);
		bool IsWithinHeightDelta(class ADBDPlayer* Player);
		bool IsWindowVaultable();
		class UCurveFloat* GetSpeedCurveToUse();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.SlasherVaultDefinition
	 * Size -> 0x0068 (FullSize[0x06C0] - InheritedSize[0x0658])
	 */
	class USlasherVaultDefinition : public UVaultDefinition
	{
	public:
		struct FAnimationMontageDescriptor                         _fallMontageID;                                          // 0x0658(0x0020) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
		struct FAnimationMontageDescriptor                         _crouchMontageID;                                        // 0x0678(0x0020) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
		struct FAnimationMontageDescriptor                         _defaultMontageID;                                       // 0x0698(0x0020) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_57BE[0x8];                                   // 0x06B8(0x0008) MISSED OFFSET (PADDING)

	public:
		void OnMovementModeChanged(class ACharacter* Character, EMovementMode PrevMovementMode, unsigned char PreviousCustomMode);
		void OnMontageBlendingOut(class UAnimMontage* Montage, bool interrupted);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.SoftBanManager
	 * Size -> 0x0040 (FullSize[0x0070] - InheritedSize[0x0030])
	 */
	class USoftBanManager : public UObject
	{
	public:
		unsigned char                                              UnknownData_SM25[0x40];                                  // 0x0030(0x0040) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.SpawnElement
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class USpawnElement : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.SpecialEventGameplaySpawnerComponent
	 * Size -> 0x0020 (FullSize[0x00D8] - InheritedSize[0x00B8])
	 */
	class USpecialEventGameplaySpawnerComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_67E8[0x20];                                  // 0x00B8(0x0020) MISSED OFFSET (PADDING)

	public:
		void Multicast_OnComponentSpawned();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.SpecialEventLoadingScreen
	 * Size -> 0x0018 (FullSize[0x0138] - InheritedSize[0x0120])
	 */
	class USpecialEventLoadingScreen : public UScreenBase
	{
	public:
		unsigned char                                              UnknownData_4LUK[0x18];                                  // 0x0120(0x0018) MISSED OFFSET (PADDING)

	public:
		void OnLoadingTextTimerComplete();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.specialeventmanager
	 * Size -> 0x0478 (FullSize[0x04A8] - InheritedSize[0x0030])
	 */
	class Uspecialeventmanager : public UObject
	{
	public:
		unsigned char                                              UnknownData_I1C0[0x80];                                  // 0x0030(0x0080) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USpecialEventsContainer*                             _specialEventsContainer;                                 // 0x00B0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_9EPF[0x3F0];                                 // 0x00B8(0x03F0) MISSED OFFSET (PADDING)

	public:
		struct FTimespan STATIC_GetTimeTillPostEndDate(const struct FCombinedSpecialEventData& SpecialEventData);
		struct FTimespan STATIC_GetTimeTillMainEndDate(const struct FCombinedSpecialEventData& SpecialEventData);
		struct FTimespan STATIC_GetTimeSinceStartDate(const struct FCombinedSpecialEventData& SpecialEventData);
		ESpecialEventStatus STATIC_GetStatus(const struct FCombinedSpecialEventData& SpecialEventData);
		struct FDateTime STATIC_GetStartDate(const struct FCombinedSpecialEventData& SpecialEventData);
		bool STATIC_GetSpecialEvent(class UObject* WorldContextObject, const class FName& EventId, struct FCombinedSpecialEventData* outSpecialEventData);
		struct FDateTime STATIC_GetPostEndDate(const struct FCombinedSpecialEventData& SpecialEventData);
		struct FDateTime STATIC_GetMainEndDate(const struct FCombinedSpecialEventData& SpecialEventData);
		bool STATIC_GetEventTimeTillPostEndDate(const class FString& EventId, struct FTimespan* outDate);
		bool STATIC_GetEventTimeTillMainEndDate(const class FString& EventId, struct FTimespan* outDate);
		bool STATIC_GetEventTimeSinceStartDate(const class FString& EventId, struct FTimespan* outDate);
		bool STATIC_GetEventStartDate(const class FString& EventId, struct FDateTime* outDate);
		bool STATIC_GetEventPostEndDate(const class FString& EventId, struct FDateTime* outDate);
		bool STATIC_GetEventMainEndDate(const class FString& EventId, struct FDateTime* outDate);
		bool STATIC_GetCurrentSpecialEvent(class UObject* WorldContextObject, struct FCombinedSpecialEventData* outSpecialEventData);
		bool STATIC_GetCurrentMainSpecialEvent(class UObject* WorldContextObject, struct FCombinedSpecialEventData* outSpecialEventData);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.SpecialEventsContainer
	 * Size -> 0x0118 (FullSize[0x0148] - InheritedSize[0x0030])
	 */
	class USpecialEventsContainer : public UObject
	{
	public:
		unsigned char                                              UnknownData_L1GA[0x118];                                 // 0x0030(0x0118) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.SplashScreen
	 * Size -> 0x0018 (FullSize[0x0138] - InheritedSize[0x0120])
	 */
	class USplashScreen : public UScreenBase
	{
	public:
		unsigned char                                              UnknownData_B7GH[0x18];                                  // 0x0120(0x0018) MISSED OFFSET (PADDING)

	public:
		void UpdateLoadingProgression(const class FString& loadingProgression);
		void ShowSpecialEventVisual(const struct FSpecialEventUIInfo& EventInfo);
		void ShowSaveGamePopup();
		void ShowPressKeyState();
		void ShowLoadingState();
		void SetVersionText(const class FString& versionText);
		void OnSaveGamePopupComplete();
		void HidePressKeyState();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.SpringArmCameraTargetingStrategy
	 * Size -> 0x0000 (FullSize[0x0050] - InheritedSize[0x0050])
	 */
	class USpringArmCameraTargetingStrategy : public UBaseCameraTargetingStrategy
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.StadiaProfileDAL
	 * Size -> 0x0000 (FullSize[0x0088] - InheritedSize[0x0088])
	 */
	class UStadiaProfileDAL : public UPS4GRDKBaseProfileDAL
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.StadiaVirtualKeyboardManager
	 * Size -> 0x0038 (FullSize[0x0070] - InheritedSize[0x0038])
	 */
	class UStadiaVirtualKeyboardManager : public UGameInstanceSubsystem
	{
	public:
		unsigned char                                              UnknownData_45EB[0x38];                                  // 0x0038(0x0038) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.StalkedComponent
	 * Size -> 0x0078 (FullSize[0x0130] - InheritedSize[0x00B8])
	 */
	class UStalkedComponent : public UActorComponent
	{
	public:
		class FScriptMulticastDelegate                             OnBeingStalkedChanged;                                   // 0x00B8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		float                                                      _maxStalkPoints;                                         // 0x00C8(0x0004) Edit, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _stalkableWhileSightingStalker;                          // 0x00CC(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _isBeingStalked;                                         // 0x00CD(0x0001) Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_JVME[0x2];                                   // 0x00CE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UChargeableComponent*                                _stalkPointsChargeable;                                  // 0x00D0(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_H4TM[0x58];                                  // 0x00D8(0x0058) MISSED OFFSET (PADDING)

	public:
		void OnRep_MaxStalkPoints();
		void OnRep_IsBeingStalked();
		void OnBeingStalkedChanged__DelegateSignature(bool isBeingStalked);
		bool HasStalkPoints();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.StalkerComponent
	 * Size -> 0x0078 (FullSize[0x0130] - InheritedSize[0x00B8])
	 */
	class UStalkerComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_GE09[0x28];                                  // 0x00B8(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       _distributeStalkRate;                                    // 0x00E0(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _canStalkWhileInChase;                                   // 0x00E1(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_U8DU[0x6];                                   // 0x00E2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UStalkedComponent*>                           _playerStalkedComponents;                                // 0x00E8(0x0010) ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_UBNC[0x10];                                  // 0x00F8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UChargeableComponent*                                _stalkPointsChargeable;                                  // 0x0108(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_8MKG[0x20];                                  // 0x0110(0x0020) MISSED OFFSET (PADDING)

	public:
		void OnStalkPointsAdded__DelegateSignature(float stalkPoints);
		void OnPlayerBeingStalkedChanged(bool isBeingStalked);
		bool IsStalkingSomeone();
		bool HasMaxStalkPoints();
		float GetTotalStalkingPoints();
		float GetScoreMultiplier();
		float GetPercentStalkingPoints();
		float GetMaxStalkingPoints();
		bool CanStalk();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.StandDisplayable
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UStandDisplayable : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.StartLitActivationTimerRemainingCooldownElapsedIconStrategy
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UStartLitActivationTimerRemainingCooldownElapsedIconStrategy : public UBasePerkIconStrategy
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDLogo
	 * Size -> 0x0000 (FullSize[0x0230] - InheritedSize[0x0230])
	 */
	class ADBDLogo : public AActor
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.StartScreenBase
	 * Size -> 0x0000 (FullSize[0x0238] - InheritedSize[0x0238])
	 */
	class AStartScreenBase : public ALevelScriptActor
	{
	public:
		void TravelToMenu();
		void BeginDestroyTravelSequence();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.StartupInitializerInterface
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UStartupInitializerInterface : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.StateSpeedCurveApplier
	 * Size -> 0x0100 (FullSize[0x01B8] - InheritedSize[0x00B8])
	 */
	class UStateSpeedCurveApplier : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_93V9[0x100];                                 // 0x00B8(0x0100) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.StateTagUtilities
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UStateTagUtilities : public UBlueprintFunctionLibrary
	{
	public:
		void STATIC_RemoveStateTagToPlayer(class ADBDPlayer* Player, const struct FGameplayTag& Tag);
		void STATIC_RemoveStateTag(const struct FGameplayTag& Tag);
		bool STATIC_HasStateTag(const struct FGameplayTag& Tag);
		bool STATIC_HasAnyStateTags(const struct FGameplayTagContainer& Tags);
		bool STATIC_CurrentInteractionHasStateTag(class ADBDPlayer* Player, const struct FGameplayTag& Tag);
		bool STATIC_CurrentInteractionHasAnyStateTag(class ADBDPlayer* Player, const struct FGameplayTagContainer& Tags);
		void STATIC_AddStateTagToPlayer(class ADBDPlayer* Player, const struct FGameplayTag& Tag);
		void STATIC_AddStateTag(const struct FGameplayTag& Tag);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.StationaryPointLightComponent
	 * Size -> 0x0004 (FullSize[0x0400] - InheritedSize[0x03FC])
	 */
	class UStationaryPointLightComponent : public UPointLightComponent
	{
	public:
		unsigned char                                              UnknownData_YJEN[0x4];                                   // 0x03FC(0x0004) Fix Super Size

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.StationarySpotLightComponent
	 * Size -> 0x0000 (FullSize[0x0430] - InheritedSize[0x0430])
	 */
	class UStationarySpotLightComponent : public USpotLightComponent
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.StatusEffectCollectionComponent
	 * Size -> 0x0038 (FullSize[0x00F0] - InheritedSize[0x00B8])
	 */
	class UStatusEffectCollectionComponent : public UActorComponent
	{
	public:
		TArray<class UStatusEffect*>                               _array;                                                  // 0x00B8(0x0010) ExportObject, Net, ZeroConstructor, Transient, RepNotify, ContainsInstancedReference, NativeAccessSpecifierPrivate
		TArray<class UStatusEffect*>                               _local_oldArray;                                         // 0x00C8(0x0010) ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_F6J0[0x18];                                  // 0x00D8(0x0018) MISSED OFFSET (PADDING)

	public:
		void OnRep_Array();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.StatusEffectDataAsset
	 * Size -> 0x0000 (FullSize[0x0088] - InheritedSize[0x0088])
	 */
	class UStatusEffectDataAsset : public UGameplayModifierContainerDataAsset
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.StatusView
	 * Size -> 0x0070 (FullSize[0x02A0] - InheritedSize[0x0230])
	 */
	class AStatusView : public AActor
	{
	public:
		bool                                                       _isActive;                                               // 0x0230(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_FNNF[0x3];                                   // 0x0231(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    _level;                                                  // 0x0234(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      _percentageFill;                                         // 0x0238(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _isClockwiseTimer;                                       // 0x023C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_HBAL[0x5B];                                  // 0x023D(0x005B) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ADBDPlayer*                                          _localDBDPlayer;                                         // 0x0298(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void ResetView(class ADBDPlayer* DBDPlayer);
		void FireNotification(const struct FStatusViewSource& StatusViewSource);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.SteamProfileDAL
	 * Size -> 0x0000 (FullSize[0x0088] - InheritedSize[0x0088])
	 */
	class USteamProfileDAL : public UPlayerProfileDAL
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.StoreControllerSubsystem
	 * Size -> 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
	 */
	class UStoreControllerSubsystem : public UGameInstanceSubsystem
	{
	public:
		class UStoreDisplayStandController*                        _displayStandController;                                 // 0x0038(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.StoreDisplayStandController
	 * Size -> 0x0000 (FullSize[0x0120] - InheritedSize[0x0120])
	 */
	class UStoreDisplayStandController : public UDisplayStandController
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.StorefrontConfiguration
	 * Size -> 0x0050 (FullSize[0x0088] - InheritedSize[0x0038])
	 */
	class UStorefrontConfiguration : public UDataAsset
	{
	public:
		TMap<EStorefrontState, struct FStorefrontStateData>        States;                                                  // 0x0038(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.StoreScreen
	 * Size -> 0x0218 (FullSize[0x0338] - InheritedSize[0x0120])
	 */
	class UStoreScreen : public UScreenBase
	{
	public:
		unsigned char                                              UnknownData_TJBR[0x218];                                 // 0x0120(0x0218) MISSED OFFSET (PADDING)

	public:
		void OnUnlockWithCurrency(int32_t currencyId, const class FString& combinedItem);
		void OnUnlockDlc(const class FString& DLCId);
		void OnTabSelected(int32_t Index);
		void OnStorySelected();
		void OnStoreItemSelected(const class FString& ItemId);
		void OnStoreItemLinkSelected(const class FString& ItemId);
		void OnStoreCharacterSelected(int32_t characterIndex);
		void OnStoreCatalogCategorySelected(int32_t categoryIndex);
		void OnSearchInputChanged(const class FString& searchInput);
		void OnRotateCharacter(float mouseDistanceChange);
		void OnPromoCodeButtonClicked();
		void OnNotEnoughTokens();
		void OnMarketSlotButtonClick(int32_t slotIndex);
		void OnFiltersUpdated(bool All, bool rarityCommon, bool rarityUncommon, bool rarityRare, bool rarityVeryRare, bool rarityUltraRare, bool rarityArtifact, bool rarityLegendary, bool raritySpecialEvent, bool includeAllOwnedItems);
		void OnFeaturedStoreItemSelected(const class FString& ItemId, bool isOutfit);
		void OnFeaturedCharacterSelected(int32_t characterIndex);
		void OnFeaturedButtonSelected(int32_t linkIndex);
		void OnFeaturedBannerItemSelected(const class FString& ItemId, bool isOutfit);
		void OnFeaturedBannerDlcSelected(const class FString& DLCId);
		void OnEquipItem(const class FString& ItemId);
		void OnCatalogSelected();
		void OnBuyCurrencyBundle(int32_t Index);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.StreamVideoFactory
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UStreamVideoFactory : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.StreamVideoManager
	 * Size -> 0x00C0 (FullSize[0x00F0] - InheritedSize[0x0030])
	 */
	class UStreamVideoManager : public UObject
	{
	public:
		unsigned char                                              UnknownData_4BRW[0xC0];                                  // 0x0030(0x00C0) MISSED OFFSET (PADDING)

	public:
		void OnStreamVideoDone();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.StreamVideoPlayer
	 * Size -> 0x0098 (FullSize[0x02C8] - InheritedSize[0x0230])
	 */
	class AStreamVideoPlayer : public AActor
	{
	public:
		unsigned char                                              UnknownData_OS21[0x38];                                  // 0x0230(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMediaPlayer*                                        MediaPlayer;                                             // 0x0268(0x0008) Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UMediaSoundComponent*                                SoundComponent;                                          // 0x0270(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGStreamVideoWidget*                               StreamVideoWidget;                                       // 0x0278(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UStreamMediaSource*                                  StreamMediaSource;                                       // 0x0280(0x0008) Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAudioComponent*                                     _audioComponent;                                         // 0x0288(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_Z3LE[0x38];                                  // 0x0290(0x0038) MISSED OFFSET (PADDING)

	public:
		void OnVideoAssetLoaded();
		void OnSkipButtonTriggered();
		void OnMediaOpened(const class FString& OpenedUrl);
		void OnMediaClosed();
		void OnEndReached();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.StreamVideoScreenUMG
	 * Size -> 0x0020 (FullSize[0x0140] - InheritedSize[0x0120])
	 */
	class UStreamVideoScreenUMG : public UScreenBase
	{
	public:
		class UStreamVideoManager*                                 _streamVideoManager;                                     // 0x0120(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_GZQB[0x18];                                  // 0x0128(0x0018) MISSED OFFSET (PADDING)

	public:
		void OnCloseTriggered();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.StreamVideoSubsystem
	 * Size -> 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
	 */
	class UStreamVideoSubsystem : public UGameInstanceSubsystem
	{
	public:
		class UStreamVideoManager*                                 StreamVideoManager;                                      // 0x0038(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStreamVideoFactory*                                 StreamVideoFactory;                                      // 0x0040(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.StunnableInterface
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UStunnableInterface : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.SubscriptionRewardDataAsset
	 * Size -> 0x0050 (FullSize[0x0088] - InheritedSize[0x0038])
	 */
	class USubscriptionRewardDataAsset : public UPrimaryDataAsset
	{
	public:
		TMap<ESubscriptionRewardType, struct FSubscriptionRewardTypeData> Data;                                                    // 0x0038(0x0050) Edit, Protected, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.SubtitlesManager
	 * Size -> 0x0038 (FullSize[0x0070] - InheritedSize[0x0038])
	 */
	class USubtitlesManager : public UGameInstanceSubsystem
	{
	public:
		unsigned char                                              UnknownData_XCGW[0x38];                                  // 0x0038(0x0038) MISSED OFFSET (PADDING)

	public:
		int32_t STATIC_PostAkEventWithSubtitles(class UAkGameObject* Target, TArray<struct FAkEventWithSubtitle> akEventRandomizer, float maxSubtitleDistance, int32_t CallbackMask, const class FScriptDelegate& PostEventCallback, TArray<struct FAkExternalSourceInfo> ExternalSources, class UAkAudioEvent** akEventPlayed);
		bool STATIC_IsDebuggingSubtitles();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.SupplyCrateAnimInstance
	 * Size -> 0x0010 (FullSize[0x02E0] - InheritedSize[0x02D0])
	 */
	class USupplyCrateAnimInstance : public USleepingAnimInstance
	{
	public:
		class ASupplyCrateInteractable*                            _owningSupplyCrate;                                      // 0x02D0(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _isOpen;                                                 // 0x02D8(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _isBeingPriedOpen;                                       // 0x02D9(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _isAutoClosing;                                          // 0x02DA(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_0DJU[0x5];                                   // 0x02DB(0x0005) MISSED OFFSET (PADDING)

	public:
		void OnBeingPriedOpenStopped();
		void OnBeingPriedOpenStarted(class ADBDPlayer* Player);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.SupplyCrateInteractable
	 * Size -> 0x0118 (FullSize[0x0440] - InheritedSize[0x0328])
	 */
	class ASupplyCrateInteractable : public AInteractable
	{
	public:
		unsigned char                                              UnknownData_SDF4[0x38];                                  // 0x0328(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UChargeableComponent*                                _chargeableComponent;                                    // 0x0360(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UClass*                                              _containedCollectable;                                   // 0x0368(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FDBDTunableRowHandle                                _openInteractionSecondsToCharge;                         // 0x0370(0x0028) Edit, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class ACollectable*                                        _itemInSupplyCrate;                                      // 0x0398(0x0008) Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class USceneComponent*                                     _containingItemSpawnPoint;                               // 0x03A0(0x0008) Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class USceneComponent*                                     _itemDropPoint;                                          // 0x03A8(0x0008) Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _isOpen;                                                 // 0x03B0(0x0001) Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _isAutoClosing;                                          // 0x03B1(0x0001) Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_X5LF[0x3E];                                  // 0x03B2(0x003E) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDBDTunableRowHandle                                _crateSelfClosingTime;                                   // 0x03F0(0x0028) Edit, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FDBDTunableRowHandle                                _crateAutoCloseAnimationTime;                            // 0x0418(0x0028) Edit, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void OnRep_IsOpen();
		void OnRep_IsAutoClosing();
		void OnIsOpened();
		void OnIsClosing();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.SurveillancePerk
	 * Size -> 0x0008 (FullSize[0x03D0] - InheritedSize[0x03C8])
	 */
	class USurveillancePerk : public UPerk
	{
	public:
		float                                                      generatorRegressionStopRevealTime;                       // 0x03C8(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_30PJ[0x4];                                   // 0x03CC(0x0004) MISSED OFFSET (PADDING)

	public:
		void HandleGeneratorIsDamagedChanged(class AGenerator* Generator, class ADBDPlayer* Player);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.SurviveTimerScoreEventComponent
	 * Size -> 0x0030 (FullSize[0x00E8] - InheritedSize[0x00B8])
	 */
	class USurviveTimerScoreEventComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_52RM[0x30];                                  // 0x00B8(0x0030) MISSED OFFSET (PADDING)

	public:
		void Authority_OnGameStarted();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.SurvivorActivityData
	 * Size -> 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
	 */
	class USurvivorActivityData : public UDataAsset
	{
	public:
		TArray<struct FSurvivorActivity>                           _allPossibleActivities;                                  // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.SurvivorActivityIndicatorComponent
	 * Size -> 0x0158 (FullSize[0x0210] - InheritedSize[0x00B8])
	 */
	class USurvivorActivityIndicatorComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_XCW4[0xB8];                                  // 0x00B8(0x00B8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USurvivorActivityData*                               _activitiesDataAsset;                                    // 0x0170(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_SW86[0x30];                                  // 0x0178(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      _durationNeededToEnableUI;                               // 0x01A8(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_KFG9[0x64];                                  // 0x01AC(0x0064) MISSED OFFSET (PADDING)

	public:
		void OnPlayerPickedUp(class ADBDPlayer* picker);
		void OnPlayerImmobilizeStateChanged(ECamperImmobilizeState oldImmobilizeState, ECamperImmobilizeState newImmobilizeState);
		void OnPlayerDropped();
		void OnDamageStateChanged(ECamperDamageState oldDamageState, ECamperDamageState CurrentDamageState);
		void OnChargeableProgressChanged(class UChargeableComponent* ChargeableComponent, float TotalPercentComplete);
		void Multicast_OnCamperEscape();
		void HandleStartActivityIfStillInEffect(const struct FSurvivorActivity& activityViewInfo, const struct FGameplayTag& Tag);
		void Authority_OnCamperEscape(const struct FGameplayTag& GameplayTag, const struct FGameEventData& GameEventData);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.SurvivorAtlantaTutorialLevel
	 * Size -> 0x0010 (FullSize[0x0338] - InheritedSize[0x0328])
	 */
	class ASurvivorAtlantaTutorialLevel : public AAtlantaTutorialLevel
	{
	public:
		unsigned char                                              UnknownData_UVMQ[0x10];                                  // 0x0328(0x0010) MISSED OFFSET (PADDING)

	public:
		void SetSlasherPlayer(class ASlasherPlayer* SlasherPlayer);
		class ASlasherPlayer* GetSlasherPlayer();
		class ADBDAIPlayerController* GetSlasherAIPlayerController();
		class ACamperPlayer* GetCamperPlayer();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.SurvivorAttackableComponent
	 * Size -> 0x0028 (FullSize[0x00E0] - InheritedSize[0x00B8])
	 */
	class USurvivorAttackableComponent : public UAttackableComponent
	{
	public:
		unsigned char                                              UnknownData_NP13[0x28];                                  // 0x00B8(0x0028) MISSED OFFSET (PADDING)

	public:
		void Multicast_HitCosmetic_NonLocal(const struct FPlayerHitCosmeticParams& Params);
		void Multicast_HitCosmetic(const struct FPlayerHitCosmeticParams& Params);
		void Authority_HitCosmetic(class AActor* Attacker, EAttackType attackType, bool causeKO, bool IsWeaponHit);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.SurvivorAudioHandlerComponent
	 * Size -> 0x0020 (FullSize[0x0158] - InheritedSize[0x0138])
	 */
	class USurvivorAudioHandlerComponent : public UDBDPlayerAudioHandlerComponent
	{
	public:
		unsigned char                                              UnknownData_M7MH[0x20];                                  // 0x0138(0x0020) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.SurvivorBloodFXComponent
	 * Size -> 0x0000 (FullSize[0x00B8] - InheritedSize[0x00B8])
	 */
	class USurvivorBloodFXComponent : public UActorComponent
	{
	public:
		class UNiagaraComponent* SpawnBloodSpurts();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.SurvivorCameraLagStrategy
	 * Size -> 0x0060 (FullSize[0x0118] - InheritedSize[0x00B8])
	 */
	class USurvivorCameraLagStrategy : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_MDHP[0x60];                                  // 0x00B8(0x0060) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.SurvivorCollectableOutlineUpdateStrategy
	 * Size -> 0x0020 (FullSize[0x00E0] - InheritedSize[0x00C0])
	 */
	class USurvivorCollectableOutlineUpdateStrategy : public UOutlineUpdateStrategy
	{
	public:
		struct FLinearColor                                        _outlineColor;                                           // 0x00C0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FLinearColor                                        _nearlyConsumedColor;                                    // 0x00D0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.SurvivorDisconnectionComponent
	 * Size -> 0x0000 (FullSize[0x00B8] - InheritedSize[0x00B8])
	 */
	class USurvivorDisconnectionComponent : public UActorComponent
	{
	public:
		void Authority_OnPlayerDisconnected(class ADBDPlayer* Player);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.SurvivorHitCosmeticHandler
	 * Size -> 0x0028 (FullSize[0x0058] - InheritedSize[0x0030])
	 */
	class USurvivorHitCosmeticHandler : public UBaseReversibleInstantActionHandler
	{
	public:
		class UNiagaraComponent*                                   _bloodSpurts;                                            // 0x0030(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_9VG9[0x20];                                  // 0x0038(0x0020) MISSED OFFSET (PADDING)

	public:
		void OnMontageStarted(const struct FAnimationMontageDescriptor& animMontageID, float PlayRate);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.SurvivorHitSprintEffect
	 * Size -> 0x0000 (FullSize[0x0350] - InheritedSize[0x0350])
	 */
	class USurvivorHitSprintEffect : public UStatusEffect
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.SurvivorOutlineUpdateStrategy
	 * Size -> 0x0078 (FullSize[0x0138] - InheritedSize[0x00C0])
	 */
	class USurvivorOutlineUpdateStrategy : public UOutlineUpdateStrategy
	{
	public:
		struct FLinearColor                                        _inDangerColorForSurvivor;                               // 0x00C0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FLinearColor                                        _noRecoveryDyingColor;                                   // 0x00D0(0x0010) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FLinearColor                                        _fullRecoveryDyingColor;                                 // 0x00E0(0x0010) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FLinearColor                                        _saviourColorForSurvivor;                                // 0x00F0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FLinearColor                                        _colorForKiller;                                         // 0x0100(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UTexture*                                            _revealedGradient;                                       // 0x0110(0x0008) Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UTexture*                                            _nonRevealedGradient;                                    // 0x0118(0x0008) Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<struct FGameplayTag>                                _revealToKillerDurationTags;                             // 0x0120(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate
		float                                                      _revealToKillerLingerTimer;                              // 0x0130(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _trappedIconActive;                                      // 0x0134(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_8709[0x3];                                   // 0x0135(0x0003) MISSED OFFSET (PADDING)

	public:
		void SetTrappedIconActive(bool value);
		bool IsBlockingAuraReadingFromKiller(class ASlasherPlayer* killer);
		bool STATIC_IsActivelyHidingAuraFromKiller(class ACamperPlayer* Subject, class ASlasherPlayer* witness);
		TArray<class UGameplayModifierContainer*> STATIC_GetEffectsProtectingFromKillerAuraReading(class ACamperPlayer* Subject, class ASlasherPlayer* killer);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.SurvivorPlagueEffect
	 * Size -> 0x01F8 (FullSize[0x0548] - InheritedSize[0x0350])
	 */
	class USurvivorPlagueEffect : public UStatusEffect
	{
	public:
		unsigned char                                              UnknownData_XH2C[0x48];                                  // 0x0350(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      _sicknessAmount;                                         // 0x0398(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _sicknessCap;                                            // 0x039C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _vomitSlowDuration;                                      // 0x03A0(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _vomitSlowAmount;                                        // 0x03A4(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<float>                                              _sicknessThresholds;                                     // 0x03A8(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPrivate
		bool                                                       _wasRecentlyHitByVomit;                                  // 0x03B8(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_BCHU[0x7];                                   // 0x03B9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FString>                                      _nonNauseatingInteractions;                              // 0x03C0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_DXSC[0x18];                                  // 0x03D0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTunableStat                                        _sicknessGainPerSecondFromInfectedInteractable;          // 0x03E8(0x0080) Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_GWRD[0x90];                                  // 0x0468(0x0090) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       _debugMode;                                              // 0x04F8(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_EB49[0x3F];                                  // 0x04F9(0x003F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              _exposeMaximumSickSurvivorEffect;                        // 0x0538(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UClass*                                              _brokenMaximumSickSurvivorEffect;                        // 0x0540(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void RefreshSicknessGainValues();
		void OnSurvivorVomit_Aesthetic();
		void OnSurvivorBecomesInfected_Aesthetic();
		void OnSicknessCured_Aesthetic();
		void OnSicknessChanged_Aesthetic(float newSickness);
		void OnRep_SicknessAmount();
		void OnMaxSicknessReached_Aesthetic();
		void OnHitByVomit(bool isSuperVomit);
		void Multicast_OnSurvivorVomit();
		void Multicast_OnSurvivorBecomesInfected();
		void Multicast_OnSicknessCured();
		void Multicast_OnSicknessChanged(float newSickness);
		void Multicast_OnMaxSicknessReached();
		void Multicast_AddOnScreenDebugMessage(uint64_t Key, float Duration, const struct FColor& DisplayColor, const class FString& debugMessage);
		bool IsInfected();
		bool IsDebugModeActive();
		bool HasMaxLevelSickness();
		TArray<float> GetSicknessThresholds();
		float GetSicknessPercentage();
		unsigned char GetSicknessLevel();
		float GetSicknessAmount();
		unsigned char GetMaxSicknessLevel();
		void Authority_ResetSickness(float newSickness);
		void Authority_OnHitByVomitProjectileAesthetic();
		void Authority_OnHitByVomitProjectile(float sicknessToAdd);
		void Authority_OnHitBySuperVomitProjectile();
		void Authority_InfectInteractable(class AInteractable* Interactable);
		void Authority_AddSickness(float sicknessToAdd);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.SurvivorStatusInterface
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class USurvivorStatusInterface : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.SwitchProfileDAL
	 * Size -> 0x0000 (FullSize[0x0088] - InheritedSize[0x0088])
	 */
	class USwitchProfileDAL : public UPlayerProfileDAL
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.TallyScreen
	 * Size -> 0x00F0 (FullSize[0x0210] - InheritedSize[0x0120])
	 */
	class UTallyScreen : public UScreenBase
	{
	public:
		unsigned char                                              UnknownData_LTWH[0xF0];                                  // 0x0120(0x00F0) MISSED OFFSET (PADDING)

	public:
		void OnSpectateButtonClick();
		void OnShowSlasherInfos();
		void OnReportPlayerButtonClick(const class FString& playerID);
		void OnRateMatch(int32_t rateValue);
		void OnPlayerOptionClick(const class FString& krakenId, const class FString& playerID, unsigned char Option);
		void OnPlayerInfoClick(const class FString& playerID);
		void OnLevelingSequenceComplete();
		void OnLeaveButtonClick();
		void OnCustomerSupportButtonClick();
		void OnBloodwebButtonClick();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.TallyUIUtilities
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UTallyUIUtilities : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.TeachableTooltipWidget
	 * Size -> 0x0020 (FullSize[0x0390] - InheritedSize[0x0370])
	 */
	class UTeachableTooltipWidget : public UBaseTooltipWidget
	{
	public:
		class UTextBlock*                                          SubTitleLabel;                                           // 0x0370(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              HeaderSmoke;                                             // 0x0378(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGHtmlRichText*                                    EffectText;                                              // 0x0380(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGHtmlRichText*                                    AvailabilityText;                                        // 0x0388(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.TeamworkIconStrategy
	 * Size -> 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
	 */
	class UTeamworkIconStrategy : public UBasePerkIconStrategy
	{
	public:
		unsigned char                                              UnknownData_4XGT[0x8];                                   // 0x0038(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.TerrorRadiusIndicatorWidget
	 * Size -> 0x0008 (FullSize[0x0388] - InheritedSize[0x0380])
	 */
	class UTerrorRadiusIndicatorWidget : public UNoiseIndicatorWidget
	{
	public:
		float                                                      _anchorY;                                                // 0x0380(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_Y169[0x4];                                   // 0x0384(0x0004) MISSED OFFSET (PADDING)

	public:
		void SetSoundDistancePercentage(float distancePercentage);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.TickInEditorSkeletalMesh
	 * Size -> 0x0000 (FullSize[0x02B8] - InheritedSize[0x02B8])
	 */
	class ATickInEditorSkeletalMesh : public ASkeletalMeshActor
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.TileBank
	 * Size -> 0x0100 (FullSize[0x0130] - InheritedSize[0x0030])
	 */
	class UTileBank : public UObject
	{
	public:
		unsigned char                                              UnknownData_0DO9[0xF0];                                  // 0x0030(0x00F0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class ATile*>                                       _allTileBlueprints;                                      // 0x0120(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.TileEventComponent
	 * Size -> 0x0010 (FullSize[0x00C8] - InheritedSize[0x00B8])
	 */
	class UTileEventComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_TXB7[0x10];                                  // 0x00B8(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.TileMatrix
	 * Size -> 0x0058 (FullSize[0x0088] - InheritedSize[0x0030])
	 */
	class UTileMatrix : public UObject
	{
	public:
		TArray<struct FArrayOfATile>                               _matrix;                                                 // 0x0030(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		TArray<class ATile*>                                       _tiles;                                                  // 0x0040(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		TArray<class ATile*>                                       _extraTiles;                                             // 0x0050(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		class AActor*                                              _basementActor;                                          // 0x0060(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<struct FQuadrantInfo>                               _quadInfoArray;                                          // 0x0068(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		TArray<struct FArrayOfInt32>                               _quadIndexMatrix;                                        // 0x0078(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.TileSpawnPointSelector
	 * Size -> 0x0018 (FullSize[0x0230] - InheritedSize[0x0218])
	 */
	class UTileSpawnPointSelector : public USceneComponent
	{
	public:
		TArray<struct FSelectableTileSpawnPoint>                   _tileSpawnPoints;                                        // 0x0218(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3UJ8[0x8];                                   // 0x0228(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.TileVisitedAnalyticsComponent
	 * Size -> 0x0050 (FullSize[0x0108] - InheritedSize[0x00B8])
	 */
	class UTileVisitedAnalyticsComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_X0NI[0x50];                                  // 0x00B8(0x0050) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.TimerGate
	 * Size -> 0x0010 (FullSize[0x0258] - InheritedSize[0x0248])
	 */
	class ATimerGate : public AGate
	{
	public:
		float                                                      _currentTime;                                            // 0x0248(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UNHC[0xC];                                   // 0x024C(0x000C) MISSED OFFSET (PADDING)

	public:
		void Update(float DeltaTime);
		void SetValues(float TimerDuration, float RushGain, float RushBlockDuration);
		void Rushed(bool success);
		void Reset();
		void RemoveTime(float Time);
		void AddTime(float Time);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.TimerGateDecrease
	 * Size -> 0x0008 (FullSize[0x0238] - InheritedSize[0x0230])
	 */
	class ATimerGateDecrease : public AActor
	{
	public:
		class ATimerGate*                                          TimerGate;                                               // 0x0230(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void Update(float DeltaTime);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.DBDTimeTravelManager
	 * Size -> 0x0070 (FullSize[0x00A0] - InheritedSize[0x0030])
	 */
	class UDBDTimeTravelManager : public UObject
	{
	public:
		unsigned char                                              UnknownData_O1AU[0x70];                                  // 0x0030(0x0070) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ToastNotificationScreen
	 * Size -> 0x0048 (FullSize[0x0168] - InheritedSize[0x0120])
	 */
	class UToastNotificationScreen : public UScreenBase
	{
	public:
		unsigned char                                              UnknownData_NJCS[0x48];                                  // 0x0120(0x0048) MISSED OFFSET (PADDING)

	public:
		void OnPromptSelected(int32_t notificationId);
		void OnNotificationDisplayEnd(int32_t notificationId);
		void OnButtonSelected(int32_t buttonId, int32_t notificationId);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.TokenCounter
	 * Size -> 0x0028 (FullSize[0x0058] - InheritedSize[0x0030])
	 */
	class UTokenCounter : public UObject
	{
	public:
		unsigned char                                              UnknownData_RV6U[0x18];                                  // 0x0030(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    _tokenCount;                                             // 0x0048(0x0004) BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    _maxTokenCount;                                          // 0x004C(0x0004) Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_E7XW[0x8];                                   // 0x0050(0x0008) MISSED OFFSET (PADDING)

	public:
		void OnRep_TokenCount(int32_t oldCount);
		int32_t GetTokenCount();
		int32_t GetMaxTokenCount();
		void Authority_SetTokenCount(int32_t value);
		void Authority_SetMaxTokenCount(int32_t value);
		void Authority_IncrementToken();
		void Authority_DecrementToken();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.TokenProvider
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UTokenProvider : public UInterface
	{
	public:
		class UTokenCounter* GetTokenProvider();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ToolBoxInterface
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UToolBoxInterface : public UInterface
	{
	public:
		class UChargerComponent* GetChargerComponent();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.TooltipScreenUMG
	 * Size -> 0x0020 (FullSize[0x0140] - InheritedSize[0x0120])
	 */
	class UTooltipScreenUMG : public UScreenBase
	{
	public:
		class UBaseTooltipWidget*                                  _tooltipWidget;                                          // 0x0120(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_PV6T[0x18];                                  // 0x0128(0x0018) MISSED OFFSET (PADDING)

	public:
		void OnCloseTriggered();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.TormentAttackDamageCooldownInterface
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UTormentAttackDamageCooldownInterface : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.Totem
	 * Size -> 0x0138 (FullSize[0x0460] - InheritedSize[0x0328])
	 */
	class ATotem : public AInteractable
	{
	public:
		unsigned char                                              UnknownData_T1YJ[0x8];                                   // 0x0328(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnTotemBound;                                            // 0x0330(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MD4X[0x18];                                  // 0x0340(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FLinearColor                                        _boonAuraRevealColor;                                    // 0x0358(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<class UTotemBoundPerk*>                             _boundPerks;                                             // 0x0368(0x0010) ExportObject, Net, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
		ETotemState                                                _totemState;                                             // 0x0378(0x0001) Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_M8YH[0x7];                                   // 0x0379(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDBDTunableRowHandle                                _baseBoonTotemBlessingRange;                             // 0x0380(0x0028) Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FDBDTunableRowHandle                                _baseBoonTotemAuraRevealRange;                           // 0x03A8(0x0028) Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_8EOO[0x10];                                  // 0x03D0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAIPerceptionStimuliSourceComponent*                 _perceptionStimuliComponent;                             // 0x03E0(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UBlockableComponent*                                 _totemBlockableComponent;                                // 0x03E8(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_LEXC[0x10];                                  // 0x03F0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ULocalPlayerTrackerComponent*                        _localPlayerTracker;                                     // 0x0400(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UActivatorComponent*                                 _activatorComponent;                                     // 0x0408(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UGameplayTagContainerComponent*                      _objectState;                                            // 0x0410(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class USceneComponent*                                     _interactionsAttachPoint;                                // 0x0418(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UTotemOutlineUpdateStrategy*                         _totemOutlineUpdateStrategy;                             // 0x0420(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_HJBP[0x30];                                  // 0x0428(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       _canBeBoundToBoonPerk;                                   // 0x0458(0x0001) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_MBX4[0x7];                                   // 0x0459(0x0007) MISSED OFFSET (PADDING)

	public:
		void OnUnblockTotemCosmetic(class ADBDPlayer* Player);
		void OnTotemStateChanged(ETotemState oldTotemState, ETotemState newTotemState);
		void OnTotemBlockChanged();
		void OnRep_TotemState(ETotemState oldTotemState);
		void OnLocallyObservedChanged();
		void OnCleanseTotem(class ATotem* Totem, ETotemState oldTotemState);
		void OnBlockTotemCosmetic(class ADBDPlayer* Player);
		bool IsTotemBlockedForPlayer(class ADBDPlayer* Player);
		bool IsBoundToPerk();
		ETotemState GetTotemState();
		class UInteractor* GetMainInteractor();
		class UChargeableInteractionDefinition* GetCleanseTotemInteraction();
		float GetBoonTotemBlessingRange();
		float GetBoonTotemAuraRevealRange();
		struct FLinearColor GetBoonAuraRevealColor();
		class UChargeableInteractionDefinition* GetBlessTotemInteraction();
		class UAkComponent* GetAkAudioComponent();
		void BindingDelegate__DelegateSignature();
		void Authority_UnbindFromPerk(class UTotemBoundPerk* Perk);
		void Authority_UnbindFromAllPerks();
		void Authority_Cleanse();
		void Authority_BindToPerk(class UTotemBoundPerk* Perk);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.TotemOutlineUpdateStrategy
	 * Size -> 0x0028 (FullSize[0x0160] - InheritedSize[0x0138])
	 */
	class UTotemOutlineUpdateStrategy : public USourceBasedOutlineUpdateStrategy
	{
	public:
		struct FLinearColor                                        _revealedColorToSurvivor;                                // 0x0138(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FLinearColor                                        _boonTotemRevealedColorToSurvivor;                       // 0x0148(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UCurveLinearColor*                                   _revealedColorToKiller;                                  // 0x0158(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		struct FLinearColor GetRevealColorToSurvivor();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.TriggerableActivatorComponent
	 * Size -> 0x0040 (FullSize[0x00F8] - InheritedSize[0x00B8])
	 */
	class UTriggerableActivatorComponent : public UActorComponent
	{
	public:
		unsigned char                                              _triggerableClass[0x30];                                 // 0x00B8(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		TArray<class UTriggerableWorldObjectComponent*>            _triggerables;                                           // 0x00E8(0x0010) ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate

	public:
		void Authority_OnLevelReadyToPlay();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.TriggerableWorldObjectComponent
	 * Size -> 0x0098 (FullSize[0x0150] - InheritedSize[0x00B8])
	 */
	class UTriggerableWorldObjectComponent : public UActorComponent
	{
	public:
		class FScriptMulticastDelegate                             OnTriggered;                                             // 0x00B8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnTriggerReset;                                          // 0x00C8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		float                                                      _triggerResetTime;                                       // 0x00D8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      _randomChance;                                           // 0x00DC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      _rollFrequency;                                          // 0x00E0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_GXWP[0xC];                                   // 0x00E4(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TWeakObjectPtr<class UPrimitiveComponent>                  _conditionalTriggerVolume;                               // 0x00F0(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              _conditionalVolumeOverlappingPlayers[0x50];              // 0x00F8(0x0050) UNKNOWN PROPERTY: SetProperty
		TWeakObjectPtr<class UPrimitiveComponent>                  _guaranteedTriggerVolume;                                // 0x0148(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void SetGuaranteedTriggerVolume(class UPrimitiveComponent* Volume);
		void SetConditionalTriggerVolume(class UPrimitiveComponent* Volume);
		void Multicast_OnTriggerReset();
		void Multicast_OnTriggered(class AActor* Instigator, const struct FVector& triggerLocation);
		void GetConditionalModifiers(class ADBDPlayer* Player, float* outAdditive, float* outMultiplicative);
		bool CanPlayerTriggerGuaranteed(class ADBDPlayer* Player);
		bool CanPlayerTriggerConditional(class ADBDPlayer* Player);
		void Authority_Trigger(class AActor* Instigator, const struct FVector& triggerLocation);
		void Authority_ResetTrigger();
		void Authority_GuaranteedVolumeOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* Other, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const struct FHitResult& HitResult);
		void Authority_ConditionalVolumeEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* Other, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex);
		void Authority_ConditionalVolumeBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* Other, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const struct FHitResult& HitResult);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.TriplanarDecalComponent
	 * Size -> 0x0048 (FullSize[0x0260] - InheritedSize[0x0218])
	 */
	class UTriplanarDecalComponent : public USceneComponent
	{
	public:
		unsigned char                                              UnknownData_T3KN[0x4];                                   // 0x0218(0x0004) Fix Super Size
		float                                                      Height;                                                  // 0x021C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaskIntensity;                                           // 0x0220(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KCTB[0x4];                                   // 0x0224(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTexture2D*                                          TopTexture;                                              // 0x0228(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          BottomTexture;                                           // 0x0230(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          MaskTexture;                                             // 0x0238(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EDetailMode                                                MinQualitySetting;                                       // 0x0240(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8RAB[0x7];                                   // 0x0241(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UDecalComponent*                                     _triPlanarDecal;                                         // 0x0248(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UClass*                                              _triPlanarDecalClass;                                    // 0x0250(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UMaterial*                                           _decalMaterial;                                          // 0x0258(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void UpdateTriplanarDecal();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.TutorialAssetLibrary
	 * Size -> 0x0010 (FullSize[0x00C0] - InheritedSize[0x00B0])
	 */
	class UTutorialAssetLibrary : public UAssetLibrary
	{
	public:
		unsigned char                                              UnknownData_OGNR[0x10];                                  // 0x00B0(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.TutorialEndGameComponent
	 * Size -> 0x0008 (FullSize[0x0160] - InheritedSize[0x0158])
	 */
	class UTutorialEndGameComponent : public UEndGameComponent
	{
	public:
		float                                                      _timerMaxCompletionPercentage;                           // 0x0158(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_1FS6[0x4];                                   // 0x015C(0x0004) MISSED OFFSET (PADDING)

	public:
		void SetTimerMaxCompletionPercentage(float Percentage);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.TutorialFunctionLibrary
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UTutorialFunctionLibrary : public UBlueprintFunctionLibrary
	{
	public:
		bool STATIC_IsInTutorial(class UObject* WorldContextObject);
		class UTutorialObjectiveController* STATIC_GetTutorialObjectiveController(class UObject* WorldContextObject);
		class UTutorialNotificationController* STATIC_GetTutorialNotificationController(class UObject* WorldContextObject);
		class UTutorialHighlightController* STATIC_GetTutorialHighlightController(class UObject* WorldContextObject);
		class ATutorialGameState* STATIC_GetTutorialGameState(class UObject* WorldContextObject);
		class ATutorialGameMode* STATIC_GetTutorialGameMode(class UObject* WorldContextObject);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.TutorialGameMode
	 * Size -> 0x0038 (FullSize[0x03B0] - InheritedSize[0x0378])
	 */
	class ATutorialGameMode : public ADBDBaseMatchGameMode
	{
	public:
		unsigned char                                              UnknownData_00EN[0x10];                                  // 0x0378(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTutorialObjectiveController*                        _tutorialObjectiveController;                            // 0x0388(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UTutorialNotificationController*                     _tutorialNotificationController;                         // 0x0390(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UTutorialHighlightController*                        _tutorialHighlightController;                            // 0x0398(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UAtlantaTutorialPlayerHudController*                 _atlantaTutorialPlayerHudController;                     // 0x03A0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_J2OE[0x8];                                   // 0x03A8(0x0008) MISSED OFFSET (PADDING)

	public:
		void SetEscapeGenerators(TArray<class AGenerator*> escapeGenerators, int32_t requiredActivationCount);
		void SetEscapeActivated();
		void OnCanStartAtlantaTutorialChange__DelegateSignature(bool canStartTutorial);
		class UTutorialObjectiveController* GetTutorialObjectiveController();
		class UTutorialNotificationController* GetTutorialNotificationController();
		class UTutorialHighlightController* GetTutorialHighlightController();
		class UAtlantaTutorialPlayerHudController* GetAtlantaTutorialPlayerHudController();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.TutorialGameState
	 * Size -> 0x00A0 (FullSize[0x0908] - InheritedSize[0x0868])
	 */
	class ATutorialGameState : public ADBDGameState
	{
	public:
		class FScriptMulticastDelegate                             OnCurrentTutorialStepChanged;                            // 0x0868(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RGY1[0x38];                                  // 0x0878(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       _forceHatchVisible;                                      // 0x08B0(0x0001) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_COSE[0x57];                                  // 0x08B1(0x0057) MISSED OFFSET (PADDING)

	public:
		void TutorialEndReached();
		void SetForcedHatchVisibility(bool IsHatchVisible);
		void SetEscapeRequirementsVisibility(bool IsVisible);
		void SetCurrentTutorialStep(ETutorialStep step);
		void OnCurrentTutorialStepChanged__DelegateSignature(ETutorialStep step);
		bool IsTutorialStarted();
		ETutorialStep GetCurrentTutorialStep();
		void CompleteLocallyControlledCharacterIntros();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.TutorialHighlightController
	 * Size -> 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
	 */
	class UTutorialHighlightController : public UObject
	{
	public:
		unsigned char                                              UnknownData_W1RX[0x18];                                  // 0x0030(0x0018) MISSED OFFSET (PADDING)

	public:
		void SetHudComponentHighlight(EHudComponent hudComponent, bool Show);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.TutorialNotificationController
	 * Size -> 0x0080 (FullSize[0x00B0] - InheritedSize[0x0030])
	 */
	class UTutorialNotificationController : public UObject
	{
	public:
		class FScriptMulticastDelegate                             OnBlockingNotificationDismissedEvent;                    // 0x0030(0x0010) ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UCJE[0x70];                                  // 0x0040(0x0070) MISSED OFFSET (PADDING)

	public:
		void ShowNotification(const class FName& tutorialNotificationId, float Duration);
		void ShowBlockingNotification(const class FName& tutorialNotificationId);
		void OnBlockingNotificationDismissedEvent__DelegateSignature(const class FName& tutorialNotificationId);
		void OnBlockingNotificationDismissed();
		void HideNotification(bool removeAllCachedNotifs);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.TutorialObjectiveController
	 * Size -> 0x00B0 (FullSize[0x00E0] - InheritedSize[0x0030])
	 */
	class UTutorialObjectiveController : public UObject
	{
	public:
		unsigned char                                              UnknownData_6LS0[0xB0];                                  // 0x0030(0x00B0) MISSED OFFSET (PADDING)

	public:
		void RemoveObjective(const class FName& tutorialObjectiveId);
		void RemoveAllObjectives();
		void CompleteObjective(const class FName& tutorialObjectiveId, bool removeAfterCompletion);
		void AddObjective(const class FName& tutorialObjectiveId);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.TutorialsUtilities
	 * Size -> 0x0038 (FullSize[0x0268] - InheritedSize[0x0230])
	 */
	class ATutorialsUtilities : public AActor
	{
	public:
		class FScriptMulticastDelegate                             OnTutorialUIReady;                                       // 0x0230(0x0010) ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_9RFY[0x28];                                  // 0x0240(0x0028) MISSED OFFSET (PADDING)

	public:
		void TriggerTutorialHudFadeOut();
		void TriggerTutorialHudFadeIn();
		class ATutorialsUtilities* STATIC_GetTutorialsUtilities(class UObject* WorldContextObject);
		void STATIC_DestroyAI(class AAIController* AIController);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.AnimationWidget
	 * Size -> 0x0008 (FullSize[0x02A0] - InheritedSize[0x0298])
	 */
	class UAnimationWidget : public UUserWidget
	{
	public:
		float                                                      _playRate;                                               // 0x0298(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_KERZ[0x4];                                   // 0x029C(0x0004) MISSED OFFSET (PADDING)

	public:
		void SetPlayRate(float Rate);
		float GetPlayRate();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UIController
	 * Size -> 0x0030 (FullSize[0x0060] - InheritedSize[0x0030])
	 */
	class UUIController : public UObject
	{
	public:
		class UGFxObject*                                          m_UIControllerObj;                                       // 0x0030(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UMobileBaseUserWidget*                               _atlantaLoadingWidget;                                   // 0x0038(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_NZ74[0x20];                                  // 0x0040(0x0020) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UIScreenshotTool
	 * Size -> 0x0000 (FullSize[0x0380] - InheritedSize[0x0380])
	 */
	class AUIScreenshotTool : public ACharacterTool
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGInventoryItemButton
	 * Size -> 0x0000 (FullSize[0x0678] - InheritedSize[0x0678])
	 */
	class UUMGInventoryItemButton : public UUMGLoadoutItemButton
	{
	public:
		void UpdateItemButtonProgressBar(class ACollectable* Item, class UProgressBar* itemProgressBar);
		void UpdateItemButton(class ACollectable* Item);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGAddonButton
	 * Size -> 0x0000 (FullSize[0x0678] - InheritedSize[0x0678])
	 */
	class UUMGAddonButton : public UUMGInventoryItemButton
	{
	public:
		void UpdateAddonButton(class UItemAddon* addon);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGAlertsWidget
	 * Size -> 0x00C0 (FullSize[0x03F8] - InheritedSize[0x0338])
	 */
	class UUMGAlertsWidget : public UMobileBaseUserWidget
	{
	public:
		unsigned char                                              AtlantaScoreAlertComponentClass[0x30];                   // 0x0338(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              AtlantaStatusEffectAlertComponentClass[0x30];            // 0x0368(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		class UCanvasPanel*                                        CanvasPanelAlerts;                                       // 0x0398(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      IdleTime;                                                // 0x03A0(0x0004) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_5Y2Z[0x44];                                  // 0x03A4(0x0044) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              _scoreAlertClass;                                        // 0x03E8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UClass*                                              _statusEffectAlertClass;                                 // 0x03F0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGAtlantaBaseEventsTemplate
	 * Size -> 0x0000 (FullSize[0x0338] - InheritedSize[0x0338])
	 */
	class UUMGAtlantaBaseEventsTemplate : public UMobileBaseUserWidget
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGAtlantaBonusACEventTemplate
	 * Size -> 0x0028 (FullSize[0x0360] - InheritedSize[0x0338])
	 */
	class UUMGAtlantaBonusACEventTemplate : public UUMGAtlantaBaseEventsTemplate
	{
	public:
		class UUMGAtlCurrencyStorefrontWidget*                     currencyStorefrontWidget;                                // 0x0338(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FString                                              LastPackSmallIconPath;                                   // 0x0340(0x0010) Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      InitialSize;                                             // 0x0350(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      AugmentedSize;                                           // 0x0354(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                    MaxNumberOfPacksToShowBigger;                            // 0x0358(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_KSRQ[0x4];                                   // 0x035C(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGAtlantaCalendarEventsTemplate
	 * Size -> 0x0008 (FullSize[0x0340] - InheritedSize[0x0338])
	 */
	class UUMGAtlantaCalendarEventsTemplate : public UUMGAtlantaBaseEventsTemplate
	{
	public:
		class UUMGAtlantaDailyRewardsGrid*                         DailyRewardGrid;                                         // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGAtlantaCreditsPopup
	 * Size -> 0x0020 (FullSize[0x0358] - InheritedSize[0x0338])
	 */
	class UUMGAtlantaCreditsPopup : public UMobileBaseUserWidget
	{
	public:
		class UUMGHtmlRichText*                                    RichTitleText;                                           // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGHtmlRichText*                                    RichContentText;                                         // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FString                                              _titleDefaultStyle;                                      // 0x0348(0x0010) Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void SetCreditTitle(const class FString& Title);
		void SetCreditContent(const class FString& Content);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGAtlantaDailyRewardsGrid
	 * Size -> 0x0198 (FullSize[0x04D0] - InheritedSize[0x0338])
	 */
	class UUMGAtlantaDailyRewardsGrid : public UMobileBaseUserWidget
	{
	public:
		unsigned char                                              UnknownData_4KHI[0x10];                                  // 0x0338(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              BigDailyRewardWidgetTemplate_type_8[0x30];               // 0x0348(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              BigDailyRewardWidgetTemplate_type_10[0x30];              // 0x0378(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              BigDailyRewardWidgetTemplate_type_14[0x30];              // 0x03A8(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              SmallDailyRewardWidgetTemplate_type_8[0x30];             // 0x03D8(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              SmallDailyRewardWidgetTemplate_type_10[0x30];            // 0x0408(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              SmallDailyRewardWidgetTemplate_type_14[0x30];            // 0x0438(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		class UUniformGridPanel*                                   DailyRewardWidgetsGridPanel;                             // 0x0468(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        LastDailyRewardWidgetPanel;                              // 0x0470(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                    NumberOfItems;                                           // 0x0478(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_G9R5[0x2C];                                  // 0x047C(0x002C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              _bigWidgetTemplate;                                      // 0x04A8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UClass*                                              _smallWidgetTemplate;                                    // 0x04B0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<class UUMGDailyRewardWidget*>                       _rewardWidgets;                                          // 0x04B8(0x0010) ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
		class UUMGDailyRewardWidget*                               _widgetToAttach;                                         // 0x04C8(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void StartRewardsIntroRewardSequence();
		void StartIntroSequence();
		void PlayNextRewardIntroAnimation();
		void InitializeLayouts_BP();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGAtlantaDailyRewardsScreen
	 * Size -> 0x00A0 (FullSize[0x03D8] - InheritedSize[0x0338])
	 */
	class UUMGAtlantaDailyRewardsScreen : public UMobileBaseUserWidget
	{
	public:
		unsigned char                                              UnknownData_NPUX[0x10];                                  // 0x0338(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UUMGAtlantaDailyRewardsGrid*                         DailyRewardWidgetsGrid;                                  // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        ContinueButtonPanel;                                     // 0x0350(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGPopupButton*                                     ContinueButton;                                          // 0x0358(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          RemainingTimeTextBlock;                                  // 0x0360(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FSlateColor                                         NormalColor;                                             // 0x0368(0x0028) Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		struct FSlateColor                                         WarningColor;                                            // 0x0390(0x0028) Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_PNX9[0x20];                                  // 0x03B8(0x0020) MISSED OFFSET (PADDING)

	public:
		void HandleCurrentActiveDailyRewardStateChanged(int32_t dailyRewardIndex, int32_t dailyRewardNewState);
		void HandleContinueButtonClick();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGAtlantaEventsDescription
	 * Size -> 0x0078 (FullSize[0x03B0] - InheritedSize[0x0338])
	 */
	class UUMGAtlantaEventsDescription : public UMobileBaseUserWidget
	{
	public:
		class UAtlantaEventsTemplateDataAsset*                     widgetData;                                              // 0x0338(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        ItemsRewards;                                            // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          Title;                                                   // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          Description;                                             // 0x0350(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          TimePeriodTitle;                                         // 0x0358(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          TimePeriodStart;                                         // 0x0360(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          TimePeriodEnd;                                           // 0x0368(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGBaseButtonWidget*                                DeepLinkButton;                                          // 0x0370(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        TimePeriodCanvas;                                        // 0x0378(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGAtlantaBaseEventsTemplate*                       _eventTemplate;                                          // 0x0380(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_O9RW[0x28];                                  // 0x0388(0x0028) MISSED OFFSET (PADDING)

	public:
		void HandleButtonClicked();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGAtlantaEventsElement
	 * Size -> 0x0018 (FullSize[0x0350] - InheritedSize[0x0338])
	 */
	class UUMGAtlantaEventsElement : public UMobileBaseUserWidget
	{
	public:
		class UVerticalBox*                                        ImageBox;                                                // 0x0338(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UTextBlock*                                          ElementName;                                             // 0x0340(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UUMGPromoPackItemWidget*                             CustomizationWidget;                                     // 0x0348(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGAtlantaEventsScreen
	 * Size -> 0x0080 (FullSize[0x03B8] - InheritedSize[0x0338])
	 */
	class UUMGAtlantaEventsScreen : public UMobileBaseUserWidget
	{
	public:
		class UTextBlock*                                          PageTitle;                                               // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UWrapBox*                                            WrapBox;                                                 // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGAtlantaEventsDescription*                        DescriptionWidget;                                       // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UClass*                                              EventsTabWBPReference;                                   // 0x0350(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<class UUMGAtlantaEventsTab*>                        _eventsArray;                                            // 0x0358(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_356N[0x50];                                  // 0x0368(0x0050) MISSED OFFSET (PADDING)

	public:
		void HandleEventTabClicked(const class FString& ID);
		void BroadcastOnCloseButtonClicked();
		void BroadcastDeepLinkRequest(const class FString& ID);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGAtlantaEventsTab
	 * Size -> 0x0040 (FullSize[0x04A8] - InheritedSize[0x0468])
	 */
	class UUMGAtlantaEventsTab : public UUMGBaseButtonWidget
	{
	public:
		class FString                                              _eventId;                                                // 0x0468(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          HotTagText;                                              // 0x0478(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          NewTagText;                                              // 0x0480(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_5N6J[0x20];                                  // 0x0488(0x0020) MISSED OFFSET (PADDING)

	public:
		void SetSelectionVisuals(bool IsSelected);
		void SetNewTag();
		void SetHotTag();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGRichTextFreeTicketDecorator
	 * Size -> 0x0988 (FullSize[0x09B8] - InheritedSize[0x0030])
	 */
	class UUMGRichTextFreeTicketDecorator : public URichTextBlockDecorator
	{
	public:
		struct FVector2D                                           FreeTicketOverrideSize;                                  // 0x0030(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRichTextFreeTicketImageInfo                        FreeTicketIcon;                                          // 0x0038(0x00A0) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FRichTextFreeTicketImageInfo                        FreeTicketBG;                                            // 0x00D8(0x00A0) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FRichTextFreeTicketTextInfo                         FreeTicketDurationTitle;                                 // 0x0178(0x02B0) Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FRichTextFreeTicketTextInfo                         FreeTicketTitle;                                         // 0x0428(0x02B0) Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FRichTextFreeTicketTextInfo                         FreeTicketDurationInHours;                               // 0x06D8(0x02B0) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class UDataTable*                                          TitleStyleSet;                                           // 0x0988(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_ECD3[0x28];                                  // 0x0990(0x0028) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGGenericPopup
	 * Size -> 0x00E8 (FullSize[0x0420] - InheritedSize[0x0338])
	 */
	class UUMGGenericPopup : public UMobileBaseUserWidget
	{
	public:
		class URichTextBlock*                                      Title;                                                   // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UUMGHtmlRichText*                                    Message;                                                 // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UImage*                                              TitleBackground;                                         // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UImage*                                              TitleSmoke;                                              // 0x0350(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UUMGPopupButton*                                     RegressionPopupButton;                                   // 0x0358(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UUMGPopupButton*                                     AlternativePopupButton;                                  // 0x0360(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UUMGPopupButton*                                     ProgressionPopupButton;                                  // 0x0368(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSlateColor                                         ErrorTitleSmokeColor;                                    // 0x0370(0x0028) Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FSlateColor                                         ErrorTitleBackgroundColor;                               // 0x0398(0x0028) Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FSlateColor                                         DefaultTitleSmokeColor;                                  // 0x03C0(0x0028) Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FSlateColor                                         DefaultTitleBackgroundColor;                             // 0x03E8(0x0028) Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8APD[0x10];                                  // 0x0410(0x0010) MISSED OFFSET (PADDING)

	public:
		void OnPopupDisappearance();
		void OnPopupAppearance();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGAtlantaFreeTicketConfirmToUsePopup
	 * Size -> 0x03F0 (FullSize[0x0810] - InheritedSize[0x0420])
	 */
	class UUMGAtlantaFreeTicketConfirmToUsePopup : public UUMGGenericPopup
	{
	public:
		class UTexture2D*                                          FreeTicketIcon;                                          // 0x0420(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                PopupTitleContent;                                       // 0x0428(0x0018) Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FFJV[0x3D0];                                 // 0x0440(0x03D0) MISSED OFFSET (PADDING)

	public:
		void SetPopupTitle(const class FText& characterName);
		void SetFreeTicketIconTexture(bool IsSlasher);
		class UUMGRichTextFreeTicketDecorator* GetDecorator();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGAtlantaFriendListScreen
	 * Size -> 0x03B8 (FullSize[0x06F0] - InheritedSize[0x0338])
	 */
	class UUMGAtlantaFriendListScreen : public UMobileBaseUserWidget
	{
	public:
		unsigned char                                              UnknownData_GWCF[0x60];                                  // 0x0338(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UWidgetSwitcher*                                     ListSwitcher;                                            // 0x0398(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UWidgetSwitcher*                                     SearchResultSwitcher;                                    // 0x03A0(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGBaseFriendListElement*                           NonFriendSearchResult;                                   // 0x03A8(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGBaseFriendListElement*                           RequestReceivedSearchResult;                             // 0x03B0(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGBaseFriendListElement*                           RequestSentSearchResult;                                 // 0x03B8(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGBaseFriendListElement*                           FriendSearchResult;                                      // 0x03C0(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          SearchFailureText;                                       // 0x03C8(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGBaseButtonWidget*                                CloseButton;                                             // 0x03D0(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGFriendSearchBarWidget*                           SearchBar;                                               // 0x03D8(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UHorizontalBox*                                      ButtonTabContainer;                                      // 0x03E0(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGFriendListTabWidget*                             FriendListTabWidget;                                     // 0x03E8(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGSuggestionsListTabWidget*                        SuggestionListTabWidget;                                 // 0x03F0(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGRequestsListTabWidget*                           RequestListTabWidget;                                    // 0x03F8(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGFriendTabButtonWidget*                           FriendsTabButton;                                        // 0x0400(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGFriendTabButtonWidget*                           SuggestionsTabButton;                                    // 0x0408(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGFriendTabButtonWidget*                           RequestsTabButton;                                       // 0x0410(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGBaseFriendListContextualMenuWidget*              CurrentContextualMenuWidget;                             // 0x0418(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              FriendWidget[0x30];                                      // 0x0420(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              RequestSentWidget[0x30];                                 // 0x0450(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              FriendRequestReceivedWidget[0x30];                       // 0x0480(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              FriendsSuggestionWidget[0x30];                           // 0x04B0(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              FriendsSuggestion[0x30];                                 // 0x04E0(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              FriendPartyInviteWidgetClass[0x30];                      // 0x0510(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              ContextualMenuInvite[0x30];                              // 0x0540(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              ContextualMenuConfirmDeclineAction[0x30];                // 0x0570(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              UnknownData_T4YY[0x90];                                  // 0x05A0(0x0090) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class FString, struct FFriendWidgetList>              _existingFriendListWidgets;                              // 0x0630(0x0050) NativeAccessSpecifierPrivate
		TMap<class FString, class UUMGBaseFriendListElement*>      _existingFriendInvitePartyWidget;                        // 0x0680(0x0050) ExportObject, ContainsInstancedReference, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_U29C[0x20];                                  // 0x06D0(0x0020) MISSED OFFSET (PADDING)

	public:
		void VerifyReceivedFriendRequestFocus(class UExpandableArea* ExpandableArea, bool bIsExpanded);
		void OnFinishedOutAnimation();
		void HandleTabButtonClicked(unsigned char tabIndex);
		void HandleSearchInputChanged(const class FText& inputText);
		void HandleSearchButtonClicked();
		void HandleOnActionOnFriend(const struct FActionOnFriend& ActionOnFriend);
		void HandleContextualMenuAction(EActionOnFriendType action);
		void HandleCloseButtonClicked();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGAtlantaGenericEventTemplate
	 * Size -> 0x0020 (FullSize[0x0358] - InheritedSize[0x0338])
	 */
	class UUMGAtlantaGenericEventTemplate : public UUMGAtlantaBaseEventsTemplate
	{
	public:
		class UHorizontalBox*                                      RelatedItemsBox;                                         // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UClass*                                              EventsElementWBPReference;                               // 0x0340(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UClass*                                              CustomizationWBPReference;                               // 0x0348(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UClass*                                              CharacterWBPReference;                                   // 0x0350(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGAtlantaLegalMenuScreen
	 * Size -> 0x0010 (FullSize[0x0348] - InheritedSize[0x0338])
	 */
	class UUMGAtlantaLegalMenuScreen : public UMobileBaseUserWidget
	{
	public:
		unsigned char                                              UnknownData_PS00[0x10];                                  // 0x0338(0x0010) MISSED OFFSET (PADDING)

	public:
		void SetLegalText(const class FString& Title, const class FString& LegalText);
		void SetButtonText(const class FText& acceptText, const class FText& declineText);
		void HandleMenuButtonClickEvent(bool isAccept);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGAtlantaLevelUpPopup
	 * Size -> 0x0000 (FullSize[0x0420] - InheritedSize[0x0420])
	 */
	class UUMGAtlantaLevelUpPopup : public UUMGGenericPopup
	{
	public:
		void OnSetData(int32_t Level, int32_t Prestige, bool prestigeIncreased, TArray<struct FRewardItemData> Rewards);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGAtlantaMonthlyPassEventTemplate
	 * Size -> 0x0008 (FullSize[0x0340] - InheritedSize[0x0338])
	 */
	class UUMGAtlantaMonthlyPassEventTemplate : public UUMGAtlantaBaseEventsTemplate
	{
	public:
		class UUMGSubscriptionPackButtonWidget*                    MonthlyPassWidget;                                       // 0x0338(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGAtlantaNavigationScreen
	 * Size -> 0x0060 (FullSize[0x0398] - InheritedSize[0x0338])
	 */
	class UUMGAtlantaNavigationScreen : public UMobileBaseUserWidget
	{
	public:
		class UUMGBankAndPlayerInfoWidget*                         BankAndPlayerInfoWidget;                                 // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTextBlock*                                          TextButtonStart;                                         // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESlateVisibility                                           PlayModeSelectionVisibility;                             // 0x0348(0x0001) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESlateVisibility                                           CharacterInfoVisibility;                                 // 0x0349(0x0001) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESlateVisibility                                           BackButtonVisibility;                                    // 0x034A(0x0001) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESlateVisibility                                           MenuButtonsVisibility;                                   // 0x034B(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESlateVisibility                                           ButtonRoleVisibility;                                    // 0x034C(0x0001) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TJAH[0x3];                                   // 0x034D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UButton*                                             ButtonRole;                                              // 0x0350(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWidgetSwitcher*                                     BottomRightWidgetSwitcher;                               // 0x0358(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGPartySlotsWidget*                                PartyPlayerSlots;                                        // 0x0360(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGBaseCountdownWidget*                             PartyCountdownLarge;                                     // 0x0368(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<struct FPartyMemberUIData>                          _partyMembers;                                           // 0x0370(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_4IPH[0x18];                                  // 0x0380(0x0018) MISSED OFFSET (PADDING)

	public:
		TArray<struct FPartyMemberUIData> GetPartyMembersData(int32_t Index);
		void ButtonClickEvent(ENavigationScreenButton buttonId);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGAtlantaPromoCodeRewardItemWidget
	 * Size -> 0x0138 (FullSize[0x0470] - InheritedSize[0x0338])
	 */
	class UUMGAtlantaPromoCodeRewardItemWidget : public UMobileBaseUserWidget
	{
	public:
		class UPanelWidget*                                        CurrencyItem;                                            // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              CurrencyIcon;                                            // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          CurrencyName;                                            // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          CurrencyAmount;                                          // 0x0350(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              ItemRarityTint;                                          // 0x0358(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UWidgetAnimation*                                    RevealAnimationSmall;                                    // 0x0360(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UPanelWidget*                                        CustomizationItem;                                       // 0x0368(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              CustomizationIcon;                                       // 0x0370(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          CustomizationName;                                       // 0x0378(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              CustomizationRarityTint;                                 // 0x0380(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UWidgetAnimation*                                    RevealAnimationLarge;                                    // 0x0388(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UPanelWidget*                                        CharacterPanel;                                          // 0x0390(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              CharacterPortrait;                                       // 0x0398(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          characterName;                                           // 0x03A0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UPanelWidget*                                        TicketPanel;                                             // 0x03A8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              TicketRarityTint;                                        // 0x03B0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              TicketIcon;                                              // 0x03B8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          TicketName;                                              // 0x03C0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          TicketAmount;                                            // 0x03C8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UPanelWidget*                                        OfferingPanel;                                           // 0x03D0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              OfferingRarityTint;                                      // 0x03D8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              OfferingIcon;                                            // 0x03E0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          OfferingName;                                            // 0x03E8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          OfferingAmount;                                          // 0x03F0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_NM0W[0x78];                                  // 0x03F8(0x0078) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGAtlantaPurchasePopup
	 * Size -> 0x00B0 (FullSize[0x03E8] - InheritedSize[0x0338])
	 */
	class UUMGAtlantaPurchasePopup : public UMobileBaseUserWidget
	{
	public:
		class UWidgetSwitcher*                                     LayoutSwitcher;                                          // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              ImagePopup;                                              // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          OfferTextWithInfo;                                       // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          OfferText;                                               // 0x0350(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          TitleTextWithInfo;                                       // 0x0358(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          titleText;                                               // 0x0360(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          descriptionText;                                         // 0x0368(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UHorizontalBox*                                      ItemsContainer;                                          // 0x0370(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGPurchaseBuyButton*                               BuyButtonWithInfo;                                       // 0x0378(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGPurchaseBuyButton*                               BuyButton;                                               // 0x0380(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGBaseButtonWidget*                                CloseButton;                                             // 0x0388(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGPurchaseSticker*                                 PurchaseSticker;                                         // 0x0390(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              PurchaseItemsInfoWidgetClass[0x30];                      // 0x0398(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              UnknownData_FXPJ[0x20];                                  // 0x03C8(0x0020) MISSED OFFSET (PADDING)

	public:
		void HandleCloseButtonClicked();
		void HandleBuyButtonClicked();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGAtlantaRankUpPopup
	 * Size -> 0x0048 (FullSize[0x0468] - InheritedSize[0x0420])
	 */
	class UUMGAtlantaRankUpPopup : public UUMGGenericPopup
	{
	public:
		class UUMGTallyRankBanner*                                 RankBanner;                                              // 0x0420(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UHorizontalBox*                                      RewardsContainer;                                        // 0x0428(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        RewardsSection;                                          // 0x0430(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              RewardWidgetClass[0x30];                                 // 0x0438(0x0030) UNKNOWN PROPERTY: SoftClassProperty

	public:
		void PlayRankUpBannerAnimation();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGAltantaRitual
	 * Size -> 0x0058 (FullSize[0x0390] - InheritedSize[0x0338])
	 */
	class UUMGAltantaRitual : public UMobileBaseUserWidget
	{
	public:
		class FText                                                _claimText;                                              // 0x0338(0x0018) BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		class FText                                                _claimedText;                                            // 0x0350(0x0018) BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		class FText                                                _completedText;                                          // 0x0368(0x0018) BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_C24Y[0x10];                                  // 0x0380(0x0010) MISSED OFFSET (PADDING)

	public:
		void SetData(const struct FAtlantaRitualUIData& ritual);
		void BroadcastOnClaimRewardsButtonPressed(int32_t ritualId);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGAtlantaRitualsScreen
	 * Size -> 0x00F0 (FullSize[0x0428] - InheritedSize[0x0338])
	 */
	class UUMGAtlantaRitualsScreen : public UMobileBaseUserWidget
	{
	public:
		class UUMGAtlantaRitualTab*                                DailyTab;                                                // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGAtlantaRitualTab*                                WeeklyTab;                                               // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FText                                                _atlantaRitualTitle;                                     // 0x0348(0x0018) BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		class FText                                                _endInLabel;                                             // 0x0360(0x0018) BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		class FText                                                _dailyButtonLabel;                                       // 0x0378(0x0018) BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		class FText                                                _weeklyButtonLabel;                                      // 0x0390(0x0018) BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		class FText                                                _dailyRemainingTime;                                     // 0x03A8(0x0018) BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		class FText                                                _weeklyRemainingTime;                                    // 0x03C0(0x0018) BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_DVXQ[0x50];                                  // 0x03D8(0x0050) MISSED OFFSET (PADDING)

	public:
		void SetNewRitualNumbers(int32_t newDailyRitualNumber, int32_t newWeeklyRitualNumber);
		void BroadcastOnClaimRewardButtonPressed(int32_t ritualId);
		void BroadcastOnBackButtonPressed();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGAtlantaRitualTab
	 * Size -> 0x0048 (FullSize[0x0380] - InheritedSize[0x0338])
	 */
	class UUMGAtlantaRitualTab : public UMobileBaseUserWidget
	{
	public:
		class UVerticalBox*                                        ContainerBox;                                            // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              _itemWidgetClass[0x30];                                  // 0x0340(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              UnknownData_U3C1[0x10];                                  // 0x0370(0x0010) MISSED OFFSET (PADDING)

	public:
		void BroadcastOnClaimRewardsButtonPressed(int32_t ritualId);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGAtlantaSeasonEndPopup
	 * Size -> 0x0040 (FullSize[0x0460] - InheritedSize[0x0420])
	 */
	class UUMGAtlantaSeasonEndPopup : public UUMGGenericPopup
	{
	public:
		class UUMGTallyRankBanner*                                 OldSurvivorRankBanner;                                   // 0x0420(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGTallyRankBanner*                                 NewSurvivorRankBanner;                                   // 0x0428(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGTallyRankBanner*                                 OldKillerRankBanner;                                     // 0x0430(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGTallyRankBanner*                                 NewKillerRankBanner;                                     // 0x0438(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UHorizontalBox*                                      NewRankHorizontalBox;                                    // 0x0440(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UHorizontalBox*                                      OldRankHorizontalBox;                                    // 0x0448(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FTimerHandle                                        _fadeOutTimerHandle;                                     // 0x0450(0x0008) Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      _timerBeforeFadeOutAnimation;                            // 0x0458(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_V24M[0x4];                                   // 0x045C(0x0004) MISSED OFFSET (PADDING)

	public:
		void TriggerFadeOutAnimationTimer();
		void PlayNewRankFadeInAnimation();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGAtlantaSettingScreen
	 * Size -> 0x0200 (FullSize[0x0538] - InheritedSize[0x0338])
	 */
	class UUMGAtlantaSettingScreen : public UMobileBaseUserWidget
	{
	public:
		unsigned char                                              UnknownData_DJSN[0xB0];                                  // 0x0338(0x00B0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UWidgetSwitcher*                                     SettingContextSwitcher;                                  // 0x03E8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UHorizontalBox*                                      SettingTabBox;                                           // 0x03F0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UHorizontalBox*                                      AlwaysDisplayButtonBox;                                  // 0x03F8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              _settingTabButtonClass[0x30];                            // 0x0400(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              _settingAlwaysDisplayButtonClass[0x30];                  // 0x0430(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              _buttonBoxDividerAsset[0x30];                            // 0x0460(0x0030) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              _overlayContextWidgetMap[0x50];                          // 0x0490(0x0050) UNKNOWN PROPERTY: MapProperty
		TMap<EOverlayTabs, class UUMGSettingContextWidget*>        _contextWidgetMap;                                       // 0x04E0(0x0050) ExportObject, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_9UUP[0x8];                                   // 0x0530(0x0008) MISSED OFFSET (PADDING)

	public:
		void ShowCreditsOrConsentsPopup(const class FString& Title, const class FString& Content);
		void SetRightTopTextInfo(const class FText& Title, const class FString& Content, ESlateVisibility textVisibility);
		void HandleSurvivorCameraSensitivityChanged(int32_t value);
		void HandleSettingTabClick(int32_t tabIndex);
		void HandleLeaveButtonClick();
		void HandleLanguageButtonClick(int32_t Index);
		void HandleKillerCameraSensitivityChanged(int32_t value);
		void HandleInvertYToggleClick(bool toggleValue);
		void HandleInteractionButtonToggleClick(int32_t Index);
		void HandleHandSideToggleClick(int32_t Index);
		void HandleContextButtonClickEvent(int32_t Index);
		void HandleAlwaysDisplayButtonClick(int32_t tabIndex);
		void HandleAimAssistToggleClick(bool toggleValue);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGAtlantaStoreScreen
	 * Size -> 0x0038 (FullSize[0x0370] - InheritedSize[0x0338])
	 */
	class UUMGAtlantaStoreScreen : public UMobileBaseUserWidget
	{
	public:
		unsigned char                                              UnknownData_4NG3[0x20];                                  // 0x0338(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UScaleBox*                                           AuricCellsWidget;                                        // 0x0358(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUniformGridPanel*                                   AuricCellsGridPanel;                                     // 0x0360(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_BLL6[0x8];                                   // 0x0368(0x0008) MISSED OFFSET (PADDING)

	public:
		void SetBank(ECurrencyType CurrencyType, int32_t Bank);
		void HandleOnStoreLeft();
		void HandleOnClickedBuyAuricCell(int32_t cellIndex);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGAtlantaTutorialScreen
	 * Size -> 0x0000 (FullSize[0x0338] - InheritedSize[0x0338])
	 */
	class UUMGAtlantaTutorialScreen : public UMobileBaseUserWidget
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGBaseStorefrontWidget
	 * Size -> 0x0000 (FullSize[0x0338] - InheritedSize[0x0338])
	 */
	class UUMGBaseStorefrontWidget : public UMobileBaseUserWidget
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGBaseCurrencyStorefrontWidget
	 * Size -> 0x0010 (FullSize[0x0348] - InheritedSize[0x0338])
	 */
	class UUMGBaseCurrencyStorefrontWidget : public UUMGBaseStorefrontWidget
	{
	public:
		unsigned char                                              UnknownData_YCGU[0x10];                                  // 0x0338(0x0010) MISSED OFFSET (PADDING)

	public:
		void BroadcastOnAuricCellButtonClicked(int32_t cellIndex);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGAtlCurrencyStorefrontWidget
	 * Size -> 0x00D0 (FullSize[0x0418] - InheritedSize[0x0348])
	 */
	class UUMGAtlCurrencyStorefrontWidget : public UUMGBaseCurrencyStorefrontWidget
	{
	public:
		class UCanvasPanel*                                        AuricCellsCanvasPanel;                                   // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUniformGridPanel*                                   AuricCellsGridPanel;                                     // 0x0350(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UHorizontalBox*                                      BottomPurchaseBox;                                       // 0x0358(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class URichTextBlock*                                      BottomRightPurchaseRichText;                             // 0x0360(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UOverlay*                                            BottomTimer;                                             // 0x0368(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              AuricsBgR;                                               // 0x0370(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              AuricsBgL;                                               // 0x0378(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UHorizontalBox*                                      EventItemsPackContainerBox;                              // 0x0380(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FMargin                                             PaddingEventItemsPackButton;                             // 0x0388(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate
		unsigned char                                              EventItemsPackWidgetClass[0x30];                         // 0x0398(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              UnknownData_BGWU[0x18];                                  // 0x03C8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UUMGStoreAuricCellButton*>                    _auricCellButtons;                                       // 0x03E0(0x0010) ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_W01X[0x28];                                  // 0x03F0(0x0028) MISSED OFFSET (PADDING)

	public:
		void UpdateFirstPurchaseForAllAuricCellsEndInUI(const class FString& endInText);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGAtlEndDateTimerWidget
	 * Size -> 0x0040 (FullSize[0x0378] - InheritedSize[0x0338])
	 */
	class UUMGAtlEndDateTimerWidget : public UMobileBaseUserWidget
	{
	public:
		class UTextBlock*                                          TextEndIn;                                               // 0x0338(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_RY3Y[0x38];                                  // 0x0340(0x0038) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGAtlEventItemWidget
	 * Size -> 0x0060 (FullSize[0x0398] - InheritedSize[0x0338])
	 */
	class UUMGAtlEventItemWidget : public UMobileBaseUserWidget
	{
	public:
		class UImage*                                              SquareImageBackground;                                   // 0x0338(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              SquareRarityBackground;                                  // 0x0340(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              SquareIcon;                                              // 0x0348(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              PortraitImageBackground;                                 // 0x0350(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              PortraitRarityBackground;                                // 0x0358(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              PortraitIcon;                                            // 0x0360(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          NameText;                                                // 0x0368(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          QuantityText;                                            // 0x0370(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        PortraitCanvas;                                          // 0x0378(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        SquareCanvas;                                            // 0x0380(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<struct FEventItemsContentTypeUIData>                ContentTypeUIData;                                       // 0x0388(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGBaseLandingPageStorefrontWidget
	 * Size -> 0x00F0 (FullSize[0x0428] - InheritedSize[0x0338])
	 */
	class UUMGBaseLandingPageStorefrontWidget : public UUMGBaseStorefrontWidget
	{
	public:
		class UHorizontalBox*                                      BigButtonsSlot;                                          // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UVerticalBox*                                        SmallButtonsSlot1;                                       // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UVerticalBox*                                        SmallButtonsSlot2;                                       // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              SmallButtonClass[0x30];                                  // 0x0350(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              MediumButtonClass[0x30];                                 // 0x0380(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              BigButtonClass[0x30];                                    // 0x03B0(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		struct FLinearColor                                        DisabledButtonColor;                                     // 0x03E0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FText                                                DisabledButtonText;                                      // 0x03F0(0x0018) Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_8O3B[0x10];                                  // 0x0408(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UUMGLandingPageButtonWidget*>                 _landingPageTabs;                                        // 0x0418(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate

	public:
		void HandleTabSelected(EStorefrontState tabId);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGAtlLandingPageStorefrontWidget
	 * Size -> 0x0018 (FullSize[0x0440] - InheritedSize[0x0428])
	 */
	class UUMGAtlLandingPageStorefrontWidget : public UUMGBaseLandingPageStorefrontWidget
	{
	public:
		unsigned char                                              UnknownData_3B1Z[0x10];                                  // 0x0428(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UUMGBaseButtonWidget*                                AtlantaRedeemCodeBtn;                                    // 0x0438(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void OnPromoCodeButtonPressed();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGBasePassStorefrontWidget
	 * Size -> 0x0038 (FullSize[0x0370] - InheritedSize[0x0338])
	 */
	class UUMGBasePassStorefrontWidget : public UUMGBaseStorefrontWidget
	{
	public:
		class UUMGSubscriptionsPageScrollWidget*                   SubscriptionsPageScroll;                                 // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_G4TZ[0x30];                                  // 0x0340(0x0030) MISSED OFFSET (PADDING)

	public:
		void HandleSubscriptionInfoButtonClickedEvent(const class FString& subscriptionDetails);
		void HandleBuySubscriptionPackButtonClickedEvent(const class FName& subscriptionPackID);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGAtlPassStorefrontWidget
	 * Size -> 0x0000 (FullSize[0x0370] - InheritedSize[0x0370])
	 */
	class UUMGAtlPassStorefrontWidget : public UUMGBasePassStorefrontWidget
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGBaseRootStorefrontWidget
	 * Size -> 0x00F0 (FullSize[0x0428] - InheritedSize[0x0338])
	 */
	class UUMGBaseRootStorefrontWidget : public UMobileBaseUserWidget
	{
	public:
		unsigned char                                              UnknownData_QIVU[0x48];                                  // 0x0338(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UNamedSlot*                                          StorePageSlot;                                           // 0x0380(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGBaseButtonWidget*                                BackButton;                                              // 0x0388(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UPanelWidget*                                        CurrencyButtonsPanel;                                    // 0x0390(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          StorefrontTitle;                                         // 0x0398(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_FYDX[0x88];                                  // 0x03A0(0x0088) MISSED OFFSET (PADDING)

	public:
		void OnPurchaseAuricCellButtonPressed();
		void OnCurrencyButtonLongPressed(const struct FTooltipPressedData& TooltipPressedData, ECurrencyType CurrencyType);
		void OnBackButtonPressed();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGAtlRootStorefrontWidget
	 * Size -> 0x0010 (FullSize[0x0438] - InheritedSize[0x0428])
	 */
	class UUMGAtlRootStorefrontWidget : public UUMGBaseRootStorefrontWidget
	{
	public:
		class UUMGCurrencyWidget*                                  ShardWalletWidget;                                       // 0x0428(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGAuricCellsButton*                                AuricWalletWidget;                                       // 0x0430(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGAtlStorePriceWidget
	 * Size -> 0x0008 (FullSize[0x0340] - InheritedSize[0x0338])
	 */
	class UUMGAtlStorePriceWidget : public UMobileBaseUserWidget
	{
	public:
		class UTextBlock*                                          PriceText;                                               // 0x0338(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGCurrencyWidget
	 * Size -> 0x0018 (FullSize[0x0480] - InheritedSize[0x0468])
	 */
	class UUMGCurrencyWidget : public UUMGBaseButtonWidget
	{
	public:
		ECurrencyType                                              CurrencyType;                                            // 0x0468(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7LYH[0x17];                                  // 0x0469(0x0017) MISSED OFFSET (PADDING)

	public:
		void HandleTooltipLongPressEvent();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGAuricCellsButton
	 * Size -> 0x0010 (FullSize[0x0490] - InheritedSize[0x0480])
	 */
	class UUMGAuricCellsButton : public UUMGCurrencyWidget
	{
	public:
		class UImage*                                              PlusImage;                                               // 0x0480(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_ZXFH[0x8];                                   // 0x0488(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGAuthentificationProviderListWidget
	 * Size -> 0x0008 (FullSize[0x0340] - InheritedSize[0x0338])
	 */
	class UUMGAuthentificationProviderListWidget : public UMobileBaseUserWidget
	{
	public:
		class UHorizontalBox*                                      GuestButtonContainer;                                    // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void HideGuestButton();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGBankAndPlayerInfoWidget
	 * Size -> 0x00A8 (FullSize[0x03E0] - InheritedSize[0x0338])
	 */
	class UUMGBankAndPlayerInfoWidget : public UMobileBaseUserWidget
	{
	public:
		class UUMGBankWidget*                                      BankWidget;                                              // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          playerNameText;                                          // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGSelectedCharacterWidget*                         SelectedCharacterWidget;                                 // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		ESlateVisibility                                           RankWidgetVisibility;                                    // 0x0350(0x0001) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_R0BO[0x7];                                   // 0x0351(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UUMGLevelBannerWidget*                               LevelBanner;                                             // 0x0358(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGRankBanner*                                      RankBanner;                                              // 0x0360(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGMainMenuMonthlyPassButton*                       MonthlyPassButton;                                       // 0x0368(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_QDPB[0x60];                                  // 0x0370(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             _onCancelPartyButtonClickedEvent;                        // 0x03D0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, BlueprintCallable, NativeAccessSpecifierProtected

	public:
		void SetPlayerLevelBP(int32_t Level, int32_t devotion, int32_t currentLevelXp, int32_t totalLevelXp, bool IsSlasher, bool playUpdateAnim);
		void OnTooltipTriggeredByRankBanner(const struct FTooltipPressedData& TooltipPressedData);
		void OnTooltipTriggeredByLevelBannerWidget(const struct FTooltipPressedData& TooltipPressedData);
		void OnTooltipTriggeredByCurrency(const struct FTooltipPressedData& TooltipPressedData, ECurrencyType CurrencyType);
		void OnPurchaseAuricCellsButtonClicked();
		void OnPrestigeButtonClicked();
		void OnMainMenuSubscriptionClicked();
		void OnCancelPartyButtonClicked();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGBankWidget
	 * Size -> 0x0038 (FullSize[0x0370] - InheritedSize[0x0338])
	 */
	class UUMGBankWidget : public UMobileBaseUserWidget
	{
	public:
		class UUMGCurrencyWidget*                                  BloodPointsCurrency;                                     // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGAuricCellsButton*                                CellsButton;                                             // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGCurrencyWidget*                                  IridescentShardsCurrency;                                // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_N0DH[0x20];                                  // 0x0350(0x0020) MISSED OFFSET (PADDING)

	public:
		void OnPurchaseAuricCellsClicked();
		void OnCurrencyTooltipRequested(const struct FTooltipPressedData& TooltipPressedData, ECurrencyType CurrencyType);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGBaseAlertWidget
	 * Size -> 0x0030 (FullSize[0x02C8] - InheritedSize[0x0298])
	 */
	class UUMGBaseAlertWidget : public UUserWidget
	{
	public:
		unsigned char                                              UnknownData_B5IF[0x30];                                  // 0x0298(0x0030) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGBaseCountdownWidget
	 * Size -> 0x0068 (FullSize[0x03A0] - InheritedSize[0x0338])
	 */
	class UUMGBaseCountdownWidget : public UMobileBaseUserWidget
	{
	public:
		class UTextBlock*                                          TimerTextBlock;                                          // 0x0338(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                    _timerThreshold;                                         // 0x0340(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_4MAU[0x4];                                   // 0x0344(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSlateColor                                         _timerColorBelowThreshold;                               // 0x0348(0x0028) Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
		struct FSlateColor                                         _timerColorBeyondThreshold;                              // 0x0370(0x0028) Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_LXWX[0x8];                                   // 0x0398(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGBaseCurrencyButtonWidget
	 * Size -> 0x00A8 (FullSize[0x0510] - InheritedSize[0x0468])
	 */
	class UUMGBaseCurrencyButtonWidget : public UUMGBaseButtonWidget
	{
	public:
		class UImage*                                              FXImage;                                                 // 0x0468(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              CurrencyColorImage;                                      // 0x0470(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              CurrencyIcon;                                            // 0x0478(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          PriceText;                                               // 0x0480(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FSlateColor                                         AffordableColor;                                         // 0x0488(0x0028) Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
		struct FSlateColor                                         NotAffordableColor;                                      // 0x04B0(0x0028) Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
		struct FLinearColor                                        DisabledOpacity;                                         // 0x04D8(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                        EnabledOpacity;                                          // 0x04E8(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_F0WJ[0x18];                                  // 0x04F8(0x0018) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGBaseSideMainMenuButton
	 * Size -> 0x0018 (FullSize[0x0480] - InheritedSize[0x0468])
	 */
	class UUMGBaseSideMainMenuButton : public UUMGBaseButtonWidget
	{
	public:
		class UImage*                                              NotificationBadge;                                       // 0x0468(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      _baseTextOpacity;                                        // 0x0470(0x0004) Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      _highlightTextOpacity;                                   // 0x0474(0x0004) Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      _baseIconOpacity;                                        // 0x0478(0x0004) Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      _highlightIconOpacity;                                   // 0x047C(0x0004) Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGBaseToastWidget
	 * Size -> 0x0068 (FullSize[0x03A0] - InheritedSize[0x0338])
	 */
	class UUMGBaseToastWidget : public UMobileBaseUserWidget
	{
	public:
		class UImage*                                              ToastIcon;                                               // 0x0338(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTextBlock*                                          ToastText;                                               // 0x0340(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UProgressBar*                                        TimeToastProgression;                                    // 0x0348(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VCN9[0x50];                                  // 0x0350(0x0050) MISSED OFFSET (PADDING)

	public:
		void TriggerToastInput(int32_t inputCode);
		void OnTimerFinished();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGBloodStoreArrayWidget
	 * Size -> 0x0070 (FullSize[0x03A8] - InheritedSize[0x0338])
	 */
	class UUMGBloodStoreArrayWidget : public UMobileBaseUserWidget
	{
	public:
		unsigned char                                              UnknownData_CIQ7[0x10];                                  // 0x0338(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UUMGBloodStoreRowWidget*                             FirstBloodStoreRowWidget;                                // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGBloodStoreRowWidget*                             SecondBloodStoreRowWidget;                               // 0x0350(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGBloodStoreRowWidget*                             ThirdBloodStoreRowWidget;                                // 0x0358(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGBloodStoreRowWidget*                             FourthBloodStoreRowWidget;                               // 0x0360(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGBloodStoreRowWidget*                             FifthBloodStoreRowWidget;                                // 0x0368(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<class UUMGBloodStoreRowWidget*>                     _bloodStoreRowArray;                                     // 0x0370(0x0010) ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_QUDP[0x28];                                  // 0x0380(0x0028) MISSED OFFSET (PADDING)

	public:
		void BroadcastBloodNodeSelected(const class FString& ID);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGBloodStoreItemPreviewWidget
	 * Size -> 0x0108 (FullSize[0x0440] - InheritedSize[0x0338])
	 */
	class UUMGBloodStoreItemPreviewWidget : public UMobileBaseUserWidget
	{
	public:
		unsigned char                                              UnknownData_FLU4[0x30];                                  // 0x0338(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                _itemName;                                               // 0x0368(0x0018) BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		class FText                                                _itemDescription;                                        // 0x0380(0x0018) BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		int32_t                                                    _itemPrice;                                              // 0x0398(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_I2Q8[0x4];                                   // 0x039C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                _refreshPrice;                                           // 0x03A0(0x0018) BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		class FText                                                _nodeStatusText;                                         // 0x03B8(0x0018) BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		class FText                                                _refreshTitle;                                           // 0x03D0(0x0018) BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		class FText                                                _itemSelectionTitle;                                     // 0x03E8(0x0018) BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		class FText                                                _itemSelectionText;                                      // 0x0400(0x0018) BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		class FText                                                _purchaseTitle;                                          // 0x0418(0x0018) BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_UM6O[0x10];                                  // 0x0430(0x0010) MISSED OFFSET (PADDING)

	public:
		void UnselectItem();
		void ShowRefreshButton(bool ShowRefreshButton, bool isRefreshFree);
		void ShowPurchaseButton(bool ShowPurchaseButton);
		void DisplayItem(bool isItemPurchaseable, bool isItemAffordable);
		void BroadcastUnselectPressed();
		void BroadcastRefreshPressed();
		void BroadcastPurchasePressed();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGBloodStoreItemWidget
	 * Size -> 0x0080 (FullSize[0x03B8] - InheritedSize[0x0338])
	 */
	class UUMGBloodStoreItemWidget : public UMobileBaseUserWidget
	{
	public:
		unsigned char                                              UnknownData_9855[0x10];                                  // 0x0338(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UImage*                                              NodeImage;                                               // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              BackgroundImage;                                         // 0x0350(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              RarityBackground;                                        // 0x0358(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        ItemPanel;                                               // 0x0360(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        MysteryBoxPanel;                                         // 0x0368(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              MysteryBoxRarityBackground;                              // 0x0370(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        CollectedPanel;                                          // 0x0378(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        ConsumedPanel;                                           // 0x0380(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		EBloodwebNodeContentType                                   _contentType;                                            // 0x0388(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _isMysteryBox;                                           // 0x0389(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_N6LL[0x2];                                   // 0x038A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector2D                                           _bigItemScale;                                           // 0x038C(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FVector2D                                           _normalItemScale;                                        // 0x0394(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      _consumedOpacity;                                        // 0x039C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_7CSH[0x18];                                  // 0x03A0(0x0018) MISSED OFFSET (PADDING)

	public:
		void UnFocusNode();
		void SetSelectedVisibilities(bool IsSelected);
		void SetBackgroundImages();
		void PlayConsumedAnimation(bool skipIntro);
		void FocusNode();
		void ConsumeNode();
		void CollectNode();
		void BroadcastBloodNodeSelected();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGBloodStoreRowWidget
	 * Size -> 0x0098 (FullSize[0x03D0] - InheritedSize[0x0338])
	 */
	class UUMGBloodStoreRowWidget : public UMobileBaseUserWidget
	{
	public:
		unsigned char                                              UnknownData_6SLT[0x10];                                  // 0x0338(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UHorizontalBox*                                      ItemContainer;                                           // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        LockStatusPanel;                                         // 0x0350(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        HardLockedStatusPanel;                                   // 0x0358(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                    _purchasedItemsNbr;                                      // 0x0360(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                    _requiredItemNbr;                                        // 0x0364(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		EBloodStoreRowStyle                                        _rowStyle;                                               // 0x0368(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_JNDV[0x3];                                   // 0x0369(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FMargin                                             _itemPadding;                                            // 0x036C(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_HXNO[0x4];                                   // 0x037C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              _itemWidgetClass[0x30];                                  // 0x0380(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		class UClass*                                              _itemClass;                                              // 0x03B0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_Y23G[0x18];                                  // 0x03B8(0x0018) MISSED OFFSET (PADDING)

	public:
		void UnlockRow(bool PlayAnim);
		void LockRow(bool PlayAnim);
		void BroadcastUnlockAnimationFinished();
		void BroadcastBloodNodeSelected(const class FString& ID);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGBloodStoreSubMenu
	 * Size -> 0x0030 (FullSize[0x0368] - InheritedSize[0x0338])
	 */
	class UUMGBloodStoreSubMenu : public UMobileBaseUserWidget
	{
	public:
		unsigned char                                              UnknownData_6BH7[0x20];                                  // 0x0338(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UUMGBloodStoreTimer*                                 SurvivorTimer;                                           // 0x0358(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGBloodStoreTimer*                                 KillerTimer;                                             // 0x0360(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void SetFaction(bool IsKiller);
		void BroadcastExpiredBloodWeb();
		void BroadcastCharacterRoleButtonClicked();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGBloodStoreTimer
	 * Size -> 0x0088 (FullSize[0x03C0] - InheritedSize[0x0338])
	 */
	class UUMGBloodStoreTimer : public UMobileBaseUserWidget
	{
	public:
		unsigned char                                              UnknownData_M164[0x10];                                  // 0x0338(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSlateColor                                         _normalColor;                                            // 0x0348(0x0028) Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		struct FSlateColor                                         _warningColor;                                           // 0x0370(0x0028) Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		class UTextBlock*                                          RemainingTimeTextBlock;                                  // 0x0398(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              RefreshImage;                                            // 0x03A0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_RUYV[0x18];                                  // 0x03A8(0x0018) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGBloodStoreWidget
	 * Size -> 0x00C0 (FullSize[0x03F8] - InheritedSize[0x0338])
	 */
	class UUMGBloodStoreWidget : public UMobileBaseUserWidget
	{
	public:
		class FScriptMulticastDelegate                             OnBloodNodeSelected;                                     // 0x0338(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnBloodNodePurchase;                                     // 0x0348(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnBloodStoreRegenerate;                                  // 0x0358(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnCharacterRoleButtonClicked;                            // 0x0368(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class UUMGBloodStoreArrayWidget*                           BloodStoreArrayWidget;                                   // 0x0378(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGBloodStoreItemPreviewWidget*                     ItemPreviewWidget;                                       // 0x0380(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGBloodStoreSubMenu*                               BloodStoreSubMenuWidget;                                 // 0x0388(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FText                                                _bloodStoreTitle;                                        // 0x0390(0x0018) BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		class FText                                                _killersTitle;                                           // 0x03A8(0x0018) BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		class FText                                                _survivorsTitle;                                         // 0x03C0(0x0018) BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_G4Q0[0x20];                                  // 0x03D8(0x0020) MISSED OFFSET (PADDING)

	public:
		void UnselectNode();
		void SwitchRole();
		void SetSelectedNode(const class FString& selectedId);
		void SetFaction(bool IsKiller);
		void RegenerateBloodStore();
		void PurchaseSelectedNode();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGCharacterButton
	 * Size -> 0x01E0 (FullSize[0x0518] - InheritedSize[0x0338])
	 */
	class UUMGCharacterButton : public UMobileBaseUserWidget
	{
	public:
		unsigned char                                              UnknownData_S59G[0x10];                                  // 0x0338(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UImage*                                              PortraitIcon;                                            // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        CharacterSelectedPanel;                                  // 0x0350(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_5L9O[0x8];                                   // 0x0358(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCanvasPanel*                                        LevelPanel;                                              // 0x0360(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          CharacterLevelText;                                      // 0x0368(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          OwnedCustomizationText;                                  // 0x0370(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          TotalCustomizationText;                                  // 0x0378(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        PricePanel;                                              // 0x0380(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGCharacterPrice*                                  CellPrice;                                               // 0x0388(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGCharacterPrice*                                  ShardPrice;                                              // 0x0390(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FCharacterSlotData                                  CharacterSlotData;                                       // 0x0398(0x0180) BlueprintVisible, Transient, Protected, NativeAccessSpecifierProtected

	public:
		void SetIsSelected(bool IsSelected);
		void SetCharacterData(const struct FCharacterSlotData& CharacterData);
		void BroadcastClickedEvent(int32_t characterIndex);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGCharacterFreeTicketButton
	 * Size -> 0x0050 (FullSize[0x0388] - InheritedSize[0x0338])
	 */
	class UUMGCharacterFreeTicketButton : public UMobileBaseUserWidget
	{
	public:
		class UWidgetSwitcher*                                     ButtonSwitcher;                                          // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          FreeTicketLeftSecondsText;                               // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              FreeTicketLeftSecondsBG;                                 // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_QN3H[0x38];                                  // 0x0350(0x0038) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGCharacterFreeTicketItemButton
	 * Size -> 0x0020 (FullSize[0x0358] - InheritedSize[0x0338])
	 */
	class UUMGCharacterFreeTicketItemButton : public UMobileBaseUserWidget
	{
	public:
		unsigned char                                              UnknownData_1U42[0x20];                                  // 0x0338(0x0020) MISSED OFFSET (PADDING)

	public:
		void UpdateWidget(const class FString& bgPath, bool IsSlasher, int32_t durationInHours, int32_t itemCount, const struct FSlateColor& IconColor);
		void BroadcastClickEvent();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGCharacterFreeTicketWidget
	 * Size -> 0x0060 (FullSize[0x0398] - InheritedSize[0x0338])
	 */
	class UUMGCharacterFreeTicketWidget : public UMobileBaseUserWidget
	{
	public:
		class FScriptMulticastDelegate                             OnUseFreeTicketEvent;                                    // 0x0338(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class UWidgetSwitcher*                                     PanelSwitcher;                                           // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UVerticalBox*                                        FreeTicketItemButtonBox;                                 // 0x0350(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              _buttonClass[0x30];                                      // 0x0358(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              UnknownData_3GRU[0x10];                                  // 0x0388(0x0010) MISSED OFFSET (PADDING)

	public:
		void UpdateBGColor(bool IsSlasher);
		void HandleButtonClickEvent(const class FString& ticketId, const class FString& characterName);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGCharacterInfoScreen
	 * Size -> 0x00A0 (FullSize[0x03D8] - InheritedSize[0x0338])
	 */
	class UUMGCharacterInfoScreen : public UMobileBaseUserWidget
	{
	public:
		class UCanvasPanel*                                        ContentPanel;                                            // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              SurvivorInfoWidgetClass[0x30];                           // 0x0340(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              KillerInfoWidgetClass[0x30];                             // 0x0370(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		class UUMGPopupButton*                                     ProgressionButton;                                       // 0x03A0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FScriptMulticastDelegate                             _onTeachableTooltipTriggeredLongPressEvent;              // 0x03A8(0x0010) ZeroConstructor, InstancedReference, NativeAccessSpecifierPrivate
		class FScriptMulticastDelegate                             _onPowerItemTooltipTriggeredLongPressEvent;              // 0x03B8(0x0010) ZeroConstructor, InstancedReference, NativeAccessSpecifierPrivate
		class FScriptMulticastDelegate                             _onProgressionButtonClickEvent;                          // 0x03C8(0x0010) ZeroConstructor, InstancedReference, NativeAccessSpecifierPrivate

	public:
		void HandleTeachablePerkTooltipLongPressedEvent(const struct FTeachableData& TeachableData, const struct FVector2D& position);
		void HandleProgressionButtonClickEvent();
		void HandlePowerItemTooltipLongPressedEvent(const struct FInventorySlotData& SlotData, const struct FVector2D& position);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGCharacterInfoWidget
	 * Size -> 0x0130 (FullSize[0x0468] - InheritedSize[0x0338])
	 */
	class UUMGCharacterInfoWidget : public UMobileBaseUserWidget
	{
	public:
		class UScrollBox*                                          CharacterInfoScrollBox;                                  // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGCharacterScrollingInfoWidget*                    CharacterScrollingInfoWidget;                            // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        CharacterDLCPanel;                                       // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              CharacterBackgroundImage;                                // 0x0350(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          characterName;                                           // 0x0358(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FText                                                _characterDifficultyText;                                // 0x0360(0x0018) Edit, BlueprintVisible, NoClear, Protected, NativeAccessSpecifierProtected
		class FString                                              _characterDLCText;                                       // 0x0378(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _isKiller;                                               // 0x0388(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_FY8Q[0x7];                                   // 0x0389(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSlateColor                                         _easyColor;                                              // 0x0390(0x0028) Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		struct FSlateColor                                         _intermediaryColor;                                      // 0x03B8(0x0028) Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		struct FSlateColor                                         _hardColor;                                              // 0x03E0(0x0028) Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		struct FSlateColor                                         _currentColor;                                           // 0x0408(0x0028) BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		class FText                                                _characterDLCTitle;                                      // 0x0430(0x0018) Edit, BlueprintVisible, NoClear, Protected, NativeAccessSpecifierProtected
		class FScriptMulticastDelegate                             _onTeachableTooltipTriggeredLongPressEvent;              // 0x0448(0x0010) ZeroConstructor, InstancedReference, NativeAccessSpecifierPrivate
		class FScriptMulticastDelegate                             _onPowerItemTooltipTriggeredLongPressEvent;              // 0x0458(0x0010) ZeroConstructor, InstancedReference, NativeAccessSpecifierPrivate

	public:
		void HandleTooltipLongPressedEvent(const struct FTeachableData& TeachableData, const struct FVector2D& position);
		void HandlePowerItemTooltipLongPressedEvent(const struct FInventorySlotData& SlotData, const struct FVector2D& position);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGCharacterPageScrollWidget
	 * Size -> 0x00A8 (FullSize[0x0518] - InheritedSize[0x0470])
	 */
	class UUMGCharacterPageScrollWidget : public UUMGGridPageScrollWidget
	{
	public:
		unsigned char                                              UnknownData_ZYYP[0x10];                                  // 0x0470(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              _characterButtonWidgetClass[0x30];                       // 0x0480(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		TArray<struct FCharacterSlotData>                          _charactersData;                                         // 0x04B0(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected
		bool                                                       _isKiller;                                               // 0x04C0(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_XUNE[0x7];                                   // 0x04C1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                _charactersTitleText;                                    // 0x04C8(0x0018) BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		class FText                                                _killersTitleText;                                       // 0x04E0(0x0018) BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		class FText                                                _survivorsTitleText;                                     // 0x04F8(0x0018) BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_4CXW[0x8];                                   // 0x0510(0x0008) MISSED OFFSET (PADDING)

	public:
		void HandleCharacterClicked(int32_t characterIndex);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGCharacterPrestigeIcon
	 * Size -> 0x0008 (FullSize[0x0340] - InheritedSize[0x0338])
	 */
	class UUMGCharacterPrestigeIcon : public UMobileBaseUserWidget
	{
	public:
		class UImage*                                              PrestigeImage;                                           // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGCharacterPrestigeButton
	 * Size -> 0x0028 (FullSize[0x0368] - InheritedSize[0x0340])
	 */
	class UUMGCharacterPrestigeButton : public UUMGCharacterPrestigeIcon
	{
	public:
		class UButton*                                             PrestigeButton;                                          // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        PrestigeAnimationCanvas;                                 // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_FPTJ[0x18];                                  // 0x0350(0x0018) MISSED OFFSET (PADDING)

	public:
		void SetCharacterPrestigeData(bool CanPrestige, int32_t PrestigeLevel, EPlayerRole Role);
		void OnPrestigeButtonClicked();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGCharacterPrice
	 * Size -> 0x0010 (FullSize[0x0348] - InheritedSize[0x0338])
	 */
	class UUMGCharacterPrice : public UMobileBaseUserWidget
	{
	public:
		class UTextBlock*                                          PriceTextBlock;                                          // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FColor                                              AffordableColor;                                         // 0x0340(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FColor                                              UnaffordableColor;                                       // 0x0344(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void SetCurrencyData(const struct FPurchaseCurrencyData& currencyData);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGCharacterRotationWidget
	 * Size -> 0x0038 (FullSize[0x02D0] - InheritedSize[0x0298])
	 */
	class UUMGCharacterRotationWidget : public UUserWidget
	{
	public:
		unsigned char                                              UnknownData_NZ9E[0x38];                                  // 0x0298(0x0038) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGCharacterScrollingInfoWidget
	 * Size -> 0x0160 (FullSize[0x0498] - InheritedSize[0x0338])
	 */
	class UUMGCharacterScrollingInfoWidget : public UMobileBaseUserWidget
	{
	public:
		class UUMGTeachablePerkButton*                             FirstTeachablePerk;                                      // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGTeachablePerkButton*                             SecondTeachablePerk;                                     // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGTeachablePerkButton*                             ThirdTeachablePerk;                                      // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        KillerInfoPanel;                                         // 0x0350(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGInventoryItemButton*                             KillerPower;                                             // 0x0358(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGHtmlRichText*                                    CharacterBackstoryBox;                                   // 0x0360(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FText                                                _killerPowerName;                                        // 0x0368(0x0018) BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		class FText                                                _killerSpeedText;                                        // 0x0380(0x0018) BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		class FText                                                _killerTerrorRadiusText;                                 // 0x0398(0x0018) BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		class FText                                                _killerHeightText;                                       // 0x03B0(0x0018) BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		class FText                                                _perksTitle;                                             // 0x03C8(0x0018) BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		class FText                                                _teachablesTitle;                                        // 0x03E0(0x0018) BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		class FText                                                _powerTitle;                                             // 0x03F8(0x0018) BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		class FText                                                _attributesTitle;                                        // 0x0410(0x0018) BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		class UTextBlock*                                          FirstTeachablePerkText;                                  // 0x0428(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          SecondTeachablePerkText;                                 // 0x0430(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          ThirdTeachablePerkText;                                  // 0x0438(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FText                                                _backStoryTitle;                                         // 0x0440(0x0018) BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		TArray<class UUMGTeachablePerkButton*>                     _teachablePerkArray;                                     // 0x0458(0x0010) ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
		TArray<class UTextBlock*>                                  _teachablePerkNameArray;                                 // 0x0468(0x0010) ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
		class FScriptMulticastDelegate                             _onTeachableTooltipTriggeredEvent;                       // 0x0478(0x0010) ZeroConstructor, InstancedReference, NativeAccessSpecifierPrivate
		class FScriptMulticastDelegate                             _onPowerButtonTooltipLongPressEvent;                     // 0x0488(0x0010) ZeroConstructor, InstancedReference, NativeAccessSpecifierPrivate

	public:
		void HandleTooltipLongPressedKillerPowerEvent(const struct FInventorySlotData& ItemData, const struct FVector2D& position);
		void HandleTooltipLongPressedEvent(const struct FTeachableData& TeachableData, const struct FVector2D& position);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGCharacterSelectionWidget
	 * Size -> 0x0058 (FullSize[0x0390] - InheritedSize[0x0338])
	 */
	class UUMGCharacterSelectionWidget : public UMobileBaseUserWidget
	{
	public:
		class FScriptMulticastDelegate                             OnCharacterSelected;                                     // 0x0338(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnCharacterRoleButtonClicked;                            // 0x0348(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnCharacterInfoButtonClicked;                            // 0x0358(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class UUMGCharacterPageScrollWidget*                       CharacterPageScrollWidget;                               // 0x0368(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGCharacterSelectSubmenu*                          CharacterSelectSubMenu;                                  // 0x0370(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGCharacterInfoWidget*                             CharacterInfoWidget;                                     // 0x0378(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UWidgetSwitcher*                                     CharacterSwitcher;                                       // 0x0380(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _isKiller;                                               // 0x0388(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_N4G2[0x7];                                   // 0x0389(0x0007) MISSED OFFSET (PADDING)

	public:
		void SwitchPanel();
		void BroadcastSelectedCharacter(int32_t characterIndex);
		void BroadcastRoleButtonClicked();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGCharacterSelectSubmenu
	 * Size -> 0x0020 (FullSize[0x0358] - InheritedSize[0x0338])
	 */
	class UUMGCharacterSelectSubmenu : public UMobileBaseUserWidget
	{
	public:
		unsigned char                                              UnknownData_LDOS[0x20];                                  // 0x0338(0x0020) MISSED OFFSET (PADDING)

	public:
		void SetInInfoPanelMode(bool isInInfoPanel);
		void SetCurrentRole(bool IsKiller);
		void BroadcastRoleButtonClicked();
		void BroadcastInfoButtonClicked();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGCharacterSelectSubmenuButton
	 * Size -> 0x0008 (FullSize[0x0470] - InheritedSize[0x0468])
	 */
	class UUMGCharacterSelectSubmenuButton : public UUMGBaseButtonWidget
	{
	public:
		class UCanvasPanel*                                        NotificationPanel;                                       // 0x0468(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGCharacterSlideShowWidget
	 * Size -> 0x0070 (FullSize[0x03A8] - InheritedSize[0x0338])
	 */
	class UUMGCharacterSlideShowWidget : public UMobileBaseUserWidget
	{
	public:
		unsigned char                                              _perkCategoriesIcons[0x50];                              // 0x0338(0x0050) UNKNOWN PROPERTY: MapProperty
		float                                                      SecondsBeforeNextSlide;                                  // 0x0388(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_AH8E[0x1C];                                  // 0x038C(0x001C) MISSED OFFSET (PADDING)

	public:
		void WaitAndFadeOut();
		void SwitchCharacterSlide();
		void FadeOut();
		void FadeIn();
		void DisplayCharacterSlide(const struct FCharacterSlideData& characterSlide);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGChargeableInteractionWidget
	 * Size -> 0x0028 (FullSize[0x0360] - InheritedSize[0x0338])
	 */
	class UUMGChargeableInteractionWidget : public UMobileBaseUserWidget
	{
	public:
		class UImage*                                              ItemIcon;                                                // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		ESlateVisibility                                           InteractionIconVisibility;                               // 0x0340(0x0001) Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		ESlateVisibility                                           ItemChargeVisibility;                                    // 0x0341(0x0001) Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		ESlateVisibility                                           InteractionHudVisibility;                                // 0x0342(0x0001) Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_LTYJ[0x1D];                                  // 0x0343(0x001D) MISSED OFFSET (PADDING)

	public:
		void SetSecondaryMessage(const class FString& secondMessage);
		void SetProgressbarValue(float value);
		void SetProgressBarColor(EBarColor BarColor);
		void SetProficiencyData(int32_t Index, const struct FStatusEffectSlotData& proficiencyData);
		void SetOpacity(float Opacity);
		void SetMessage(const class FString& Message);
		void SetItemChargeValue(float value);
		void SetItemChargeColor(EBarColor BarColor);
		void ClearProficienciesData();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGCloseTooltipWidget
	 * Size -> 0x0018 (FullSize[0x0350] - InheritedSize[0x0338])
	 */
	class UUMGCloseTooltipWidget : public UMobileBaseUserWidget
	{
	public:
		class UButton*                                             FullScreenButton;                                        // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_Z4O8[0x10];                                  // 0x0340(0x0010) MISSED OFFSET (PADDING)

	public:
		void HandleCloseTooltipButton();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGCommandDebugButton
	 * Size -> 0x0020 (FullSize[0x0358] - InheritedSize[0x0338])
	 */
	class UUMGCommandDebugButton : public UMobileBaseUserWidget
	{
	public:
		class UTextBlock*                                          CommandLabel;                                            // 0x0338(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UButton*                                             CommandButton;                                           // 0x0340(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FString                                              CommandName;                                             // 0x0348(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void TriggerCommand();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGControlTypeSelectionWidget
	 * Size -> 0x0040 (FullSize[0x0378] - InheritedSize[0x0338])
	 */
	class UUMGControlTypeSelectionWidget : public UMobileBaseUserWidget
	{
	public:
		class UUMGControlTypeWidget*                               SnapOnJoystick;                                          // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UUMGControlTypeWidget*                               CameraFullScreen;                                        // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UTextBlock*                                          titleText;                                               // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_BJQ7[0x28];                                  // 0x0350(0x0028) MISSED OFFSET (PADDING)

	public:
		void UpdateControlType(EAtlantaControlTypeSetting ControlType);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGControlTypeWidget
	 * Size -> 0x0040 (FullSize[0x0378] - InheritedSize[0x0338])
	 */
	class UUMGControlTypeWidget : public UMobileBaseUserWidget
	{
	public:
		class UUMGBaseButtonWidget*                                Button;                                                  // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UTextBlock*                                          MoveTextHalfScreenCanvas;                                // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UTextBlock*                                          AimTextHalfScreenCanvas;                                 // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UTextBlock*                                          MoveTextFullScreenCanvas;                                // 0x0350(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UTextBlock*                                          AimTextFullScreenCanvas;                                 // 0x0358(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_6WJG[0x18];                                  // 0x0360(0x0018) MISSED OFFSET (PADDING)

	public:
		void SetOptionChecked(bool IsChecked);
		bool IsChecked();
		void InitializeDefaultLayout(EAtlantaControlTypeSetting ControlType);
		void HandleButtonClicked();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGCustomizationCategoriesBar
	 * Size -> 0x0010 (FullSize[0x0348] - InheritedSize[0x0338])
	 */
	class UUMGCustomizationCategoriesBar : public UMobileBaseUserWidget
	{
	public:
		unsigned char                                              UnknownData_K9ZS[0x10];                                  // 0x0338(0x0010) MISSED OFFSET (PADDING)

	public:
		void SetSelectedCategory(ECustomizationCategory Category);
		void SetRole(bool IsKiller);
		void BroadcastCustomizationCategoryButtonPressed(ECustomizationCategory categoryIndex);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGCustomizationInfoWidget
	 * Size -> 0x0180 (FullSize[0x04B8] - InheritedSize[0x0338])
	 */
	class UUMGCustomizationInfoWidget : public UMobileBaseUserWidget
	{
	public:
		class UImage*                                              Icon;                                                    // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              Background;                                              // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class URichTextBlock*                                      InformationText;                                         // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FSlateColor                                         BackgroundColor;                                         // 0x0350(0x0028) Edit, Protected, NativeAccessSpecifierProtected
		struct FSlateColor                                         TextColor;                                               // 0x0378(0x0028) Edit, Protected, NativeAccessSpecifierProtected
		struct FSlateColor                                         IconColor;                                               // 0x03A0(0x0028) Edit, Protected, NativeAccessSpecifierProtected
		unsigned char                                              DefaultIcon[0x30];                                       // 0x03C8(0x0030) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              KillerIcon[0x30];                                        // 0x03F8(0x0030) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              SurvivorIcon[0x30];                                      // 0x0428(0x0030) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              BreakableIcon[0x30];                                     // 0x0458(0x0030) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              UnbreakableIcon[0x30];                                   // 0x0488(0x0030) UNKNOWN PROPERTY: SoftObjectProperty

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGCustomizationItemPriceWidget
	 * Size -> 0x0100 (FullSize[0x0438] - InheritedSize[0x0338])
	 */
	class UUMGCustomizationItemPriceWidget : public UMobileBaseUserWidget
	{
	public:
		class UTextBlock*                                          CurrencyValue;                                           // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          DiscountPercentageContainer;                             // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          DiscountPercentage;                                      // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              CurrencyIcon;                                            // 0x0350(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              CurrencyTextures[0x50];                                  // 0x0358(0x0050) UNKNOWN PROPERTY: MapProperty
		struct FSlateColor                                         AffordableCurrencyTextColor;                             // 0x03A8(0x0028) Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
		struct FSlateColor                                         AffordableSpecialCurrencyTextColor;                      // 0x03D0(0x0028) Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
		struct FSlateColor                                         NonAffordableCurrencyTextColor;                          // 0x03F8(0x0028) Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
		class FString                                              _itemId;                                                 // 0x0420(0x0010) ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		ECurrencyType                                              _currencyType;                                           // 0x0430(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _hasDiscountPercentage;                                  // 0x0431(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_T8ZM[0x6];                                   // 0x0432(0x0006) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGCustomizationItemBuyButton
	 * Size -> 0x0088 (FullSize[0x04C0] - InheritedSize[0x0438])
	 */
	class UUMGCustomizationItemBuyButton : public UUMGCustomizationItemPriceWidget
	{
	public:
		unsigned char                                              UnknownData_E61L[0x10];                                  // 0x0438(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UImage*                                              CurrencyColorStripe;                                     // 0x0448(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TMap<ECurrencyType, struct FColor>                         _currencyStripeColors;                                   // 0x0450(0x0050) Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
		struct FLinearColor                                        _disabledOpacity;                                        // 0x04A0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                        _enabledOpacity;                                         // 0x04B0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void BroadcastUnlockWithCurrency();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGCustomizationItemWidget
	 * Size -> 0x00A0 (FullSize[0x03D8] - InheritedSize[0x0338])
	 */
	class UUMGCustomizationItemWidget : public UMobileBaseUserWidget
	{
	public:
		unsigned char                                              UnknownData_DFB1[0x10];                                  // 0x0338(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UImage*                                              RarityBackground;                                        // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              PaintOverlay;                                            // 0x0350(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              Icon;                                                    // 0x0358(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        NewIndicator;                                            // 0x0360(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        OutfitIndicator;                                         // 0x0368(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UVerticalBox*                                        PricesContainer;                                         // 0x0370(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        ItemSelectedBorder;                                      // 0x0378(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        EquippedContainer;                                       // 0x0380(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              _customizationItemPriceWidgetClass[0x30];                // 0x0388(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		TArray<class UUMGCustomizationItemPriceWidget*>            _priceWidgets;                                           // 0x03B8(0x0010) ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
		int32_t                                                    _itemIndex;                                              // 0x03C8(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FName                                                _itemId;                                                 // 0x03CC(0x000C) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void BroadcastAvailableItemSelected();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGCustomizationPageScrollWidget
	 * Size -> 0x0068 (FullSize[0x04D8] - InheritedSize[0x0470])
	 */
	class UUMGCustomizationPageScrollWidget : public UUMGGridPageScrollWidget
	{
	public:
		unsigned char                                              UnknownData_FLT2[0x10];                                  // 0x0470(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              _customizationItemWidgetClass[0x30];                     // 0x0480(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		TArray<struct FStoreItemSlotData>                          _availableItemsData;                                     // 0x04B0(0x0010) ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected
		TArray<class UUMGCustomizationItemWidget*>                 _itemWidgets;                                            // 0x04C0(0x0010) ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_NB2R[0x8];                                   // 0x04D0(0x0008) MISSED OFFSET (PADDING)

	public:
		void OnAvailableItemSelectedCallback(int32_t itemIndex);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGCustomizationScreenWidget
	 * Size -> 0x00B0 (FullSize[0x03E8] - InheritedSize[0x0338])
	 */
	class UUMGCustomizationScreenWidget : public UMobileBaseUserWidget
	{
	public:
		unsigned char                                              UnknownData_AS8S[0x30];                                  // 0x0338(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UUMGCustomizationPageScrollWidget*                   PageScrollWidget;                                        // 0x0368(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGCustomizationCategoriesBar*                      CustomizationCategoriesBar;                              // 0x0370(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          CategoryLabel;                                           // 0x0378(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          CurrentlyEquippedLabel;                                  // 0x0380(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        AvailableInOutfitsContainer;                             // 0x0388(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        UnlockItemContainer;                                     // 0x0390(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGCustomizationItemWidget*                         OutfitItem;                                              // 0x0398(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UVerticalBox*                                        PriceContainer;                                          // 0x03A0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              PriceButtonWidgetClass[0x30];                            // 0x03A8(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              UnknownData_Z9BN[0x4];                                   // 0x03D8(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                _currentSelectedItem;                                    // 0x03DC(0x000C) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void SetCategoryLabel(ECustomizationCategory Category);
		void BroadcastUnlockWithCurrencyEvent(int32_t currencyId, const class FString& combinedItem);
		void BroadcastCustomizationCategoryButtonPressed(int32_t categoryIndex);
		void BroadcastAvailableItemSelectedEvent(int32_t itemIndex, const struct FStoreItemSlotData& SelectedItem, const struct FStoreItemSlotData& parentItem);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGCustomizationTooltipContentWidget
	 * Size -> 0x0030 (FullSize[0x0368] - InheritedSize[0x0338])
	 */
	class UUMGCustomizationTooltipContentWidget : public UMobileBaseUserWidget
	{
	public:
		class UUMGHtmlRichText*                                    ItemDescription;                                         // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGCustomizationInfoWidget*                         OutfitInformation;                                       // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGCustomizationInfoWidget*                         RoleInformation;                                         // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGCustomizationInfoWidget*                         ReplacementInformation;                                  // 0x0350(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGCustomizationItemPriceWidget*                    AuricCellsPrice;                                         // 0x0358(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGCustomizationItemPriceWidget*                    IridescentShardsPrice;                                   // 0x0360(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGCustomizationTooltipHeaderWidget
	 * Size -> 0x0018 (FullSize[0x0350] - InheritedSize[0x0338])
	 */
	class UUMGCustomizationTooltipHeaderWidget : public UMobileBaseUserWidget
	{
	public:
		class UTextBlock*                                          Title;                                                   // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          CollectionName;                                          // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          CategoryAndRarityText;                                   // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void SetOutfitComposition(bool IsUnbreakable, TArray<ECustomizationCategory> composition);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGDailyRewardWidget
	 * Size -> 0x00A0 (FullSize[0x0508] - InheritedSize[0x0468])
	 */
	class UUMGDailyRewardWidget : public UUMGBaseButtonWidget
	{
	public:
		class FScriptMulticastDelegate                             OnDailyRewardStateChanged;                               // 0x0468(0x0010) ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic
		bool                                                       IsMarkedSpecial;                                         // 0x0478(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		EUMGDailyRewardWidgetState                                 State;                                                   // 0x0479(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_1JEW[0x6];                                   // 0x047A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTextBlock*                                          AmountText;                                              // 0x0480(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          ItemNameText;                                            // 0x0488(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          RewardNumberText;                                        // 0x0490(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UWidgetSwitcher*                                     RewardTypeSwitcher;                                      // 0x0498(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        ItemInfoPanel;                                           // 0x04A0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        OfferingInfoPanel;                                       // 0x04A8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        GenericInfoPanel;                                        // 0x04B0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        FreeTicketInfoPanel;                                     // 0x04B8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        CrateKeyInfoPanel;                                       // 0x04C0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              ItemIcon;                                                // 0x04C8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              OfferingIcon;                                            // 0x04D0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              GenericRewardIcon;                                       // 0x04D8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              FreeTicketRewardIcon;                                    // 0x04E0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              ParentItemIcon;                                          // 0x04E8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              CrateKeyRewardIcon;                                      // 0x04F0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        ParentItemPanel;                                         // 0x04F8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_OPF3[0x8];                                   // 0x0500(0x0008) MISSED OFFSET (PADDING)

	public:
		void StopIdleAnimationForState(EUMGDailyRewardWidgetState inState);
		void SetStateVisuals(EUMGDailyRewardWidgetState inState);
		void SetRarityColors(const struct FColor& BackgroundColor, const struct FColor& TintColor);
		void PlayIdleAnimationForState(EUMGDailyRewardWidgetState inState);
		void HandleUnlockRewardAnimationFinished();
		void HandleUnlockMysteryRewardAnimationFinished();
		void HandleDiscoverRewardAnimationFinished();
		void HandleCollectRewardAnimationFinished();
		void HandleCollectButtonClick();
		void DiscoverMysteryReward();
		void CollectReward();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGDownloadProgressionWidget
	 * Size -> 0x0018 (FullSize[0x0350] - InheritedSize[0x0338])
	 */
	class UUMGDownloadProgressionWidget : public UMobileBaseUserWidget
	{
	public:
		class UProgressBar*                                        ProgressBar;                                             // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          DownloadPercentage;                                      // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          DownloadDescription;                                     // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void UpdateProgression(const struct FDownloadProgression& DownloadProgression);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGDragWidget
	 * Size -> 0x0020 (FullSize[0x02B8] - InheritedSize[0x0298])
	 */
	class UUMGDragWidget : public UUserWidget
	{
	public:
		unsigned char                                              UnknownData_84RK[0x10];                                  // 0x0298(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UCustomWidgetWrapper_HudEditor*>              _allEditableWidgets;                                     // 0x02A8(0x0010) ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate

	public:
		void SetClampToViewportDirty();
		TArray<class UCustomWidgetWrapper_HudEditor*> GetAllEditableWidgets();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGDragWidget_HudEditor
	 * Size -> 0x0060 (FullSize[0x0318] - InheritedSize[0x02B8])
	 */
	class UUMGDragWidget_HudEditor : public UUMGDragWidget
	{
	public:
		unsigned char                                              UnknownData_4V7D[0x20];                                  // 0x02B8(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              OnSelectionWidgetClass;                                  // 0x02D8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              DragLinkWidgetClass;                                     // 0x02E0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCustomWidgetWrapper_HudEditor*                      _customWrapper;                                          // 0x02E8(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UUserWidget*                                         _selectionWidget;                                        // 0x02F0(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UUMGHudEditorDragConstraintWidget*                   _dragLinkWidget;                                         // 0x02F8(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UUMGDragWidget_HudEditor*                            _parentLinkWidget;                                       // 0x0300(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UUMGDragWidget_HudEditor*                            _childLinkWidget;                                        // 0x0308(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_FZAT[0x8];                                   // 0x0310(0x0008) MISSED OFFSET (PADDING)

	public:
		void SetOnSelection(bool IsSelected);
		class UCustomWidgetWrapper_HudEditor* GetCustomWrapper();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGEndGameCollapseProgressWidget
	 * Size -> 0x0040 (FullSize[0x0378] - InheritedSize[0x0338])
	 */
	class UUMGEndGameCollapseProgressWidget : public UMobileBaseUserWidget
	{
	public:
		class UProgressBar*                                        ProgressBar;                                             // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCanvasPanel*                                        MarkerLeftCanvas;                                        // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCanvasPanel*                                        MarkerRightCanvas;                                       // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UHorizontalBoxSlot*                                  _markerLeftBox;                                          // 0x0350(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UHorizontalBoxSlot*                                  _markerRightBox;                                         // 0x0358(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AAW0[0x18];                                  // 0x0360(0x0018) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGEndGameCollapseWidget
	 * Size -> 0x0080 (FullSize[0x03B8] - InheritedSize[0x0338])
	 */
	class UUMGEndGameCollapseWidget : public UMobileBaseUserWidget
	{
	public:
		unsigned char                                              UnknownData_K7G7[0x8];                                   // 0x0338(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      _progressBarInterpSpeed;                                 // 0x0340(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _slowMode;                                               // 0x0344(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_KYQ3[0x3];                                   // 0x0345(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCanvasPanel*                                        NormalBar;                                               // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        SlowBar;                                                 // 0x0350(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGEndGameCollapseProgressWidget*                   NormalProgressBar;                                       // 0x0358(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGEndGameCollapseProgressWidget*                   SlowProgressBar;                                         // 0x0360(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_UDHV[0x48];                                  // 0x0368(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UUMGEndGameCollapseProgressWidget*                   _topBar;                                                 // 0x03B0(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void PlayToZeroAnimation();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGFogWidget
	 * Size -> 0x0048 (FullSize[0x0380] - InheritedSize[0x0338])
	 */
	class UUMGFogWidget : public UMobileBaseUserWidget
	{
	public:
		class UUMGBankAndPlayerInfoWidget*                         BankAndPlayerInfoWidget;                                 // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9NF8[0x40];                                  // 0x0340(0x0040) MISSED OFFSET (PADDING)

	public:
		void OnRankTooltipTriggered(const struct FTooltipPressedData& TooltipPressedData);
		void OnLevelTooltipTriggered(const struct FTooltipPressedData& TooltipPressedData);
		void OnCurrencyTooltipTriggered(const struct FTooltipPressedData& TooltipPressedData, ECurrencyType CurrencyType);
		void HandleOnSettingButtonClick();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGGameplayAlertWidget
	 * Size -> 0x0000 (FullSize[0x02C8] - InheritedSize[0x02C8])
	 */
	class UUMGGameplayAlertWidget : public UUMGBaseAlertWidget
	{
	public:
		void UpdateWidget(const struct FStatusEffectSlotData& statusEffectData, const struct FInventorySlotData& originatorData);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGGhostfaceSpecific
	 * Size -> 0x0010 (FullSize[0x0348] - InheritedSize[0x0338])
	 */
	class UUMGGhostfaceSpecific : public UMobileBaseUserWidget
	{
	public:
		class UImage*                                              LeftLeanImage;                                           // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UImage*                                              RightLeanImage;                                          // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGHtmlRichText
	 * Size -> 0x0000 (FullSize[0x06D0] - InheritedSize[0x06D0])
	 */
	class UUMGHtmlRichText : public URichTextBlock
	{
	public:
		void SetHTMLText(const class FString& InText);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGHtmlTextDecorator
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UUMGHtmlTextDecorator : public URichTextBlockDecorator
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGHudEditorDragConstraintWidget
	 * Size -> 0x0040 (FullSize[0x02D8] - InheritedSize[0x0298])
	 */
	class UUMGHudEditorDragConstraintWidget : public UUserWidget
	{
	public:
		class USizeBox*                                            LinkSizeBox;                                             // 0x0298(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UUserWidget*                                         _childWidget;                                            // 0x02A0(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UUserWidget*                                         _parentWidget;                                           // 0x02A8(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_U1OA[0x28];                                  // 0x02B0(0x0028) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGHudEditorLayoutScreen
	 * Size -> 0x0010 (FullSize[0x02A8] - InheritedSize[0x0298])
	 */
	class UUMGHudEditorLayoutScreen : public UUserWidget
	{
	public:
		TArray<class UUMGDragWidget_HudEditor*>                    _editableWidgets;                                        // 0x0298(0x0010) ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGHudEditorLayoutWidget
	 * Size -> 0x0078 (FullSize[0x0330] - InheritedSize[0x02B8])
	 */
	class UUMGHudEditorLayoutWidget : public UUMGDragWidget
	{
	public:
		unsigned char                                              UnknownData_NT68[0x10];                                  // 0x02B8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UUMGHudEditorScreen*                                 hudEditorScreen;                                         // 0x02C8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       _onSaveOverlapSound;                                     // 0x02D0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UUMGDragWidget_HudEditor*                            _currentWidgetToEdit;                                    // 0x02D8(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TMap<class UUMGHudEditorLayoutScreen*, bool>               _isSaveDirtyMap;                                         // 0x02E0(0x0050) Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate

	public:
		void ShowSurvivorLayout();
		void ShowKillerLayout();
		void SetWidgetToEdit(class UUMGDragWidget_HudEditor* Widget);
		void SetSaveOverlapSound(class UAkAudioEvent* onSaveOverlapSound);
		void SetHudEditorScreen(class UUMGHudEditorScreen* hudEditorScreen);
		void SaveLayout();
		void ResetLayout();
		void OnSaveDirty(bool IsDirty);
		class UCustomWidgetWrapper_HudEditor* GetHudEditorWrapperToEdit();
		class UUMGDragWidget_HudEditor* GetCurrentDragWidget();
		void FlipLayout();
		void FlagSaveAsDirty();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGHudEditorScreen
	 * Size -> 0x0070 (FullSize[0x0308] - InheritedSize[0x0298])
	 */
	class UUMGHudEditorScreen : public UUserWidget
	{
	public:
		class UUMGHudEditorLayoutWidget*                           _hudEditorLayoutWidget;                                  // 0x0298(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UUMGHudEditorVersionWidget*                          _versionSwapWidget;                                      // 0x02A0(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TMap<EPlayerRole, class UUMGHudEditorLayoutScreen*>        _storedLayoutScreens;                                    // 0x02A8(0x0050) ExportObject, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
		class UUMGHudEditorLayoutScreen*                           _currentLayoutScreen;                                    // 0x02F8(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UAkAudioEvent*                                       _onDropOverlapSound;                                     // 0x0300(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void ShowHudLayout(EPlayerRole Role);
		void SetWidgets(class UUMGHudEditorLayoutWidget* hudEditorLayoutWidget, class UUMGHudEditorVersionWidget* versionSwapWidget);
		void SetEditorDropErrorOverlapSound(class UAkAudioEvent* onDropOverlapSound);
		void RegisterEditorLayoutScreen(EPlayerRole Role, class UUMGHudEditorLayoutScreen* screen);
		void Quit();
		class UUMGHudEditorVersionWidget* GetVersionSwapWidget();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGHudEditorVersionWidget
	 * Size -> 0x0028 (FullSize[0x02C0] - InheritedSize[0x0298])
	 */
	class UUMGHudEditorVersionWidget : public UUserWidget
	{
	public:
		class UButton*                                             VersionButton;                                           // 0x0298(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGDragWidget_HudEditor*                            _onEditWidget;                                           // 0x02A0(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_NCLR[0x18];                                  // 0x02A8(0x0018) MISSED OFFSET (PADDING)

	public:
		void Show();
		void OnButtonClick();
		void Hide();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGInboxMessageEntryWidget
	 * Size -> 0x0068 (FullSize[0x0300] - InheritedSize[0x0298])
	 */
	class UUMGInboxMessageEntryWidget : public UUserWidget
	{
	public:
		struct FInboxMessageUIData                                 _messageData;                                            // 0x0298(0x0060) BlueprintVisible, ExposeOnSpawn, NativeAccessSpecifierPublic
		bool                                                       _isCurrentSelection;                                     // 0x02F8(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ULDC[0x7];                                   // 0x02F9(0x0007) MISSED OFFSET (PADDING)

	public:
		void UpdateMessageData(const struct FInboxMessageUIData& messageData);
		void SetMessageData(const struct FInboxMessageUIData& messageData);
		struct FInboxMessageElapsedTime GetElapsedTime();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGInboxScreen
	 * Size -> 0x00A8 (FullSize[0x03E0] - InheritedSize[0x0338])
	 */
	class UUMGInboxScreen : public UMobileBaseUserWidget
	{
	public:
		unsigned char                                              UnknownData_FYTH[0xA8];                                  // 0x0338(0x00A8) MISSED OFFSET (PADDING)

	public:
		void UpdateMessagesCount(EInboxMessageUIType MessageType, int32_t unclaimedCount, int32_t unreadCount, int32_t TotalCount);
		void UpdateMessage(const struct FInboxMessageUIData& Message);
		void SetSocialMessages(TArray<struct FInboxMessageUIData> messages, int32_t unreadCount, int32_t TotalCount);
		void SetRewardsMessages(TArray<struct FInboxMessageUIData> messages, int32_t unclaimedCount, int32_t unreadCount, int32_t TotalCount);
		void SetNewsMessages(TArray<struct FInboxMessageUIData> messages, int32_t unreadCount, int32_t TotalCount);
		bool RemoveMessageFromPanel(class UPanelWidget* containingPanel, const class FString& MessageId, bool hasSeparator);
		void RemoveMessage(const class FString& MessageId);
		void ReadMessageEvent(const class FString& MessageId);
		void ReadAllMessagesEvent(EInboxMessageUIType MessageType);
		int32_t FindWidgetIndexByMessageId(class UPanelWidget* containingPanel, const class FString& MessageId);
		class UUMGInboxMessageEntryWidget* FindMessageWidgetById(class UPanelWidget* containingPanel, const class FString& MessageId);
		void CleanMessageEvent(const class FString& MessageId);
		void CleanAllMessagesEvent(EInboxMessageUIType MessageType);
		void ClaimMessageEvent(const class FString& MessageId);
		void ClaimAllMessagesEvent(EInboxMessageUIType MessageType);
		void ButtonClickEvent(EInboxScreenButton buttonId);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UmgPlayerHud
	 * Size -> 0x02C8 (FullSize[0x0560] - InheritedSize[0x0298])
	 */
	class UUmgPlayerHud : public UUserWidget
	{
	public:
		class UCanvasPanel*                                        GameStartingPanel;                                       // 0x0298(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCanvasPanel*                                        InGamePanel;                                             // 0x02A0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAtlantaSkillCheckWidget*                            SkillCheckWidget;                                        // 0x02A8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UUMGMapThemeWidget*                                  MapThemeWidget;                                          // 0x02B0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UUMGAlertsWidget*                                    AtlantaAlertsWidget;                                     // 0x02B8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UUMGObjectivesWidget*                                AtlantaObjectivesWidget;                                 // 0x02C0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UPerkHudWidget*                                      AtlantaPerksWidget;                                      // 0x02C8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UPerkActionButton*                                   ActivablePerkActionButton;                               // 0x02D0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UUMGStatusEffectsWidget*                             AtlantaStatusEffectsWidget;                              // 0x02D8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UUMGChargeableInteractionWidget*                     AtlantaInteractionWidget;                                // 0x02E0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAtlantaPromptWidget*                                AtlantaPromptWidget;                                     // 0x02E8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAtlantaPromptWidget*                                AtlantaTutorialPromptWidget;                             // 0x02F0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UUMGPlayersStatusWidget*                             AtlantaPlayersStatusWidget;                              // 0x02F8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UVerticalBox*                                        AtlantaObjectivesContainer;                              // 0x0300(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UActionButton*                                       ActionButton;                                            // 0x0308(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCanvasPanel*                                        ActionButtonContainer;                                   // 0x0310(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UPerkSoundHudWidget*                                 PerkSoundHudWidget;                                      // 0x0318(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMobileBaseUserWidget*                               CenterInteractionButton;                                 // 0x0320(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCanvasPanel*                                        CenterInteractionContainer;                              // 0x0328(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCanvasPanel*                                        CancelButtonContainer;                                   // 0x0330(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UUMGEndGameCollapseWidget*                           EndGameCollapseWidget;                                   // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnPerkClickedEvent;                                      // 0x0340(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnTutorialLeaveClickedEvent;                             // 0x0350(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnTutorialNextClickedEvent;                              // 0x0360(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnSettingsClickedEvent;                                  // 0x0370(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class ADBDPlayerController*                                LocalController;                                         // 0x0380(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAtlantaHudDirectionalStick*                         AtlantaDirectionalStick;                                 // 0x0388(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        AtlantaDirectionalStickContainer;                        // 0x0390(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class ADBDPlayer*                                          _localPlayer;                                            // 0x0398(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_4JKA[0x8];                                   // 0x03A0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSlateBrush                                         _unlockedVirtualJoystickThumbImage;                      // 0x03A8(0x0090) Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate
		struct FSlateBrush                                         _lockedVirtualJoystickThumbImage;                        // 0x0438(0x0090) Edit, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_K8Y0[0x98];                                  // 0x04C8(0x0098) MISSED OFFSET (PADDING)

	public:
		void TutorialTallyNextSelected();
		void TutorialTallyLeaveSelected();
		void SetVirtualJoystickThumbImage(bool locked);
		void OnSettingsButtonPressed();
		void OnPerkClicked(const class FName& perkId, bool clickedOnPerksWidget);
		void OnInteractionStarted(class UInteractionDefinition* Interaction);
		void OnInteractionEnded(class UInteractionDefinition* Interaction);
		void OnInitializeHUD();
		bool IsInteractionAvailable(EInputInteractionType interactionType);
		bool IsInteractionAllowed(class UInteractionDefinition* Interaction);
		bool IsInitialized();
		struct FSlateBrush GetInteractionIconByType(EInputInteractionType interactionInputType);
		class UInteractionDefinition* GetCurrentOrAvailableInteractionOfType(EInputInteractionType interactionInputType);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UmgPlayableHud
	 * Size -> 0x0000 (FullSize[0x0560] - InheritedSize[0x0560])
	 */
	class UUmgPlayableHud : public UUmgPlayerHud
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UmgKillerHud
	 * Size -> 0x0288 (FullSize[0x07E8] - InheritedSize[0x0560])
	 */
	class UUmgKillerHud : public UUmgPlayableHud
	{
	public:
		class UPowerButton*                                        PowerButton;                                             // 0x0560(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCanvasPanel*                                        PowerButtonContainer;                                    // 0x0568(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UPowerButton*                                        SecondAbilityButton;                                     // 0x0570(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCanvasPanel*                                        SecondAbilityButtonContainer;                            // 0x0578(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UActionButton*                                       AttackButton;                                            // 0x0580(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCanvasPanel*                                        AttackButtonContainer;                                   // 0x0588(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UActionButton*                                       DropSurvivorButton;                                      // 0x0590(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCanvasPanel*                                        DropSurvivorButtonContainer;                             // 0x0598(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMobileBaseUserWidget*                               CancelButton;                                            // 0x05A0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UUMGGhostfaceSpecific*                               GhostfaceSpecific;                                       // 0x05A8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCanvasPanel*                                        SecondAttackButtonContainer;                             // 0x05B0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAtlantaHudPowerAttackJoystick*                      HudPowerAttackJoystick;                                  // 0x05B8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ASlasherPlayer*                                      killer;                                                  // 0x05C0(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_S9BE[0x8];                                   // 0x05C8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       _isCancelButtonPressed;                                  // 0x05D0(0x0001) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _isAttackButtonPressed;                                  // 0x05D1(0x0001) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _isAttackJoystickActivated;                              // 0x05D2(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _isPowerAttackJoystickActivated;                         // 0x05D3(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_EUDQ[0x4];                                   // 0x05D4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSlateBrush                                         _powerAttackJoystickBackgroundImage;                     // 0x05D8(0x0090) Edit, Protected, NativeAccessSpecifierProtected
		struct FSlateBrush                                         _DefaultAttackJoystickIconPressedImage;                  // 0x0668(0x0090) Edit, Protected, NativeAccessSpecifierProtected
		struct FSlateBrush                                         _DefaultAttackJoystickIconUnpressedImage;                // 0x06F8(0x0090) Edit, Protected, NativeAccessSpecifierProtected
		struct FVector2D                                           _powerAttackJoystickThumbPressedSize;                    // 0x0788(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FVector2D                                           _powerAttackJoystickThumbUnpressedSize;                  // 0x0790(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_K9BQ[0x50];                                  // 0x0798(0x0050) MISSED OFFSET (PADDING)

	public:
		void UpdatePowerButtonTier(int32_t previousTier, int32_t currentTier, bool IsFirstTime);
		bool ShouldShowInteractionHighlight(EInputInteractionType interactionType);
		void SetPowerIconFromItem(class ACollectable* Item, EInventoryType inventoryType);
		void SetPowerAttackJoystickThumbImage(bool Pressed);
		void SetPowerAttackJoystickPosition(struct FVector2D* position);
		void RespondToVirtualJoystickPressChanged(int32_t controlIndex, bool Pressed);
		void OnSecondAbilityButtonPressed();
		void OnSecondAbilityButtonLongPressed();
		void OnPowerButtonReleased();
		void OnPowerButtonPressed();
		void OnCancelButtonReleased();
		void OnCancelButtonPressed();
		void OnAttackButtonReleased();
		void OnAttackButtonPressed();
		void OnActionButtonReleased();
		void OnActionButtonPressed();
		bool IsPowerButtonAvailable();
		bool IsCancelPowerButtonAvailable();
		bool IsAttackButtonVisible();
		void InitializePowerAttackJoystickPosition();
		void HandleOnAttackButtonReleased();
		void HandleOnAttackButtonPressed();
		class UInteractionDefinition* GetCurrentPowerUseInteraction();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGLacerationStatusEffectUI
	 * Size -> 0x0080 (FullSize[0x03B8] - InheritedSize[0x0338])
	 */
	class UUMGLacerationStatusEffectUI : public UMobileBaseUserWidget
	{
	public:
		class UImage*                                              LacerationDecoration;                                    // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              LacerationFill;                                          // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<int32_t>                                            _maximumLacerationDefinitions;                           // 0x0348(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
		TArray<class UPaperSprite*>                                _lacerationDecorationImages;                             // 0x0358(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
		TArray<class UTexture2D*>                                  _lacerationFillImages;                                   // 0x0368(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
		struct FLinearColor                                        _lacerationDefaultColor;                                 // 0x0378(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                        _lacerationFillFullColor;                                // 0x0388(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FName                                                _glassShatterDisintigrateAnimationName;                  // 0x0398(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_ZL7D[0x4];                                   // 0x03A4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMaterialInstanceDynamic*                            _lacerationFillFullMI;                                   // 0x03A8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_3HOY[0x8];                                   // 0x03B0(0x0008) MISSED OFFSET (PADDING)

	public:
		void OnFinishedBoomAnimation();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGLandingPageButtonWidget
	 * Size -> 0x0050 (FullSize[0x04B8] - InheritedSize[0x0468])
	 */
	class UUMGLandingPageButtonWidget : public UUMGBaseButtonWidget
	{
	public:
		class UCanvasPanel*                                        BigTag;                                                  // 0x0468(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        SmallTag;                                                // 0x0470(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          TagText;                                                 // 0x0478(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class URichTextBlock*                                      BannerTitleText;                                         // 0x0480(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              BannerImage;                                             // 0x0488(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              TitleColorBg;                                            // 0x0490(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              BorderColor;                                             // 0x0498(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_SGRP[0x18];                                  // 0x04A0(0x0018) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGLevelBannerWidget
	 * Size -> 0x0060 (FullSize[0x0398] - InheritedSize[0x0338])
	 */
	class UUMGLevelBannerWidget : public UMobileBaseUserWidget
	{
	public:
		unsigned char                                              UnknownData_OE0C[0x8];                                   // 0x0338(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UButton*                                             TooltipButton;                                           // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTextBlock*                                          PlayerLevelText;                                         // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          PlayerDevotionText;                                      // 0x0350(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          PlayerCurrentExperienceText;                             // 0x0358(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          PlayerNextLevelExperienceText;                           // 0x0360(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UProgressBar*                                        XPProgressBar;                                           // 0x0368(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UHorizontalBox*                                      XPTextContainer;                                         // 0x0370(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAkAudioEvent*                                       OnLongPressSound;                                        // 0x0378(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              TooltipHighlightPicture;                                 // 0x0380(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_Y4E2[0x10];                                  // 0x0388(0x0010) MISSED OFFSET (PADDING)

	public:
		void StopHighlight();
		void StartHighlight();
		void SetProgressbarValue(float Progress);
		void SetInfoBP(int32_t PlayerLevel, int32_t PlayerPrestige, int32_t CurrentExperience, int32_t NextLevelExperience);
		void SetInfo(int32_t PlayerLevel, int32_t PlayerPrestige, int32_t CurrentExperience, int32_t NextLevelExperience);
		void SetExperienceVisibilityBP(bool isExperienceVisible, bool isBig);
		void OnTooltipButtonLongPressEvent();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGLoadingScreenWidget
	 * Size -> 0x0030 (FullSize[0x0368] - InheritedSize[0x0338])
	 */
	class UUMGLoadingScreenWidget : public UMobileBaseUserWidget
	{
	public:
		class UTextBlock*                                          Description;                                             // 0x0338(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              HintIcon;                                                // 0x0340(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UProgressBar*                                        LoadingBar;                                              // 0x0348(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UPanelWidget*                                        KillerPanel;                                             // 0x0350(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UPanelWidget*                                        SurvivorPanel;                                           // 0x0358(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          Title;                                                   // 0x0360(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGLoadoutBaseWidget
	 * Size -> 0x0058 (FullSize[0x0390] - InheritedSize[0x0338])
	 */
	class UUMGLoadoutBaseWidget : public UMobileBaseUserWidget
	{
	public:
		class UUMGLoadoutItemButton*                               ItemOrPowerButton;                                       // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGLoadoutItemButton*                               AddonFirstButton;                                        // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGLoadoutItemButton*                               AddonSecondButton;                                       // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGLoadoutItemButton*                               OfferingButton;                                          // 0x0350(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGLoadoutItemButton*                               PerkFirstButton;                                         // 0x0358(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGLoadoutItemButton*                               PerkSecondButton;                                        // 0x0360(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGLoadoutItemButton*                               PerkThirdButton;                                         // 0x0368(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGLoadoutItemButton*                               PerkFourthButton;                                        // 0x0370(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<class UUMGLoadoutItemButton*>                       LoadoutItemButtons;                                      // 0x0378(0x0010) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected
		bool                                                       usingMatchRules;                                         // 0x0388(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       perkSlotsLockedByAdmin;                                  // 0x0389(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       IsSlasher;                                               // 0x038A(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_5TVB[0x5];                                   // 0x038B(0x0005) MISSED OFFSET (PADDING)

	public:
		void SetLoadoutData(TArray<struct FInventorySlotData> loadoutData, bool usingMatchRules, bool perkSlotsLockedByAdmin, ELoadoutSlot LoadoutSlot, bool IsSlasher, bool isClickable);
		void SetIsSelectedLoadoutItemButton(ELoadoutSlot LoadoutSlot);
		void SetDividerImageColor(const struct FLinearColor& Color);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGLoadoutFilterButton
	 * Size -> 0x0028 (FullSize[0x0360] - InheritedSize[0x0338])
	 */
	class UUMGLoadoutFilterButton : public UMobileBaseUserWidget
	{
	public:
		class UButton*                                             ActionButton;                                            // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnLoadoutFilterButtonClicked;                            // 0x0340(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S3IV[0x10];                                  // 0x0350(0x0010) MISSED OFFSET (PADDING)

	public:
		void SetIsSelected(bool IsSelected);
		void SetIcon();
		void OnActionButtonClick();
		void InitFilterButton(const class FName& filterName);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGLoadoutFilterWidget
	 * Size -> 0x0078 (FullSize[0x03B0] - InheritedSize[0x0338])
	 */
	class UUMGLoadoutFilterWidget : public UMobileBaseUserWidget
	{
	public:
		class FScriptMulticastDelegate                             OnLoadoutFilterClicked;                                  // 0x0338(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              AtlantaLoadoutFilterButtonClass[0x30];                   // 0x0348(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		class UHorizontalBox*                                      FilterContainerBox;                                      // 0x0378(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<class FName>                                        Filters;                                                 // 0x0380(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected
		TArray<class UUMGLoadoutFilterButton*>                     FilterButtons;                                           // 0x0390(0x0010) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected
		class UUMGLoadoutFilterButton*                             SelectedFilterButton;                                    // 0x03A0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_HYGS[0x8];                                   // 0x03A8(0x0008) MISSED OFFSET (PADDING)

	public:
		void OnFilterButtonClicked(const class FName& filterName);
		void InitFilterWidget();
		void ClearSelectedFilter();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGLoadoutPageScrollWidget
	 * Size -> 0x0110 (FullSize[0x0578] - InheritedSize[0x0468])
	 */
	class UUMGLoadoutPageScrollWidget : public UUMGPageScrollWidget
	{
	public:
		bool                                                       ShouldResizeWidget;                                      // 0x0468(0x0001) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_85M0[0x7];                                   // 0x0469(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              _itemWidgetClass[0x30];                                  // 0x0470(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		EInventoryGridFormat                                       _gridFormat;                                             // 0x04A0(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_S4WH[0x7];                                   // 0x04A1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FInventorySlotData>                          _inventoryData;                                          // 0x04A8(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected
		TArray<int32_t>                                            _inventorySelectedItemIndexes;                           // 0x04B8(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected
		class FString                                              _subtitle;                                               // 0x04C8(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_8AR3[0xA0];                                  // 0x04D8(0x00A0) MISSED OFFSET (PADDING)

	public:
		void SetItemWidgetClass();
		void SetItemIsSelected(int32_t Index, bool IsSelected);
		void SetInventoryData(EInventoryGridFormat gridFormat, TArray<struct FInventorySlotData> InventoryData, TArray<int32_t> selectedItemsIndexes, const class FString& trackingItemName, const class FString& Subtitle);
		void HandleItemClicked(const class FName& ItemId);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGLoadoutWidget
	 * Size -> 0x0068 (FullSize[0x03F8] - InheritedSize[0x0390])
	 */
	class UUMGLoadoutWidget : public UUMGLoadoutBaseWidget
	{
	public:
		class FText                                                InventoryItemTypeText;                                   // 0x0390(0x0018) BlueprintVisible, BlueprintReadOnly, Transient, NativeAccessSpecifierPublic
		class FText                                                InventoryFilterText;                                     // 0x03A8(0x0018) BlueprintVisible, Transient, NativeAccessSpecifierPublic
		class UUMGLoadoutPageScrollWidget*                         PageScrollWidget;                                        // 0x03C0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FText                                                LoadoutTitleText;                                        // 0x03C8(0x0018) BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected
		class FText                                                InventoryPanelTitleText;                                 // 0x03E0(0x0018) BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected

	public:
		void SetInventoryData(EInventoryGridFormat gridFormat, TArray<struct FInventorySlotData> InventoryData, TArray<int32_t> selectedItemsIndexes, const class FString& trackingItemName, const class FString& Subtitle);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGLobbyJoinedWidget
	 * Size -> 0x0080 (FullSize[0x03B8] - InheritedSize[0x0338])
	 */
	class UUMGLobbyJoinedWidget : public UMobileBaseUserWidget
	{
	public:
		bool                                                       LocalPlayerIsSlasher;                                    // 0x0338(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BUXT[0x7];                                   // 0x0339(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                TextLeaveLobby;                                          // 0x0340(0x0018) BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected
		class FText                                                TextPlayerNotReadyYet;                                   // 0x0358(0x0018) BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected
		class FText                                                TextWaitingPlayers;                                      // 0x0370(0x0018) BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected
		class FText                                                TextToBeReady;                                           // 0x0388(0x0018) BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected
		class UHorizontalBox*                                      CommandButtonsContainer;                                 // 0x03A0(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_E6C6[0x10];                                  // 0x03A8(0x0010) MISSED OFFSET (PADDING)

	public:
		void UpdatePlayersLatency(TMap<int32_t, float> playersLatency, bool isHost);
		void SetWidgetsVisibility(bool widgetsVisibilty);
		void SetReadyStatus(TArray<struct FPlayerReadyStatusData> playersReadyStatusData);
		void SetLocalPlayerInfo(const struct FPlayerInfoData& PlayerInfoData);
		void SetLobbyTimer(int32_t Seconds);
		void SetLoadoutDataForLocalPlayer(TArray<struct FInventorySlotData> loadoutData, bool usingMatchRules, bool perkSlotsLockedByAdmin, bool IsSlasher);
		void RemovePlayersInfo(int32_t playerID);
		void HandleLeaveButtonClicked();
		void AddPlayerInfo(int32_t playerID, const struct FPlayerInfoData& PlayerInfoData, bool IsPlayerReady, TArray<struct FInventorySlotData> loadoutData);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGLobbyOfferingItemWidget
	 * Size -> 0x0000 (FullSize[0x0338] - InheritedSize[0x0338])
	 */
	class UUMGLobbyOfferingItemWidget : public UMobileBaseUserWidget
	{
	public:
		void SetOfferingData(const struct FInventorySlotData& Data);
		void HideOfferingItem();
		void GetOfferingIcons();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGLobbyOfferingWidget
	 * Size -> 0x0060 (FullSize[0x0398] - InheritedSize[0x0338])
	 */
	class UUMGLobbyOfferingWidget : public UMobileBaseUserWidget
	{
	public:
		class UCanvasPanel*                                        CanvasOffering;                                          // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              LobbyOfferingItemClass[0x30];                            // 0x0340(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              UnknownData_XYY6[0x28];                                  // 0x0370(0x0028) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGLobbyScreen
	 * Size -> 0x0048 (FullSize[0x0380] - InheritedSize[0x0338])
	 */
	class UUMGLobbyScreen : public UMobileBaseUserWidget
	{
	public:
		class UUMGLobbySearchingWidget*                            LobbySearchingWidget;                                    // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnJoinedLobbyLeaved;                                     // 0x0340(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnSearchingLobbyCancelled;                               // 0x0350(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class UWidgetSwitcher*                                     LobbySwitcher;                                           // 0x0360(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGLobbyJoinedWidget*                               LobbyJoinedWidget;                                       // 0x0368(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGLobbyOfferingWidget*                             OfferingWidget;                                          // 0x0370(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGFogWidget*                                       FogWidget;                                               // 0x0378(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void HandleSearchingLobbyCancel();
		void HandleJoinedLobbyLeave();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGLobbySearchingWidget
	 * Size -> 0x00E8 (FullSize[0x0478] - InheritedSize[0x0390])
	 */
	class UUMGLobbySearchingWidget : public UUMGLoadoutBaseWidget
	{
	public:
		class UUMGBankAndPlayerInfoWidget*                         BankAndPlayerInfoWidget;                                 // 0x0390(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                ItemOrPowerText;                                         // 0x0398(0x0018) BlueprintVisible, BlueprintReadOnly, Transient, NativeAccessSpecifierPublic
		class FText                                                AddonText;                                               // 0x03B0(0x0018) BlueprintVisible, BlueprintReadOnly, Transient, NativeAccessSpecifierPublic
		class FText                                                OfferingText;                                            // 0x03C8(0x0018) BlueprintVisible, BlueprintReadOnly, Transient, NativeAccessSpecifierPublic
		class FText                                                PerksText;                                               // 0x03E0(0x0018) BlueprintVisible, BlueprintReadOnly, Transient, NativeAccessSpecifierPublic
		class FText                                                TextWaitingForPlayers;                                   // 0x03F8(0x0018) BlueprintVisible, BlueprintReadOnly, Transient, NativeAccessSpecifierPublic
		class FText                                                TextEstimatedTimeTitle;                                  // 0x0410(0x0018) BlueprintVisible, BlueprintReadOnly, Transient, NativeAccessSpecifierPublic
		class UButton*                                             ButtonCancelSearching;                                   // 0x0428(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGPartySlotsWidget*                                PartySlots;                                              // 0x0430(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_KGUY[0x40];                                  // 0x0438(0x0040) MISSED OFFSET (PADDING)

	public:
		void SetWaitingTimer(int32_t Seconds);
		void SetEstimatedWaitingTimer(int32_t Seconds);
		void OnRankTooltipTriggered(const struct FTooltipPressedData& TooltipPressedData);
		void OnLevelTooltipTriggered(const struct FTooltipPressedData& TooltipPressedData);
		void OnCurrencyTooltipTriggered(const struct FTooltipPressedData& TooltipPressedData, ECurrencyType CurrencyType);
		void HandleLeaveButtonClicked();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGLoginPopup
	 * Size -> 0x0018 (FullSize[0x0438] - InheritedSize[0x0420])
	 */
	class UUMGLoginPopup : public UUMGGenericPopup
	{
	public:
		class UUMGAuthentificationProviderListWidget*              AuthenticationProviderList;                              // 0x0420(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_9EK1[0x10];                                  // 0x0428(0x0010) MISSED OFFSET (PADDING)

	public:
		void ChooseProvider(unsigned char Provider);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGMainMenuMonthlyPassButton
	 * Size -> 0x0050 (FullSize[0x0388] - InheritedSize[0x0338])
	 */
	class UUMGMainMenuMonthlyPassButton : public UMobileBaseUserWidget
	{
	public:
		class UWidgetSwitcher*                                     ButtonSwitcher;                                          // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UButton*                                             ActiveButton;                                            // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UButton*                                             NonActiveButton;                                         // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FText                                                playerName;                                              // 0x0350(0x0018) BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		class UAkAudioEvent*                                       OnClickSound;                                            // 0x0368(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_EVFM[0x18];                                  // 0x0370(0x0018) MISSED OFFSET (PADDING)

	public:
		void OnButtonClick();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGMapThemeWidget
	 * Size -> 0x0000 (FullSize[0x0338] - InheritedSize[0x0338])
	 */
	class UUMGMapThemeWidget : public UMobileBaseUserWidget
	{
	public:
		void SetThemeName(const class FString& ThemeName);
		void SetMapName(const class FString& MapName);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGMenuBaseBanner
	 * Size -> 0x0028 (FullSize[0x04A8] - InheritedSize[0x0480])
	 */
	class UUMGMenuBaseBanner : public UUMGBaseSideMainMenuButton
	{
	public:
		class UImage*                                              BannerImage;                                             // 0x0480(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          Title;                                                   // 0x0488(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              DefaultBanner[0x10];                                     // 0x0490(0x0010) UNKNOWN PROPERTY: InterfaceProperty
		unsigned char                                              UnknownData_AJMF[0x8];                                   // 0x04A0(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGMenuEventsBanner
	 * Size -> 0x0018 (FullSize[0x04C0] - InheritedSize[0x04A8])
	 */
	class UUMGMenuEventsBanner : public UUMGMenuBaseBanner
	{
	public:
		class UImage*                                              EventsIcon;                                              // 0x04A8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          FallbackTitle;                                           // 0x04B0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_V69B[0x8];                                   // 0x04B8(0x0008) MISSED OFFSET (PADDING)

	public:
		void SetDefaultWidgetLayout();
		void SetCustomWidgetLayout();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGMenuMarketingBanner
	 * Size -> 0x0008 (FullSize[0x04B0] - InheritedSize[0x04A8])
	 */
	class UUMGMenuMarketingBanner : public UUMGMenuBaseBanner
	{
	public:
		class UTextBlock*                                          Subtitle;                                                // 0x04A8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGMonthlyPassRewardItemWidget
	 * Size -> 0x0058 (FullSize[0x0390] - InheritedSize[0x0338])
	 */
	class UUMGMonthlyPassRewardItemWidget : public UMobileBaseUserWidget
	{
	public:
		class UTextBlock*                                          itemAmount;                                              // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          ItemName;                                                // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              ItemIcon;                                                // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              CheckIcon;                                               // 0x0350(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              ItemFrame;                                               // 0x0358(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              ItemRarityBackground;                                    // 0x0360(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        ItemPaintPanel;                                          // 0x0368(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                        ActiveItemFrameColor;                                    // 0x0370(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                        NonActiveItemFrameColor;                                 // 0x0380(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGMonthlyPassCurrencyWidget
	 * Size -> 0x0008 (FullSize[0x0398] - InheritedSize[0x0390])
	 */
	class UUMGMonthlyPassCurrencyWidget : public UUMGMonthlyPassRewardItemWidget
	{
	public:
		class UImage*                                              CurrencyBackground;                                      // 0x0390(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGMonthlyPassFreeTicketWidget
	 * Size -> 0x0000 (FullSize[0x0390] - InheritedSize[0x0390])
	 */
	class UUMGMonthlyPassFreeTicketWidget : public UUMGMonthlyPassRewardItemWidget
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGNavigationButtonWidget
	 * Size -> 0x0010 (FullSize[0x0478] - InheritedSize[0x0468])
	 */
	class UUMGNavigationButtonWidget : public UUMGBaseButtonWidget
	{
	public:
		class UWidget*                                             NotificationPanel;                                       // 0x0468(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_00RW[0x8];                                   // 0x0470(0x0008) MISSED OFFSET (PADDING)

	public:
		void SetIsSelected(bool IsSelected);
		void SetIcon(class UTexture2D* Icon);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGObjectivesWidget
	 * Size -> 0x0008 (FullSize[0x0340] - InheritedSize[0x0338])
	 */
	class UUMGObjectivesWidget : public UMobileBaseUserWidget
	{
	public:
		ESlateVisibility                                           PanelEscapeRequirementsVisibility;                       // 0x0338(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		ESlateVisibility                                           PanelGeneratorVisibility;                                // 0x0339(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		ESlateVisibility                                           PanelFindExitVisibility;                                 // 0x033A(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		ESlateVisibility                                           PanelHatchVisibility;                                    // 0x033B(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_SKAN[0x4];                                   // 0x033C(0x0004) MISSED OFFSET (PADDING)

	public:
		void UpdateTextMessage(const class FText& textFind, const class FText& textExit, const class FText& textOr);
		void UpdateGeneratorCount(int32_t Count);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGPartyBotSlotWidget
	 * Size -> 0x0180 (FullSize[0x04B8] - InheritedSize[0x0338])
	 */
	class UUMGPartyBotSlotWidget : public UMobileBaseUserWidget
	{
	public:
		class UTextBlock*                                          RoleText;                                                // 0x0338(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          BotDifficultyText;                                       // 0x0340(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          CharacterNameText;                                       // 0x0348(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGBaseButtonWidget*                                EditButton;                                              // 0x0350(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              EditIcon;                                                // 0x0358(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGBaseButtonWidget*                                InvitePartyButton;                                       // 0x0360(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        InvitePartyCanvas;                                       // 0x0368(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TMap<EAIDifficultyLevel, struct FSlateColor>               DifficultyColors;                                        // 0x0370(0x0050) Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_BVNF[0xF8];                                  // 0x03C0(0x00F8) MISSED OFFSET (PADDING)

	public:
		void HandleInvitePartyButtonEvent();
		void HandleEditButtonEvent();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGPartyCountdownWidget
	 * Size -> 0x0020 (FullSize[0x03C0] - InheritedSize[0x03A0])
	 */
	class UUMGPartyCountdownWidget : public UUMGBaseCountdownWidget
	{
	public:
		class UButton*                                             UnreadyButton;                                           // 0x03A0(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        UnreadyButtonContainer;                                  // 0x03A8(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_X50P[0x10];                                  // 0x03B0(0x0010) MISSED OFFSET (PADDING)

	public:
		void OnUnreadyButtonClicked();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGPartyPlayerSlotWidget
	 * Size -> 0x0288 (FullSize[0x05C0] - InheritedSize[0x0338])
	 */
	class UUMGPartyPlayerSlotWidget : public UMobileBaseUserWidget
	{
	public:
		class UTextBlock*                                          playerName;                                              // 0x0338(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          AdditionalInformationText;                               // 0x0340(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              FriendIcon;                                              // 0x0348(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGBaseButtonWidget*                                KickPlayerButton;                                        // 0x0350(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FSlateFontInfo                                      CharacterNameStyle;                                      // 0x0358(0x0058) Edit, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FSlateFontInfo                                      PlayerInMatchStyle;                                      // 0x03B0(0x0058) Edit, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      PlayerInMatchOpacity;                                    // 0x0408(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      PlayerInLobbyOpacity;                                    // 0x040C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UWidget*                                             PlayerInformationContainer;                              // 0x0410(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        ReadyIconsCanvas;                                        // 0x0418(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        RequestRoleIconsCanvas;                                  // 0x0420(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UWidgetSwitcher*                                     RoleSwitcher;                                            // 0x0428(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              LeaderIcon;                                              // 0x0430(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_NOFG[0x188];                                 // 0x0438(0x0188) MISSED OFFSET (PADDING)

	public:
		void SetVisualsFromState(EPartyPlayerSlotWidgetState widgetState);
		void HandleKickPlayerButtonEvent();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGPartySlotsWidget
	 * Size -> 0x0100 (FullSize[0x0438] - InheritedSize[0x0338])
	 */
	class UUMGPartySlotsWidget : public UMobileBaseUserWidget
	{
	public:
		class UPanelWidget*                                        PartyPlayerSlotsContainer;                               // 0x0338(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<class UUMGPartyPlayerSlotWidget*>                   _partyPlayerSlots;                                       // 0x0340(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_5H6V[0x8];                                   // 0x0350(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UVerticalBox*                                        PartyBotSlotsContainer;                                  // 0x0358(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              PartyBotSlotWidgetClass[0x30];                           // 0x0360(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		int32_t                                                    MaxSlotCount;                                            // 0x0390(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_PXY4[0x4];                                   // 0x0394(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSlateColor                                         ConflictingCharacterColor;                               // 0x0398(0x0028) Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
		struct FSlateColor                                         NormalCharacterColor;                                    // 0x03C0(0x0028) Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_2VZI[0x50];                                  // 0x03E8(0x0050) MISSED OFFSET (PADDING)

	public:
		void SwapWidgets(int32_t first, int32_t second);
		void SetWidgetState(int32_t Index, EPartyPlayerSlotWidgetState State);
		void RearrangePartySlots();
		void HandleKickPlayerButtonClickEvent(const class FString& friendKrakenID);
		void HandleInviteFriendButtonClickEvent();
		void HandleBotEditButtonClickEvent(int32_t Index);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGPlayerRankInfo
	 * Size -> 0x0060 (FullSize[0x0398] - InheritedSize[0x0338])
	 */
	class UUMGPlayerRankInfo : public UMobileBaseUserWidget
	{
	public:
		class UUMGTallyPipsContainer*                              PipsContainerWidget;                                     // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGTallyRankFrame*                                  RankFrameWidget;                                         // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              Background;                                              // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          TitleLabel;                                              // 0x0350(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          RankLabel;                                               // 0x0358(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          pipLabel;                                                // 0x0360(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        HighlightContainer;                                      // 0x0368(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                        _survivorColorBackground;                                // 0x0370(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                        _killerColorBackground;                                  // 0x0380(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      _disableOpacity;                                         // 0x0390(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_VAZP[0x4];                                   // 0x0394(0x0004) MISSED OFFSET (PADDING)

	public:
		void SetData(int32_t Rank, int32_t PipsRequiredForNextRank, int32_t filledPips, const class FText& TitleLabel, const class FText& pipLabel, EPlayerRole PlayerRole, bool IsHighlight);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGPlayersStatusWidget
	 * Size -> 0x0100 (FullSize[0x0438] - InheritedSize[0x0338])
	 */
	class UUMGPlayersStatusWidget : public UMobileBaseUserWidget
	{
	public:
		TMap<EPlayerRole, struct FCustomizedHudPlayerWrapperIdMapContainer> CustomizedHudWrapperIdMap;                               // 0x0338(0x0050) Edit, NativeAccessSpecifierPublic
		unsigned char                                              PlayerStatusIconClass[0x30];                             // 0x0388(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		class UHorizontalBox*                                      playersContainer;                                        // 0x03B8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<class FString, class UUMGPlayerStatusIcon*>           playerIconsByName;                                       // 0x03C0(0x0050) ExportObject, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
		TArray<class UUMGPlayerStatusIcon*>                        _playerIcons;                                            // 0x0410(0x0010) ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_K5NX[0x18];                                  // 0x0420(0x0018) MISSED OFFSET (PADDING)

	public:
		void OnPlayerStatusClicked(class UUMGPlayerStatusIcon* playerStatusIcon);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGPlayerStatusIcon
	 * Size -> 0x0278 (FullSize[0x05B0] - InheritedSize[0x0338])
	 */
	class UUMGPlayerStatusIcon : public UMobileBaseUserWidget
	{
	public:
		class UProgressBar*                                        HealthBar;                                               // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UProgressBar*                                        TimerBar;                                                // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCanvasPanel*                                        HealthBarContainer;                                      // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCanvasPanel*                                        TimerBarContainer;                                       // 0x0350(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTextBlock*                                          playerName;                                              // 0x0358(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UImage*                                              StatusIconBloodTop;                                      // 0x0360(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UImage*                                              StatusIconBloodBottom;                                   // 0x0368(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UImage*                                              StatusIcon;                                              // 0x0370(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCanvasPanel*                                        ObsessionCanvas;                                         // 0x0378(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCanvasPanel*                                        BrokenIndicatorCanvas;                                   // 0x0380(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCanvasPanel*                                        AfflictionCanvas;                                        // 0x0388(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCanvasPanel*                                        AfflictionIntroCanvas;                                   // 0x0390(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCanvasPanel*                                        SleepStatusCanvas;                                       // 0x0398(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCanvasPanel*                                        SleepTimerCanvas;                                        // 0x03A0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCanvasPanel*                                        ReverseBearTrapCanvas;                                   // 0x03A8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UImage*                                              ReverseBearTrapArrow;                                    // 0x03B0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCanvasPanel*                                        SicknessCanvas;                                          // 0x03B8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UImage*                                              SicknessFill;                                            // 0x03C0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCanvasPanel*                                        SpectateCanvas;                                          // 0x03C8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCanvasPanel*                                        SelectedSpectatorCanvas;                                 // 0x03D0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCanvasPanel*                                        AgonyCanvas;                                             // 0x03D8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCanvasPanel*                                        HandsGrabbing;                                           // 0x03E0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SicknessFillHighOpacity;                                 // 0x03E8(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SicknessFillLowOpacity;                                  // 0x03EC(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCanvasPanel*                                        StatusEffectContainerCanvas;                             // 0x03F0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInstanceDynamic*                            SicknessFillMI;                                          // 0x03F8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          _hookedTexture;                                          // 0x0400(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          _hookedBloodTexture;                                     // 0x0408(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          _trappedTexture;                                         // 0x0410(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          _trappedBloodTexture;                                    // 0x0418(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          _deadTexture;                                            // 0x0420(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          _deadBloodTexture;                                       // 0x0428(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          _escapedTexture;                                         // 0x0430(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          _carriedTexture;                                         // 0x0438(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          _injuredTexture;                                         // 0x0440(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          _injuredBloodTexture;                                    // 0x0448(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          _crawlingTexture;                                        // 0x0450(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          _crawlingBloodTexture;                                   // 0x0458(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          _sacrificedTexture;                                      // 0x0460(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          _sacrificedBloodTexture;                                 // 0x0468(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          _disconnectedTexture;                                    // 0x0470(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          _deathBedTexture;                                        // 0x0478(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          _defaultTexture;                                         // 0x0480(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UMGStalkingStatusEffectUIClass[0x30];                    // 0x0488(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              UMGLacerationStatusEffectUIClass[0x30];                  // 0x04B8(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		int32_t                                                    _maxNumberCharacterInName;                               // 0x04E8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OWZD[0xB4];                                  // 0x04EC(0x00B4) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UUMGStalkingStatusEffectUI*                          _stalkingStatusEffectUI;                                 // 0x05A0(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UUMGLacerationStatusEffectUI*                        _lacerationStatusEffectUI;                               // 0x05A8(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void SetSleepingTimer(float Progress);
		void SetReverseTrapProgressionTimer(float Seconds);
		void OnPlayerStatusButtonClicked();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGPopupButton
	 * Size -> 0x0038 (FullSize[0x04A0] - InheritedSize[0x0468])
	 */
	class UUMGPopupButton : public UUMGBaseButtonWidget
	{
	public:
		unsigned char                                              UnknownData_Z4J6[0x14];                                  // 0x0468(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DisabledOpacity;                                         // 0x047C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      EnabledOpacity;                                          // 0x0480(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_ZO53[0x4];                                   // 0x0484(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UImage*                                              VFXs;                                                    // 0x0488(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              Line;                                                    // 0x0490(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              FXSmoke;                                                 // 0x0498(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void OnButtonReleased();
		void OnButtonPressed();
		void OnButtonClicked();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGPromoPackItemWidget
	 * Size -> 0x0038 (FullSize[0x04A0] - InheritedSize[0x0468])
	 */
	class UUMGPromoPackItemWidget : public UUMGBaseButtonWidget
	{
	public:
		class UCanvasPanel*                                        SelectedPanel;                                           // 0x0468(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        BackgroundPanel;                                         // 0x0470(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        AmountPanel;                                             // 0x0478(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_SBKB[0x20];                                  // 0x0480(0x0020) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGPromoPackCharacterWidget
	 * Size -> 0x0008 (FullSize[0x04A8] - InheritedSize[0x04A0])
	 */
	class UUMGPromoPackCharacterWidget : public UUMGPromoPackItemWidget
	{
	public:
		class UCanvasPanel*                                        OwnedPanel;                                              // 0x04A0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGPromoPackContentWidget
	 * Size -> 0x0028 (FullSize[0x0360] - InheritedSize[0x0338])
	 */
	class UUMGPromoPackContentWidget : public UMobileBaseUserWidget
	{
	public:
		class UHorizontalBox*                                      Content;                                                 // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UPromoPackContentDataAsset*                          WidgetPerContentType;                                    // 0x0340(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UScrollBox*                                          ScrollBox;                                               // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<TWeakObjectPtr<class UVerticalBox>>                 _itemsContainer;                                         // 0x0350(0x0010) ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGPromoPackCurrencyWidget
	 * Size -> 0x0000 (FullSize[0x04A0] - InheritedSize[0x04A0])
	 */
	class UUMGPromoPackCurrencyWidget : public UUMGPromoPackItemWidget
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGPromoPackPurchaseCurrencyButtonWidget
	 * Size -> 0x0020 (FullSize[0x0530] - InheritedSize[0x0510])
	 */
	class UUMGPromoPackPurchaseCurrencyButtonWidget : public UUMGBaseCurrencyButtonWidget
	{
	public:
		class UTextBlock*                                          PercentageDiscountText;                                  // 0x0510(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          UndiscountedPrice;                                       // 0x0518(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        PercentageDiscountCanvas;                                // 0x0520(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UOverlay*                                            OverlayUndiscountedPrice;                                // 0x0528(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGPromoPackSelectedItemWidget
	 * Size -> 0x0038 (FullSize[0x0370] - InheritedSize[0x0338])
	 */
	class UUMGPromoPackSelectedItemWidget : public UMobileBaseUserWidget
	{
	public:
		class UUMGHtmlRichText*                                    ItemDescription;                                         // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              ItemTypeIcon;                                            // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          ItemName;                                                // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          ItemSubTitle;                                            // 0x0350(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UNamedSlot*                                          SelectedItemSlot;                                        // 0x0358(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGPromoPackItemWidget*                             SelectedItem;                                            // 0x0360(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UScrollBox*                                          ScrollBox;                                               // 0x0368(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGPromoPackSuggestionButton
	 * Size -> 0x0010 (FullSize[0x0478] - InheritedSize[0x0468])
	 */
	class UUMGPromoPackSuggestionButton : public UUMGBaseButtonWidget
	{
	public:
		class URichTextBlock*                                      RichTextButtonLabel;                                     // 0x0468(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              LineGlow;                                                // 0x0470(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGPurchaseBuyButton
	 * Size -> 0x0008 (FullSize[0x0470] - InheritedSize[0x0468])
	 */
	class UUMGPurchaseBuyButton : public UUMGBaseButtonWidget
	{
	public:
		class UTextBlock*                                          PriceText;                                               // 0x0468(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGPurchaseCurrencyWidget
	 * Size -> 0x0088 (FullSize[0x03C0] - InheritedSize[0x0338])
	 */
	class UUMGPurchaseCurrencyWidget : public UMobileBaseUserWidget
	{
	public:
		class UTextBlock*                                          PercentageDiscountText;                                  // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              CurrencyIcon;                                            // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          PriceText;                                               // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          UndiscountedPrice;                                       // 0x0350(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              CurrencyColorImage;                                      // 0x0358(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UOverlay*                                            OriginalPriceOverlay;                                    // 0x0360(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        DiscountCanvas;                                          // 0x0368(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FSlateColor                                         AffordableColor;                                         // 0x0370(0x0028) Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
		struct FSlateColor                                         NotAffordableColor;                                      // 0x0398(0x0028) Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGPurchaseItemsInfo
	 * Size -> 0x0018 (FullSize[0x0350] - InheritedSize[0x0338])
	 */
	class UUMGPurchaseItemsInfo : public UMobileBaseUserWidget
	{
	public:
		class UImage*                                              Icon;                                                    // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          Quantity;                                                // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          ItemName;                                                // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGPurchaseSticker
	 * Size -> 0x0008 (FullSize[0x0340] - InheritedSize[0x0338])
	 */
	class UUMGPurchaseSticker : public UMobileBaseUserWidget
	{
	public:
		class UTextBlock*                                          TextDiscount;                                            // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGQueueStatusIconWidget
	 * Size -> 0x0038 (FullSize[0x0370] - InheritedSize[0x0338])
	 */
	class UUMGQueueStatusIconWidget : public UMobileBaseUserWidget
	{
	public:
		class UImage*                                              statusIndicator;                                         // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FLinearColor                                        AcceptableColor;                                         // 0x0340(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FLinearColor                                        ModerateColor;                                           // 0x0350(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FLinearColor                                        LongColor;                                               // 0x0360(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGRankBanner
	 * Size -> 0x0038 (FullSize[0x0370] - InheritedSize[0x0338])
	 */
	class UUMGRankBanner : public UMobileBaseUserWidget
	{
	public:
		unsigned char                                              UnknownData_82M6[0x8];                                   // 0x0338(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UUMGTallyRankFrame*                                  RankFrameWidget;                                         // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UButton*                                             TooltipButton;                                           // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              HighlightImage;                                          // 0x0350(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAkAudioEvent*                                       OnLongPressSound;                                        // 0x0358(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FScriptMulticastDelegate                             _onLongPressRankTooltipEvent;                            // 0x0360(0x0010) ZeroConstructor, InstancedReference, NativeAccessSpecifierPrivate

	public:
		void StopHighlight();
		void StartHighlight();
		void SetData(int32_t Rank, EPlayerRole PlayerRole);
		void HandleTooltipLongPressedEvent();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGReceivedFriendRequestListElement
	 * Size -> 0x0008 (FullSize[0x0400] - InheritedSize[0x03F8])
	 */
	class UUMGReceivedFriendRequestListElement : public UUMGBaseFriendListElement
	{
	public:
		class URichTextBlock*                                      FriendRequestStatusRichText;                             // 0x03F8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGRefundDataWidget
	 * Size -> 0x0000 (FullSize[0x0338] - InheritedSize[0x0338])
	 */
	class UUMGRefundDataWidget : public UMobileBaseUserWidget
	{
	public:
		void SetDataAndUpdateWidget(const struct FRefundUIData& RefundUIData);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGRewardPopupLayout
	 * Size -> 0x0180 (FullSize[0x04B8] - InheritedSize[0x0338])
	 */
	class UUMGRewardPopupLayout : public UMobileBaseUserWidget
	{
	public:
		class UHorizontalBox*                                      TopHorizontalBox;                                        // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UHorizontalBox*                                      BottomHorizontalBox;                                     // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGRewardSlotTutorialPopupRewardWidget*             FirstCharacter;                                          // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGRewardSlotTutorialPopupRewardWidget*             SecondCharacter;                                         // 0x0350(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGRewardSlotTutorialPopupRewardWidget*             ThirdCharacter;                                          // 0x0358(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGRewardSlotTutorialPopupRewardWidget*             FourthCharacter;                                         // 0x0360(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGRewardSlotTutorialPopupRewardWidget*             FifthCharacter;                                          // 0x0368(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGRewardSlotTutorialPopupRewardWidget*             AuricCells;                                              // 0x0370(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGRewardSlotTutorialPopupRewardWidget*             IridescentShards;                                        // 0x0378(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGRewardSlotTutorialPopupRewardWidget*             BloodPoints;                                             // 0x0380(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FRewardLayoutWidgetToGenerate                       TopWidgetToGenerate;                                     // 0x0388(0x0090) Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
		struct FRewardLayoutWidgetToGenerate                       BottomWidgetToGenerate;                                  // 0x0418(0x0090) Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_YOYP[0x10];                                  // 0x04A8(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGRewardSlotTutorialPopupRewardWidget
	 * Size -> 0x0028 (FullSize[0x0360] - InheritedSize[0x0338])
	 */
	class UUMGRewardSlotTutorialPopupRewardWidget : public UMobileBaseUserWidget
	{
	public:
		class UTextBlock*                                          RewardText;                                              // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              RewardPicture;                                           // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UWidget*                                             UnlockedPanel;                                           // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UWidget*                                             MissedRewardPanel;                                       // 0x0350(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      RewardUnlockedTextOpacity;                               // 0x0358(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      RewardToBeMissedTextOpacity;                             // 0x035C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGRewardWidget
	 * Size -> 0x0008 (FullSize[0x0340] - InheritedSize[0x0338])
	 */
	class UUMGRewardWidget : public UMobileBaseUserWidget
	{
	public:
		class UImage*                                              CheckIcon;                                               // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void SetData(const struct FRewardItemData& RewardData);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGRichTextRewardItemDecorator
	 * Size -> 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
	 */
	class UUMGRichTextRewardItemDecorator : public URichTextBlockDecorator
	{
	public:
		class UDataTable*                                          RewardSet;                                               // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGRitualClaimRewardButton
	 * Size -> 0x0018 (FullSize[0x0480] - InheritedSize[0x0468])
	 */
	class UUMGRitualClaimRewardButton : public UUMGBaseButtonWidget
	{
	public:
		class FScriptMulticastDelegate                             OnPressedAnimationCompleted;                             // 0x0468(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class UCanvasPanel*                                        ClaimFxPanel;                                            // 0x0478(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void SetClaimedButtonStatus(bool isClaimed, float percent);
		void OnPressedAnimationCompleted__DelegateSignature();
		void BroadcastOnPressedAnimationCompleted();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGRitualRefreshButton
	 * Size -> 0x0010 (FullSize[0x0478] - InheritedSize[0x0468])
	 */
	class UUMGRitualRefreshButton : public UUMGBaseButtonWidget
	{
	public:
		class UCanvasPanel*                                        RefreshCanvas;                                           // 0x0468(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UWidgetSwitcher*                                     RefreshSwitcher;                                         // 0x0470(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void SetRefreshButton(int32_t Currency, ECurrencyType currentyType, bool isAdsRefresh);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGRoleSelectionScreen
	 * Size -> 0x0020 (FullSize[0x0358] - InheritedSize[0x0338])
	 */
	class UUMGRoleSelectionScreen : public UMobileBaseUserWidget
	{
	public:
		int32_t                                                    _newInboxMessageCount;                                   // 0x0338(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_WN4V[0x1C];                                  // 0x033C(0x001C) MISSED OFFSET (PADDING)

	public:
		void ButtonClickEvent(ERoleSelectionScreenButton buttonId);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGRoleSwitcherWidget
	 * Size -> 0x0060 (FullSize[0x02F8] - InheritedSize[0x0298])
	 */
	class UUMGRoleSwitcherWidget : public UUserWidget
	{
	public:
		bool                                                       _isCurrentRoleRoleSwitcher;                              // 0x0298(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_PLG0[0x3];                                   // 0x0299(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      _touchDeltaTolerance;                                    // 0x029C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_LJYK[0x58];                                  // 0x02A0(0x0058) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGScoreAlertWidget
	 * Size -> 0x0000 (FullSize[0x02C8] - InheritedSize[0x02C8])
	 */
	class UUMGScoreAlertWidget : public UUMGBaseAlertWidget
	{
	public:
		void UpdateWidget(EDBDScoreCategory scoreType, const class FString& Title, int32_t ScoreValue, float Progress, const class FText& defaultScoreText);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGSelectedCharacterWidget
	 * Size -> 0x0048 (FullSize[0x0380] - InheritedSize[0x0338])
	 */
	class UUMGSelectedCharacterWidget : public UMobileBaseUserWidget
	{
	public:
		class UUMGCharacterPrestigeButton*                         PrestigeButton;                                          // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          CharacterNameText;                                       // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          CharacterLevelText;                                      // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UVerticalBox*                                        CharacterLevelVerticalBox;                               // 0x0350(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              LeaderIcon;                                              // 0x0358(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_KYBF[0x10];                                  // 0x0360(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             _onCancelPartyButtonClick;                               // 0x0370(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, BlueprintCallable, NativeAccessSpecifierProtected

	public:
		void SetVisualsForReadyState(bool IsPlayerReady);
		void SetVisualsForPartyState(bool triggerPartyVisuals);
		void OnPrestigeButtonClicked();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGSettingContextWidget
	 * Size -> 0x0018 (FullSize[0x0350] - InheritedSize[0x0338])
	 */
	class UUMGSettingContextWidget : public UMobileBaseUserWidget
	{
	public:
		unsigned char                                              UnknownData_GRDB[0x18];                                  // 0x0338(0x0018) MISSED OFFSET (PADDING)

	public:
		void SetContextTitle(const class FText& contextTitle);
		void HandleContextButtonClickEvent(int32_t buttonData);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGSettingAboutContextWidget
	 * Size -> 0x0010 (FullSize[0x0360] - InheritedSize[0x0350])
	 */
	class UUMGSettingAboutContextWidget : public UUMGSettingContextWidget
	{
	public:
		class UUMGSettingContextButton*                            EULAButton;                                              // 0x0350(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGSettingContextButton*                            CreditsButton;                                           // 0x0358(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void SetVersionNumber(const class FString& VersionNumber);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGSettingContextButton
	 * Size -> 0x0018 (FullSize[0x0350] - InheritedSize[0x0338])
	 */
	class UUMGSettingContextButton : public UMobileBaseUserWidget
	{
	public:
		class FScriptMulticastDelegate                             OnSettingContextButtonClickEvent;                        // 0x0338(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4WZ3[0x8];                                   // 0x0348(0x0008) MISSED OFFSET (PADDING)

	public:
		void SetIsSelected(bool IsSelected);
		void SetContextButtonData(int32_t buttonId);
		void SetButtonText(const class FString& ButtonText);
		void HandleSettingContextButtonClick();
		int32_t GetContextButtonData();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGSettingControlsContextWidget
	 * Size -> 0x0090 (FullSize[0x03E0] - InheritedSize[0x0350])
	 */
	class UUMGSettingControlsContextWidget : public UUMGSettingContextWidget
	{
	public:
		unsigned char                                              UnknownData_51BV[0x60];                                  // 0x0350(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       AimAssist;                                               // 0x03B0(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_RM1Z[0x3];                                   // 0x03B1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    HandSide;                                                // 0x03B4(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                    InteractionButton;                                       // 0x03B8(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       InvertY;                                                 // 0x03BC(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_SNBE[0x3];                                   // 0x03BD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      KillerCameraSensitivity;                                 // 0x03C0(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      SurvivorCameraSensitivity;                               // 0x03C4(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_GT0D[0x18];                                  // 0x03C8(0x0018) MISSED OFFSET (PADDING)

	public:
		void HandleSurvivorCameraSensitivityChanged(float sliderValue);
		void HandleKillerCameraSensitivityChanged(float sliderValue);
		void HandleInvertYToggleClick(bool toggleValue);
		void HandleInteractionButtonToggleClick(int32_t Index);
		void HandleHandSideToggleClick(int32_t Index);
		void HandleAimAssistToggleClick(bool toggleValue);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGSettingLanguageContextWidget
	 * Size -> 0x0048 (FullSize[0x0398] - InheritedSize[0x0350])
	 */
	class UUMGSettingLanguageContextWidget : public UUMGSettingContextWidget
	{
	public:
		class UScrollBox*                                          LanguageScrollBox;                                       // 0x0350(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              _languageButtonClass[0x30];                              // 0x0358(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		int32_t                                                    _languageListRowGap;                                     // 0x0388(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_00WF[0x4];                                   // 0x038C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UUMGSettingContextButton*                            _selectedLanguageButton;                                 // 0x0390(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGSettingMenuButton
	 * Size -> 0x0018 (FullSize[0x0350] - InheritedSize[0x0338])
	 */
	class UUMGSettingMenuButton : public UMobileBaseUserWidget
	{
	public:
		unsigned char                                              UnknownData_H0UF[0x18];                                  // 0x0338(0x0018) MISSED OFFSET (PADDING)

	public:
		void SetTabButtonText(const class FText& ButtonText);
		void SetIsSelected(bool IsSelected);
		void HandleSettingTabButtonClick();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGSettingSettingsContextWidget
	 * Size -> 0x00C8 (FullSize[0x0418] - InheritedSize[0x0350])
	 */
	class UUMGSettingSettingsContextWidget : public UUMGSettingContextWidget
	{
	public:
		unsigned char                                              UnknownData_RCMO[0x90];                                  // 0x0350(0x0090) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       MainVolumeOn;                                            // 0x03E0(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_6WMH[0x3];                                   // 0x03E1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MainVolume;                                              // 0x03E4(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       MenuVolumeOn;                                            // 0x03E8(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_3IUD[0x3];                                   // 0x03E9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MenuVolume;                                              // 0x03EC(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       IsLoggedIn;                                              // 0x03F0(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       IsEnableUserCenterWithLoggedOut;                         // 0x03F1(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       IsLeaveTutorialButtonVisible;                            // 0x03F2(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       IsAutoDeclineFriendRequestOn;                            // 0x03F3(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_1WCB[0x24];                                  // 0x03F4(0x0024) MISSED OFFSET (PADDING)

	public:
		void ShowLinkAccountRow(bool isShow);
		void HandleUserCenterButtonClick();
		void HandleMenuVolumeToggleClick(bool toggleValue);
		void HandleMenuVolumeChanged(float sliderValue);
		void HandleMainVolumeToggleClick(bool toggleValue);
		void HandleMainVolumeChanged(float sliderValue);
		void HandleLogOutButtonClick();
		void HandleLogInButtonClick();
		void HandleLeaveTutorialButtonClick();
		void HandleAutoDeclineFriendRequestToggleClick(bool toggleValue);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGSettingSubscriptionStatus
	 * Size -> 0x00A8 (FullSize[0x0340] - InheritedSize[0x0298])
	 */
	class UUMGSettingSubscriptionStatus : public UUserWidget
	{
	public:
		class FText                                                SubscriptionStatusText;                                  // 0x0298(0x0018) Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
		class FText                                                StatusText;                                              // 0x02B0(0x0018) Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
		class FText                                                InactiveStatusText;                                      // 0x02C8(0x0018) Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
		class FText                                                EndText;                                                 // 0x02E0(0x0018) Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
		class UWidgetSwitcher*                                     TypeSwitcher;                                            // 0x02F8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UHorizontalBox*                                      ActiveWidget;                                            // 0x0300(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UOverlay*                                            InactiveWidget;                                          // 0x0308(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          titleText;                                               // 0x0310(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          DisplayName;                                             // 0x0318(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          Status;                                                  // 0x0320(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          StatusInactive;                                          // 0x0328(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          End;                                                     // 0x0330(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          EndDate;                                                 // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGSettingTutorialContextWidget
	 * Size -> 0x0028 (FullSize[0x0378] - InheritedSize[0x0350])
	 */
	class UUMGSettingTutorialContextWidget : public UUMGSettingContextWidget
	{
	public:
		class UUMGSettingContextButton*                            SurvivorTutorialButton;                                  // 0x0350(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGSettingContextButton*                            KillerTutorialButton;                                    // 0x0358(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGSettingContextButton*                            SurvivorCinematicButton;                                 // 0x0360(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGSettingContextButton*                            KillerCinematicButton;                                   // 0x0368(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGSettingContextButton*                            LoreCinematicButton;                                     // 0x0370(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGShadersPrecompilingProgressionWidget
	 * Size -> 0x0010 (FullSize[0x0348] - InheritedSize[0x0338])
	 */
	class UUMGShadersPrecompilingProgressionWidget : public UMobileBaseUserWidget
	{
	public:
		class UProgressBar*                                        _progressBar;                                            // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          _progressionText;                                        // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UmgSpectatorHud
	 * Size -> 0x0020 (FullSize[0x0580] - InheritedSize[0x0560])
	 */
	class UUmgSpectatorHud : public UUmgPlayerHud
	{
	public:
		class FScriptMulticastDelegate                             OnLeaveSpectateClicked;                                  // 0x0560(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnPlayerSpectate;                                        // 0x0570(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic

	public:
		void OnPlayerStatusSelected(const class FString& playerName);
		void HandleLeaveSpectateClicked();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGSplashScreen
	 * Size -> 0x0070 (FullSize[0x03A8] - InheritedSize[0x0338])
	 */
	class UUMGSplashScreen : public UMobileBaseUserWidget
	{
	public:
		class FScriptMulticastDelegate                             OnSaveGamePopupCompleteEvent;                            // 0x0338(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnScreenTouched;                                         // 0x0348(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class UCanvasPanel*                                        SavePopup;                                               // 0x0358(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          GameVersion;                                             // 0x0360(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UTextBlock*                                          LoadingState;                                            // 0x0368(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UTextBlock*                                          PressKey;                                                // 0x0370(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UButton*                                             TapButton;                                               // 0x0378(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UTextBlock*                                          SaveGameTitle;                                           // 0x0380(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UTextBlock*                                          SaveGameDescription;                                     // 0x0388(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UUMGDownloadProgressionWidget*                       DownloadProgression;                                     // 0x0390(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UUMGCharacterSlideShowWidget*                        CharacterSlideShow;                                      // 0x0398(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_AOY1[0x8];                                   // 0x03A0(0x0008) MISSED OFFSET (PADDING)

	public:
		void OnTapButtonClicked();
		void OnSaveGamePopupComplete();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGStalkingStatusEffectUI
	 * Size -> 0x0050 (FullSize[0x0388] - InheritedSize[0x0338])
	 */
	class UUMGStalkingStatusEffectUI : public UMobileBaseUserWidget
	{
	public:
		class UCanvasPanel*                                        StalkedCanvas;                                           // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              StalkingFillFull;                                        // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              StalkingFillLines;                                       // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              StalkingRedBackground;                                   // 0x0350(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FName                                                StalkingStartAnimationName;                              // 0x0358(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_W2TI[0x4];                                   // 0x0364(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMaterialInstanceDynamic*                            _stalkingFillFullMI;                                     // 0x0368(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UMaterialInstanceDynamic*                            _stalkingFillLinesMI;                                    // 0x0370(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_HP8B[0x10];                                  // 0x0378(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGStatusEffectIcon
	 * Size -> 0x0048 (FullSize[0x06C0] - InheritedSize[0x0678])
	 */
	class UUMGStatusEffectIcon : public UUMGLoadoutItemButton
	{
	public:
		struct FStatusEffectSlotData                               statusEffectData;                                        // 0x0678(0x0048) BlueprintVisible, BlueprintReadOnly, Transient, NativeAccessSpecifierPublic

	public:
		void UpdateWidget();
		void UpdatePercentageFill(float Percentage);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGStatusEffectsWidget
	 * Size -> 0x0090 (FullSize[0x03C8] - InheritedSize[0x0338])
	 */
	class UUMGStatusEffectsWidget : public UMobileBaseUserWidget
	{
	public:
		unsigned char                                              AtlantaStatusEffectIconClass[0x30];                      // 0x0338(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		class UHorizontalBox*                                      StatusEffectsBox;                                        // 0x0368(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TMap<class FName, class UUMGStatusEffectIcon*>             _statusEffectsMap;                                       // 0x0370(0x0050) BlueprintVisible, ExportObject, BlueprintReadOnly, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_SULS[0x8];                                   // 0x03C0(0x0008) MISSED OFFSET (PADDING)

	public:
		void RemoveExistingStatusEffect(const class FString& statusEffectID);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGStoreAuricCellButton
	 * Size -> 0x00A8 (FullSize[0x0510] - InheritedSize[0x0468])
	 */
	class UUMGStoreAuricCellButton : public UUMGBaseButtonWidget
	{
	public:
		unsigned char                                              UnknownData_YDPB[0x10];                                  // 0x0468(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FCurrencyPurchaseData                               CurrencyPurchaseData;                                    // 0x0478(0x0068) BlueprintVisible, BlueprintReadOnly, Transient, NativeAccessSpecifierPublic
		class UTextBlock*                                          AuricCellTitleText;                                      // 0x04E0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UOverlay*                                            Timer;                                                   // 0x04E8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_DK74[0x20];                                  // 0x04F0(0x0020) MISSED OFFSET (PADDING)

	public:
		void UpdateWidget(int32_t Multiplier, const struct FDateTime& EndDate);
		void UpdateFirstPurchaseEndInUI(const class FString& endInString);
		void ReportInvalidPercentage(float Percentage);
		bool HasBonusExpired(const struct FDateTime& EndDate);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGStoreEventItemsPackButton
	 * Size -> 0x00B8 (FullSize[0x03F0] - InheritedSize[0x0338])
	 */
	class UUMGStoreEventItemsPackButton : public UMobileBaseUserWidget
	{
	public:
		class UImage*                                              ImageIcon;                                               // 0x0338(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UTextBlock*                                          titleText;                                               // 0x0340(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UTextBlock*                                          CurrencyAmountText;                                      // 0x0348(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UTextBlock*                                          CurrencyNameText;                                        // 0x0350(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UUniformGridPanel*                                   UniformGridPanel;                                        // 0x0358(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UUMGBaseButtonWidget*                                BuyButton;                                               // 0x0360(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UUMGAtlStorePriceWidget*                             StorePriceWidget;                                        // 0x0368(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UUMGAtlEndDateTimerWidget*                           EndDateTimerWidget;                                      // 0x0370(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UCanvasPanel*                                        SelectedImageBox;                                        // 0x0378(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              EventItemWidgetClassPtr[0x30];                           // 0x0380(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		int32_t                                                    nbColumns;                                               // 0x03B0(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_V94L[0x3C];                                  // 0x03B4(0x003C) MISSED OFFSET (PADDING)

	public:
		void ShowSelectedCanvas();
		void HideSelectedCanvas();
		void HandleEndDateTimerReached();
		void HandleButtonClicked();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGStorefrontCustomizationWidget
	 * Size -> 0x0010 (FullSize[0x04B0] - InheritedSize[0x04A0])
	 */
	class UUMGStorefrontCustomizationWidget : public UUMGPromoPackItemWidget
	{
	public:
		class UTextBlock*                                          CustomizationQuantityText;                               // 0x04A0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        CustomizationQuantityPanel;                              // 0x04A8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGStreamVideoWidget
	 * Size -> 0x0048 (FullSize[0x0380] - InheritedSize[0x0338])
	 */
	class UUMGStreamVideoWidget : public UMobileBaseUserWidget
	{
	public:
		class UImage*                                              VideoImage;                                              // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UButton*                                             TapButton;                                               // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGBaseButtonWidget*                                SkipButton;                                              // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_FKMZ[0x10];                                  // 0x0350(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      _timerShowSkipButton;                                    // 0x0360(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_L7V1[0x1C];                                  // 0x0364(0x001C) MISSED OFFSET (PADDING)

	public:
		void OnTapButtonClicked();
		void OnSkipButtonClicked();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGSubscriptionPackButtonWidget
	 * Size -> 0x0158 (FullSize[0x05C0] - InheritedSize[0x0468])
	 */
	class UUMGSubscriptionPackButtonWidget : public UUMGBaseButtonWidget
	{
	public:
		class USubscriptionRewardDataAsset*                        WidgetPerRewardType;                                     // 0x0468(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        ButtonPressedVFX;                                        // 0x0470(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        PricePanel;                                              // 0x0478(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              TitleIcon;                                               // 0x0480(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          Title;                                                   // 0x0488(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          Price;                                                   // 0x0490(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        RenewalDatePanel;                                        // 0x0498(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          RenewalDateText;                                         // 0x04A0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUniformGridPanel*                                   PurchaseRewardsGrid;                                     // 0x04A8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUniformGridPanel*                                   DailyRewardsGrid;                                        // 0x04B0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              PortraitBorder;                                          // 0x04B8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UButton*                                             InfoButton;                                              // 0x04C0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              ActiveBackgroundImage;                                   // 0x04C8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              NonActiveBackgroundImage;                                // 0x04D0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                        ActiveTextColor;                                         // 0x04D8(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                        NonActiveTextColor;                                      // 0x04E8(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                        TextColor;                                               // 0x04F8(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                        ActiveSmokeBackgroundTint;                               // 0x0508(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                        NonActiveSmokeBackgroundTint;                            // 0x0518(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              PurchaseRewardsSmokeBackground;                          // 0x0528(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              DailyRewardsSmokeBackground;                             // 0x0530(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                        ActiveTitleBackgroundTint;                               // 0x0538(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                        NonActiveTitleBackgroundTint;                            // 0x0548(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              TitleBackground;                                         // 0x0558(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        ActiveFrame;                                             // 0x0560(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        NonActiveFrame;                                          // 0x0568(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_7FNJ[0x50];                                  // 0x0570(0x0050) MISSED OFFSET (PADDING)

	public:
		void OnInfoButtonClicked();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGSubscriptionsPageScrollWidget
	 * Size -> 0x0078 (FullSize[0x04E8] - InheritedSize[0x0470])
	 */
	class UUMGSubscriptionsPageScrollWidget : public UUMGGridPageScrollWidget
	{
	public:
		unsigned char                                              SubscriptionPackButtonClass[0x30];                       // 0x0470(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		struct FVector2D                                           ItemPadding;                                             // 0x04A0(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_DYH3[0x40];                                  // 0x04A8(0x0040) MISSED OFFSET (PADDING)

	public:
		void HandleSubscriptionInfoButtonClickedEvent(const class FString& subscriptionDetails);
		void HandleBuySubscriptionPackButtonClickedEvent(const class FName& subscriptionPackID);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UmgSurvivorHud
	 * Size -> 0x0300 (FullSize[0x0860] - InheritedSize[0x0560])
	 */
	class UUmgSurvivorHud : public UUmgPlayableHud
	{
	public:
		unsigned char                                              UnknownData_Z6LV[0x8];                                   // 0x0560(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UActionButton*                                       CrouchButton;                                            // 0x0568(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        CrouchButtonContainer;                                   // 0x0570(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UWiggleWidget*                                       StruggleWidget;                                          // 0x0578(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        StruggleWidgetContainer;                                 // 0x0580(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UWiggleWidget*                                       WiggleWidget;                                            // 0x0588(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        WiggleWidgetContainer;                                   // 0x0590(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class ACamperPlayer*                                       Survivor;                                                // 0x0598(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UActionButton*                                       CancelButton;                                            // 0x05A0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        CenterInteractionButtonContainer;                        // 0x05A8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        LookBackButtonContainer;                                 // 0x05B0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAtlantaHudLookBackJoystick*                         LookBackJoystick;                                        // 0x05B8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UActionButton*                                       SkillCheckButton;                                        // 0x05C0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        SkillCheckButtonCanvas;                                  // 0x05C8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        InsaneSkillCheckButtonCanvas;                            // 0x05D0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_8W5Z[0x8];                                   // 0x05D8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSlateBrush                                         _unpressedLookBackJoystickThumbImage;                    // 0x05E0(0x0090) Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate
		struct FSlateBrush                                         _pressedLookBackJoystickThumbImage;                      // 0x0670(0x0090) Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_870B[0x20];                                  // 0x0700(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSlateBrush                                         _unpressedLookBackJoystickBackgroundImage;               // 0x0720(0x0090) Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate
		struct FSlateBrush                                         _pressedLookBackJoystickBackgroundImage;                 // 0x07B0(0x0090) Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_ALKR[0x20];                                  // 0x0840(0x0020) MISSED OFFSET (PADDING)

	public:
		void UpdateCancelButton();
		bool ShouldUseContextualItemButton();
		void SetSkillCheckButtonPosition(bool IsInsane);
		void SetNonRestrictedControlsVisibility(bool visible);
		void SetLookBackJoystickPosition(struct FVector2D* position);
		void SetLookBackJoystickImage(bool Pressed);
		void RespondToVirtualJoystickPressChanged(int32_t controlIndex, bool Pressed);
		void OnCancelButtonClicked();
		void InitializeLookBackJoystickPosition();
		bool HasSecondaryActionAvailable();
		struct FVector2D GetLookBackJoystickNormalizedOffset();
		bool GetLookBackJoystickIsPressed();
		class FText GetCenterItemText();
		class UTexture2D* GetCenterItemIcon();
		void CenterItemClicked(bool fromCancelRequest);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGSwitcherScreen
	 * Size -> 0x00B0 (FullSize[0x03E8] - InheritedSize[0x0338])
	 */
	class UUMGSwitcherScreen : public UMobileBaseUserWidget
	{
	public:
		class FScriptMulticastDelegate                             OnLoadoutWidgetSlotClicked;                              // 0x0338(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnLoadoutWidgetInventoryItemSelected;                    // 0x0348(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnLoadoutWidgetInventoryItemUnselected;                  // 0x0358(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BXEC[0x60];                                  // 0x0368(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UWidgetSwitcher*                                     ContainerWidgetSwitcher;                                 // 0x03C8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGBloodStoreWidget*                                BloodStoreWidget;                                        // 0x03D0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGLoadoutWidget*                                   LoadoutWidget;                                           // 0x03D8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGCharacterSelectionWidget*                        CharacterSelectionWidget;                                // 0x03E0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void BroadcastSlotClickedEvent(int32_t LoadoutSlot);
		void BroadcastItemUnSelectedEvent(int32_t itemIndex);
		void BroadcastItemSelectedEvent(int32_t itemIndex);
		void BroadcastCharacterSelectedEvent(int32_t characterIndex);
		void BroadcastCharacterRoleButtonClickedEvent();
		void BroadcastCharacterInfoButtonClickedEvent();
		void BroadcastBloodStoreRegenerate(int32_t characterId);
		void BroadcastBloodNodeSelected(int32_t characterId, int32_t nodeId, int32_t nodeDepth);
		void BroadcastBloodNodePurchase(int32_t characterId);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGTallyBloodpointsScoreWidget
	 * Size -> 0x0000 (FullSize[0x0338] - InheritedSize[0x0338])
	 */
	class UUMGTallyBloodpointsScoreWidget : public UMobileBaseUserWidget
	{
	public:
		void UpdateWidgetByScoreData(const class FText& Title, class UTexture2D* Asset, int32_t ScoreValue);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGTallyListElementWidget
	 * Size -> 0x0010 (FullSize[0x0348] - InheritedSize[0x0338])
	 */
	class UUMGTallyListElementWidget : public UMobileBaseUserWidget
	{
	public:
		int32_t                                                    ElementIndex;                                            // 0x0338(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FVector2D                                           WidgetSize;                                              // 0x033C(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_LBJW[0x4];                                   // 0x0344(0x0004) MISSED OFFSET (PADDING)

	public:
		void OnPlayInAnimation();
		void OnPageVisibilityChanged(bool IsVisible, bool wasInAnimationPlayed);
		void OnInAnimationFinished();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGTallyBloodpointsWidget
	 * Size -> 0x01A0 (FullSize[0x04E8] - InheritedSize[0x0348])
	 */
	class UUMGTallyBloodpointsWidget : public UUMGTallyListElementWidget
	{
	public:
		ESlateVisibility                                           _itemBoxVisibility;                                      // 0x0348(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_KIF1[0x7];                                   // 0x0349(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                _labelTotalScore;                                        // 0x0350(0x0018) BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected
		class FText                                                _labelItemTitle;                                         // 0x0368(0x0018) BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected
		class FText                                                _labelItemAddOnTitle;                                    // 0x0380(0x0018) BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected
		struct FLinearColor                                        _labelItemTitleColor;                                    // 0x0398(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UHorizontalBox*                                      BoxScoreCategory;                                        // 0x03A8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TMap<EDBDScoreCategory, struct FScoreCategoryUIExtraData>  _scoreCategoryExtraDataMap;                              // 0x03B0(0x0050) Edit, Transient, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_MZIS[0xE8];                                  // 0x0400(0x00E8) MISSED OFFSET (PADDING)

	public:
		void UpdateTallyTotalBloodpoints(int32_t totalValue);
		void UpdateTallyRewardWidget(const class FString& rewardName, int32_t existReward, int32_t addReward);
		void UpdateTallyItemWidget(const struct FTallyItemChangedData& Data);
		void ShowTallyItemWidget(bool isShow);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGTallyBonusVisualWidget
	 * Size -> 0x0058 (FullSize[0x0390] - InheritedSize[0x0338])
	 */
	class UUMGTallyBonusVisualWidget : public UMobileBaseUserWidget
	{
	public:
		unsigned char                                              MultiplierTextureMap[0x50];                              // 0x0338(0x0050) UNKNOWN PROPERTY: MapProperty
		class UImage*                                              MultiplierImage;                                         // 0x0388(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGTallyCharacterProgressionBar
	 * Size -> 0x0028 (FullSize[0x0360] - InheritedSize[0x0338])
	 */
	class UUMGTallyCharacterProgressionBar : public UMobileBaseUserWidget
	{
	public:
		unsigned char                                              UnknownData_XVQQ[0x20];                                  // 0x0338(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UProgressBar*                                        ProgressBar;                                             // 0x0358(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGTallyCharacterProgressionWidget
	 * Size -> 0x0088 (FullSize[0x03D0] - InheritedSize[0x0348])
	 */
	class UUMGTallyCharacterProgressionWidget : public UUMGTallyListElementWidget
	{
	public:
		class UUMGTallyCharacterProgressionBar*                    CharacterProgressionBar;                                 // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          TextCharacterCurrentExperience;                          // 0x0350(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          TextExperienceForNextLevel;                              // 0x0358(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          TextExperienceEarned;                                    // 0x0360(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          TextCurrentLevel;                                        // 0x0368(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              CharacterPicture;                                        // 0x0370(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              prestigeIcon;                                            // 0x0378(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          TextCharacterName;                                       // 0x0380(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                    ExperiencePerSecond;                                     // 0x0388(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_ESJY[0x44];                                  // 0x038C(0x0044) MISSED OFFSET (PADDING)

	public:
		void StartSequence();
		void StartNewLevel();
		void SetWidgetToFinalState();
		void OnFullBarOut();
		void OnFullBarIn();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGTallyEmblemMarker
	 * Size -> 0x0058 (FullSize[0x0390] - InheritedSize[0x0338])
	 */
	class UUMGTallyEmblemMarker : public UMobileBaseUserWidget
	{
	public:
		class UImage*                                              QualityImage;                                            // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TMap<EEmblemQuality, struct FEmblemQualityImages>          _qualityImages;                                          // 0x0340(0x0050) Edit, DisableEditOnInstance, NoClear, Protected, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGTallyEmblemProgressBar
	 * Size -> 0x0098 (FullSize[0x03D0] - InheritedSize[0x0338])
	 */
	class UUMGTallyEmblemProgressBar : public UMobileBaseUserWidget
	{
	public:
		class UProgressBar*                                        ProgressBar;                                             // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        QualityContainer;                                        // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              EmblemQualityClass[0x30];                                // 0x0348(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		struct FVector2D                                           _emblemQualityAlignment;                                 // 0x0378(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TMap<EEmblemQuality, struct FSlateBrush>                   _qualityFillImages;                                      // 0x0380(0x0050) Edit, DisableEditOnInstance, NoClear, Protected, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGTallyEmblemProgressionWidget
	 * Size -> 0x0070 (FullSize[0x03A8] - InheritedSize[0x0338])
	 */
	class UUMGTallyEmblemProgressionWidget : public UMobileBaseUserWidget
	{
	public:
		class UImage*                                              PositiveIcon;                                            // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              NegativeIcon;                                            // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          PercentText;                                             // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          descriptionText;                                         // 0x0350(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FSlateColor                                         WarningPercentColor;                                     // 0x0358(0x0028) Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		struct FSlateColor                                         WarningDescriptionColor;                                 // 0x0380(0x0028) Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGTallyEmblemsWidget
	 * Size -> 0x0048 (FullSize[0x0390] - InheritedSize[0x0348])
	 */
	class UUMGTallyEmblemsWidget : public UUMGTallyListElementWidget
	{
	public:
		unsigned char                                              EmblemWidgetClass[0x30];                                 // 0x0348(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		class UHorizontalBox*                                      EmblemsContainer;                                        // 0x0378(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<class UUMGTallyEmblemWidget*>                       _emblems;                                                // 0x0380(0x0010) ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate

	public:
		TArray<class UUMGTallyEmblemWidget*> GetEmblems();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGTallyEmblemWidget
	 * Size -> 0x0060 (FullSize[0x0398] - InheritedSize[0x0338])
	 */
	class UUMGTallyEmblemWidget : public UMobileBaseUserWidget
	{
	public:
		TMap<EEmblemQuality, class UTexture2D*>                    _emblemBackgrounds;                                      // 0x0338(0x0050) Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
		class UImage*                                              BackgroundImage;                                         // 0x0388(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              IconImage;                                               // 0x0390(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void PlayFadeInAnimation();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGTallyListWidget
	 * Size -> 0x00F0 (FullSize[0x0558] - InheritedSize[0x0468])
	 */
	class UUMGTallyListWidget : public UUMGPageScrollWidget
	{
	public:
		class FText                                                TopLeftText;                                             // 0x0468(0x0018) BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected
		class FText                                                TopRightText;                                            // 0x0480(0x0018) BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        ListBGPanel;                                             // 0x0498(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		EPlayerRole                                                _playerRole;                                             // 0x04A0(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_3U17[0x7];                                   // 0x04A1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              _inAnimationPlayedPages[0x50];                           // 0x04A8(0x0050) UNKNOWN PROPERTY: SetProperty
		TMap<ETallyListPageID, class UUMGTallyListElementWidget*>  _listItemWidgets;                                        // 0x04F8(0x0050) ExportObject, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_WMUP[0x10];                                  // 0x0548(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGTallyPip
	 * Size -> 0x0010 (FullSize[0x0348] - InheritedSize[0x0338])
	 */
	class UUMGTallyPip : public UMobileBaseUserWidget
	{
	public:
		class UImage*                                              Filling;                                                 // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_PCW2[0x8];                                   // 0x0340(0x0008) MISSED OFFSET (PADDING)

	public:
		void HideFilling();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGTallyPipsContainer
	 * Size -> 0x0038 (FullSize[0x0370] - InheritedSize[0x0338])
	 */
	class UUMGTallyPipsContainer : public UMobileBaseUserWidget
	{
	public:
		class UHorizontalBox*                                      PipsContainer;                                           // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              _pipsClasses[0x10];                                      // 0x0340(0x0010) UNKNOWN PROPERTY: ArrayProperty
		struct FMargin                                             _pipsPadding;                                            // 0x0350(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected
		TArray<class UUMGTallyPip*>                                Pips;                                                    // 0x0360(0x0010) ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected

	public:
		void SetData(int32_t Rank, int32_t PipsRequiredForNextRank, int32_t filledPips);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGTallyPlayerLevelWidget
	 * Size -> 0x0048 (FullSize[0x0390] - InheritedSize[0x0348])
	 */
	class UUMGTallyPlayerLevelWidget : public UUMGTallyListElementWidget
	{
	public:
		unsigned char                                              UnknownData_KU81[0x48];                                  // 0x0348(0x0048) MISSED OFFSET (PADDING)

	public:
		void OnSetInitialPlayerXp(int32_t initialXp, const struct FPlayerLevelData& initialLevelData);
		void OnSetFinalPlayerXp(int32_t finalXp, TArray<struct FPlayerLevelData> reachedLevels, TArray<struct FXpBonusData> xpBonuses, TArray<struct FRewardItemData> rewardsEarned);
		TArray<struct FXpBonusData> GetXpBonuses();
		TArray<struct FRewardItemData> GetRewardsEarned();
		TArray<struct FPlayerLevelData> GetReachedLevels();
		int32_t GetInitialXp();
		int32_t GetFinalXp();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGTallyProgressBar
	 * Size -> 0x0028 (FullSize[0x0360] - InheritedSize[0x0338])
	 */
	class UUMGTallyProgressBar : public UMobileBaseUserWidget
	{
	public:
		class UProgressBar*                                        ProgressBar;                                             // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        PipsContainer;                                           // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              _pipsClasses[0x10];                                      // 0x0348(0x0010) UNKNOWN PROPERTY: ArrayProperty
		struct FVector2D                                           _pipsAlignment;                                          // 0x0358(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void SetPercent(float value);
		int32_t GetPipsCount();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGTallyRankBanner
	 * Size -> 0x0018 (FullSize[0x0350] - InheritedSize[0x0338])
	 */
	class UUMGTallyRankBanner : public UMobileBaseUserWidget
	{
	public:
		class UUMGTallyPipsContainer*                              PipsContainerWidget;                                     // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGRankBanner*                                      RankBanner;                                              // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              SmokeBackground;                                         // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void SetAsLocked(bool locked);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGTallyRankFrame
	 * Size -> 0x0010 (FullSize[0x0348] - InheritedSize[0x0338])
	 */
	class UUMGTallyRankFrame : public UMobileBaseUserWidget
	{
	public:
		class UImage*                                              Frame;                                                   // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          label;                                                   // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void SetData(int32_t Rank, EPlayerRole PlayerRole);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGTallyRankWidget
	 * Size -> 0x00A0 (FullSize[0x03E8] - InheritedSize[0x0348])
	 */
	class UUMGTallyRankWidget : public UUMGTallyListElementWidget
	{
	public:
		struct FMargin                                             _emblemsPadding;                                         // 0x0348(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected
		unsigned char                                              EmblemWidgetClass[0x30];                                 // 0x0358(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		class UHorizontalBox*                                      EmblemsContainer;                                        // 0x0388(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGTallyProgressBar*                                ProgressBar;                                             // 0x0390(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGTallyRankBanner*                                 RankBanner;                                              // 0x0398(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          RankProgressLabel;                                       // 0x03A0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<class UUMGTallyEmblemWidget*>                       _emblems;                                                // 0x03A8(0x0010) ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
		struct FTallyScorePipsData                                 _scoreData;                                              // 0x03B8(0x0030) Transient, NativeAccessSpecifierPrivate

	public:
		struct FTallyScorePipsData GetScoreData();
		TArray<class UUMGTallyEmblemWidget*> GetEmblems();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGTallyScoreboardPlayerInfoWidget
	 * Size -> 0x0320 (FullSize[0x06B0] - InheritedSize[0x0390])
	 */
	class UUMGTallyScoreboardPlayerInfoWidget : public UUMGLoadoutBaseWidget
	{
	public:
		class FScriptMulticastDelegate                             OnTallyScoreboardAddFriendEvent;                         // 0x0390(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnTallyScoreboardReportEvent;                            // 0x03A0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class UImage*                                              ImageHorizontalSeparation;                               // 0x03B0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTallyPlayerResultData                              PlayerResultData;                                        // 0x03B8(0x02F0) BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected
		bool                                                       LoadoutIsBlocked;                                        // 0x06A8(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_ETP0[0x7];                                   // 0x06A9(0x0007) MISSED OFFSET (PADDING)

	public:
		void UpdateWidget();
		void UpdateReported();
		void UpdateLoadout();
		void SetPlayerScoreData(const struct FTallyPlayerResultData& resultData);
		void SetPlayerReported(bool isReport);
		void SetPlayerLoadoutBlocked(bool isBlock);
		void HandleReportEvent(const class FName& buttonId);
		void HandleAddFriendEvent(const class FName& buttonId);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGTallyScoreboardWidget
	 * Size -> 0x00A0 (FullSize[0x03E8] - InheritedSize[0x0348])
	 */
	class UUMGTallyScoreboardWidget : public UUMGTallyListElementWidget
	{
	public:
		class FScriptMulticastDelegate                             OnTallyScoreboardAddFriendEvent;                         // 0x0348(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnTallyScoreboardReportEvent;                            // 0x0358(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FText                                                LabelTextRank;                                           // 0x0368(0x0018) BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected
		class FText                                                LabelTextScore;                                          // 0x0380(0x0018) BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected
		class FText                                                LabelTextStatus;                                         // 0x0398(0x0018) BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected
		class UUMGTallyScoreboardPlayerInfoWidget*                 KillerWidget;                                            // 0x03B0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGTallyScoreboardPlayerInfoWidget*                 FirstSurvivorWidget;                                     // 0x03B8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGTallyScoreboardPlayerInfoWidget*                 SecondSurvivorWidget;                                    // 0x03C0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGTallyScoreboardPlayerInfoWidget*                 ThirdSurvivorWidget;                                     // 0x03C8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUMGTallyScoreboardPlayerInfoWidget*                 FourthSurvivorWidget;                                    // 0x03D0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<class UUMGTallyScoreboardPlayerInfoWidget*>         SurvivorWidgets;                                         // 0x03D8(0x0010) ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate

	public:
		void SetFadeOut();
		void HandleReportEvent(const class FString& playerID);
		void HandleAddFriendEvent(const class FString& playerID);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGTeachablePerkButton
	 * Size -> 0x0160 (FullSize[0x0498] - InheritedSize[0x0338])
	 */
	class UUMGTeachablePerkButton : public UMobileBaseUserWidget
	{
	public:
		class UPerkActionButton*                                   TeachablePerkButton;                                     // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UImage*                                              LockedStatusIcon;                                        // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTeachableData                                      _teachableData;                                          // 0x0348(0x0140) BlueprintVisible, Transient, Protected, NativeAccessSpecifierProtected
		class FScriptMulticastDelegate                             _onTeachablePerkTooltipLongPressEvent;                   // 0x0488(0x0010) ZeroConstructor, InstancedReference, NativeAccessSpecifierPrivate

	public:
		void HandleTooltipLongPressedEvent(const struct FInventorySlotData& ItemData, const struct FVector2D& position);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGToastNotificationScreen
	 * Size -> 0x0168 (FullSize[0x04A0] - InheritedSize[0x0338])
	 */
	class UUMGToastNotificationScreen : public UMobileBaseUserWidget
	{
	public:
		unsigned char                                              NotificationToast[0x30];                                 // 0x0338(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              InvitationPartyToast[0x30];                              // 0x0368(0x0030) UNKNOWN PROPERTY: SoftClassProperty
		class UVerticalBox*                                        ToastsContainer;                                         // 0x0398(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_V0XH[0x30];                                  // 0x03A0(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<uint32_t, class UUMGBaseToastWidget*>                 _toastsDisplayedOnScreen;                                // 0x03D0(0x0050) ExportObject, ContainsInstancedReference, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_3ZNS[0x80];                                  // 0x0420(0x0080) MISSED OFFSET (PADDING)

	public:
		void HandleOnPromptSelected(int32_t notificationId);
		void HandleOnNotificationDisplayEnd(int32_t notificationId);
		void HandleOnButtonSelected(int32_t buttonId, int32_t notificationId);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGTooltipContentPlayerLevelWidget
	 * Size -> 0x0030 (FullSize[0x0368] - InheritedSize[0x0338])
	 */
	class UUMGTooltipContentPlayerLevelWidget : public UMobileBaseUserWidget
	{
	public:
		class FText                                                PlayerLevelText;                                         // 0x0338(0x0018) BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		class UUMGLevelBannerWidget*                               LevelBanner;                                             // 0x0350(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class URichTextBlock*                                      LevelExperienceRichText;                                 // 0x0358(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          ExperienceToNextLevelText;                               // 0x0360(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void SetInfo(int32_t PlayerLevel, int32_t PlayerPrestige, int32_t CurrentExperience, int32_t NextLevelExperience);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UMGUtilities
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UUMGUtilities : public UBlueprintFunctionLibrary
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UnbrokenPalletsRestrictedPlacementAreaStrategy
	 * Size -> 0x0020 (FullSize[0x00C0] - InheritedSize[0x00A0])
	 */
	class UUnbrokenPalletsRestrictedPlacementAreaStrategy : public URestrictedPlacementAreaStrategy
	{
	public:
		TArray<class APallet*>                                     _unbrokenPallets;                                        // 0x00A0(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		class FName                                                _palletCollisionBoxWhenDroppedTagName;                   // 0x00B0(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_D4I7[0x4];                                   // 0x00BC(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UnlockPersonalPerksPopupScreen
	 * Size -> 0x0000 (FullSize[0x0140] - InheritedSize[0x0140])
	 */
	class UUnlockPersonalPerksPopupScreen : public UGenericPopupScreen
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.UsableWithPerkFlagPerkIconStrategy
	 * Size -> 0x0018 (FullSize[0x0050] - InheritedSize[0x0038])
	 */
	class UUsableWithPerkFlagPerkIconStrategy : public UBasePerkIconStrategy
	{
	public:
		TArray<struct FGameplayTag>                                _perkTagsOnPlayer;                                       // 0x0038(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
		bool                                                       _playerShouldHaveTags;                                   // 0x0048(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_X6C6[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.VaultableComponent
	 * Size -> 0x0020 (FullSize[0x00D8] - InheritedSize[0x00B8])
	 */
	class UVaultableComponent : public UActorComponent
	{
	public:
		class FScriptMulticastDelegate                             OnVault;                                                 // 0x00B8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_K9JX[0x10];                                  // 0x00C8(0x0010) MISSED OFFSET (PADDING)

	public:
		void SignalVault(class ADBDPlayer* Survivor, float InteractionTime);
		void OnChaseEnded(class ADBDPlayer* Survivor, float ChaseTimer);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.VaultFastDefintion
	 * Size -> 0x0008 (FullSize[0x0660] - InheritedSize[0x0658])
	 */
	class UVaultFastDefintion : public UVaultDefinition
	{
	public:
		unsigned char                                              UnknownData_RYA6[0x8];                                   // 0x0658(0x0008) Fix Super Size

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.VersioningUtilities
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UVersioningUtilities : public UBlueprintFunctionLibrary
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.VisibleHatchRestrictedPlacementAreaStrategy
	 * Size -> 0x0008 (FullSize[0x00A8] - InheritedSize[0x00A0])
	 */
	class UVisibleHatchRestrictedPlacementAreaStrategy : public URestrictedPlacementAreaStrategy
	{
	public:
		unsigned char                                              UnknownData_483Z[0x8];                                   // 0x00A0(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.VomitStateComponent
	 * Size -> 0x0038 (FullSize[0x00F0] - InheritedSize[0x00B8])
	 */
	class UVomitStateComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_JVXT[0x8];                                   // 0x00B8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTagStateBool                                       _isCharging;                                             // 0x00C0(0x0030) HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void SetVomitState(ELinkedVomitState newVomitState);
		void SetObjectState(class UGameplayTagContainerComponent* objectState);
		bool IsVomiting();
		ELinkedVomitState getVomitState();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.WakerObject
	 * Size -> 0x0030 (FullSize[0x0358] - InheritedSize[0x0328])
	 */
	class AWakerObject : public AInteractable
	{
	public:
		unsigned char                                              UnknownData_9691[0x8];                                   // 0x0328(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCamperDreamworldComponent*                          _linkedCamperDreamworldComponent;                        // 0x0330(0x0008) ExportObject, Net, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       IsInteracting;                                           // 0x0338(0x0001) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       _chargeComplete;                                         // 0x0339(0x0001) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_J0KV[0x1E];                                  // 0x033A(0x001E) MISSED OFFSET (PADDING)

	public:
		void UpdateVisibilityAndOutline();
		void SetChargeComplete(bool complete);
		void OnRep_LinkedCamperChanged(class UCamperDreamworldComponent* Previous);
		void OnNewLinkedCamper(class UCamperDreamworldComponent* dreamworldComponent);
		void OnLinkedCamperDreamStateChanged(bool IsInDreamworld, bool locallyObservedChanged);
		void OnAnyCamperDreamStateChanged(bool IsInDreamworld, bool locallyObservedChanged);
		void LinkCampersOnLevelReadyToPlay();
		bool IsLinkedToCamper(class ADBDPlayer* camper);
		bool HasLinkedCamper();
		class USkeletalMeshComponent* GetMesh();
		bool GetIsInteracting();
		class UPrimitiveComponent* GetInteractorPrimitiveComponent();
		float GetInteractionPercentComplete();
		bool GetChargeComplete();
		bool CanWakeUpCamper(class ADBDPlayer* camper);
		void BindToCamperDreamStateChanged(class ADBDPlayer* Player);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.WalesCypherHandler
	 * Size -> 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
	 */
	class UWalesCypherHandler : public ULocalPlayerSubsystem
	{
	public:
		class UWalesCypherParameters*                              _walesCypherParams;                                      // 0x0038(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_3JGP[0x8];                                   // 0x0040(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.WalesCypherParameters
	 * Size -> 0x0018 (FullSize[0x0050] - InheritedSize[0x0038])
	 */
	class UWalesCypherParameters : public UDataAsset
	{
	public:
		class FString                                              AUDIO_EVENT;                                             // 0x0038(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SLASHER_INDEX;                                           // 0x0048(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CAMPER_INDEX;                                            // 0x004C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.WalletHandler
	 * Size -> 0x0140 (FullSize[0x0170] - InheritedSize[0x0030])
	 */
	class UWalletHandler : public UObject
	{
	public:
		unsigned char                                              UnknownData_3OEL[0x140];                                 // 0x0030(0x0140) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.WeightedElement
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UWeightedElement : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.WiggleWidget
	 * Size -> 0x0020 (FullSize[0x0358] - InheritedSize[0x0338])
	 */
	class UWiggleWidget : public UMobileBaseUserWidget
	{
	public:
		float                                                      TimeBetweenAnimationStart;                               // 0x0338(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_BUUG[0x4];                                   // 0x033C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMobileBaseUserWidget*                               WiggleButtonLeft;                                        // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UMobileBaseUserWidget*                               WiggleButtonRight;                                       // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_8RME[0x8];                                   // 0x0350(0x0008) MISSED OFFSET (PADDING)

	public:
		void BecomeUnavailable();
		void BecomeAvailable();
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.Window
	 * Size -> 0x0108 (FullSize[0x0430] - InheritedSize[0x0328])
	 */
	class AWindow : public AInteractable
	{
	public:
		struct FNativeBlockIndicatorData                           NativeSmokeOtherIndicatorData;                           // 0x0328(0x0018) Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected
		struct FNativeBlockIndicatorData                           NativeEntityIndicatorData;                               // 0x0340(0x0018) Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected
		struct FNativeBlockIndicatorData                           NativeSmokeSelfIndicatorData;                            // 0x0358(0x0018) Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected
		class UPrimitiveComponent*                                 _windowCollider;                                         // 0x0370(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       _isBlockedByLevel;                                       // 0x0378(0x0001) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_O7ON[0x7];                                   // 0x0379(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UChildActorComponent*                                _entityAssets;                                           // 0x0380(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UMaterialHelper*                                     _materialHelper;                                         // 0x0388(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UAkComponent*                                        _akAudioWindow;                                          // 0x0390(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UAkAudioEvent*                                       akAudioEventWindowsBlocStart;                            // 0x0398(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UAkAudioEvent*                                       akAudioEventWindowsBlocStop;                             // 0x03A0(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TMap<class ACamperPlayer*, struct FVaultData>              _survivorVaultData;                                      // 0x03A8(0x0050) Transient, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_SLNY[0x8];                                   // 0x03F8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ULocalPlayerTrackerComponent*                        _localPlayerTracker;                                     // 0x0400(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UBlockableComponent*                                 _blockableComponent;                                     // 0x0408(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_GGW1[0x10];                                  // 0x0410(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UDBDNavEvadeLoopComponent*                           _navEvadeLoopComponent;                                  // 0x0420(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_JMGV[0x8];                                   // 0x0428(0x0008) MISSED OFFSET (PADDING)

	public:
		void OnRep_blockedByLevel();
		void OnLocallyObservedChanged();
		void OnFastVault(class ADBDPlayer* Player, class UInteractionDefinition* Interaction);
		void NotifyOnFastVault(class ADBDPlayer* Player, class UInteractionDefinition* Interaction);
		bool IsWindowVaultBlockedForAnyPlayer();
		bool IsWindowVaultBlockedFor(class ADBDPlayer* Player);
		class UMaterialHelper* GetMaterialHelper();
		class UChildActorComponent* GetEntityAssets();
		bool GetBlockedByLevel();
		class UAkComponent* GetAudioComponent();
		void ForceBlockLocalWindowInteraction(bool blockInteraction);
		void Authority_SetBlockedByLevel(bool isBlockedByLevel);
		void Authority_OnVaultInternal(class ADBDPlayer* Player, bool canBlockVault);
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.XboxProfileDAL
	 * Size -> 0x0000 (FullSize[0x0088] - InheritedSize[0x0088])
	 */
	class UXboxProfileDAL : public UPlayerProfileDAL
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class DeadByDaylight.ZoneDetectorComponent
	 * Size -> 0x0038 (FullSize[0x00F0] - InheritedSize[0x00B8])
	 */
	class UZoneDetectorComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_U3RV[0x18];                                  // 0x00B8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UPrimitiveComponent*>                         _zones;                                                  // 0x00D0(0x0010) ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
		TArray<class FName>                                        _tags;                                                   // 0x00E0(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate

	public:
		void OnOverlapExit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex);
		void OnOverlapEnter(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
		static UClass* StaticClass();
	};

}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
